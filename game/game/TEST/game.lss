
game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800200  0000151e  000015b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000151e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011c  008002e2  008002e2  00001694  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001694  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001720  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025d0  00000000  00000000  000018e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012f6  00000000  00000000  00003eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d91  00000000  00000000  000051a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000654  00000000  00000000  00005f38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b0d  00000000  00000000  0000658c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b27  00000000  00000000  00007099  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  00008bc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	d6 c3       	rjmp	.+1964   	; 0x812 <__vector_25>
      66:	00 00       	nop
      68:	15 c4       	rjmp	.+2090   	; 0x894 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4c c4       	rjmp	.+2200   	; 0x92a <__vector_36>
      92:	00 00       	nop
      94:	8b c4       	rjmp	.+2326   	; 0x9ac <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ba c4       	rjmp	.+2420   	; 0xa42 <__vector_51>
      ce:	00 00       	nop
      d0:	f9 c4       	rjmp	.+2546   	; 0xac4 <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	40 c5       	rjmp	.+2688   	; 0xb5a <__vector_54>
      da:	00 00       	nop
      dc:	7f c5       	rjmp	.+2814   	; 0xbdc <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e1       	ldi	r30, 0x1E	; 30
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 3e       	cpi	r26, 0xE2	; 226
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a2 ee       	ldi	r26, 0xE2	; 226
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ae 3f       	cpi	r26, 0xFE	; 254
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	a8 d0       	rcall	.+336    	; 0x270 <main>
     120:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <get_array>:
	{
		output_value(*array_p);
		array_p++;
	}
	*(self->array) = *(self->beginning);
}
     126:	fc 01       	movw	r30, r24
     128:	80 81       	ld	r24, Z
     12a:	91 81       	ldd	r25, Z+1	; 0x01
     12c:	08 95       	ret

0000012e <get_beginning>:
     12e:	fc 01       	movw	r30, r24
     130:	82 81       	ldd	r24, Z+2	; 0x02
     132:	93 81       	ldd	r25, Z+3	; 0x03
     134:	08 95       	ret

00000136 <increment_size>:
     136:	fc 01       	movw	r30, r24
     138:	26 81       	ldd	r18, Z+6	; 0x06
     13a:	37 81       	ldd	r19, Z+7	; 0x07
     13c:	2f 5f       	subi	r18, 0xFF	; 255
     13e:	3f 4f       	sbci	r19, 0xFF	; 255
     140:	37 83       	std	Z+7, r19	; 0x07
     142:	26 83       	std	Z+6, r18	; 0x06
     144:	08 95       	ret

00000146 <seq_create>:
     146:	0f 93       	push	r16
     148:	1f 93       	push	r17
     14a:	cf 93       	push	r28
     14c:	df 93       	push	r29
     14e:	8c 01       	movw	r16, r24
     150:	88 e0       	ldi	r24, 0x08	; 8
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	ca d5       	rcall	.+2964   	; 0xcea <malloc>
     156:	ec 01       	movw	r28, r24
     158:	62 e0       	ldi	r22, 0x02	; 2
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	c8 01       	movw	r24, r16
     15e:	ab d5       	rcall	.+2902   	; 0xcb6 <calloc>
     160:	99 83       	std	Y+1, r25	; 0x01
     162:	88 83       	st	Y, r24
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	1f 82       	std	Y+7, r1	; 0x07
     16a:	1e 82       	std	Y+6, r1	; 0x06
     16c:	1d 83       	std	Y+5, r17	; 0x05
     16e:	0c 83       	std	Y+4, r16	; 0x04
     170:	ce 01       	movw	r24, r28
     172:	df 91       	pop	r29
     174:	cf 91       	pop	r28
     176:	1f 91       	pop	r17
     178:	0f 91       	pop	r16
     17a:	08 95       	ret

0000017c <copy_seq>:
	_delay_ms(1000);
	PORTA = 0xff;
}

seq_t copy_seq(seq_t self, seq_t new_self)
{
     17c:	0f 93       	push	r16
     17e:	1f 93       	push	r17
     180:	cf 93       	push	r28
     182:	df 93       	push	r29
     184:	8c 01       	movw	r16, r24
     186:	eb 01       	movw	r28, r22
	int i;
	int *array_p = self->array;  
     188:	fc 01       	movw	r30, r24
     18a:	30 81       	ld	r19, Z
     18c:	21 81       	ldd	r18, Z+1	; 0x01
	int *new_array_p = new_self->array;
     18e:	a8 81       	ld	r26, Y
     190:	b9 81       	ldd	r27, Y+1	; 0x01
	self->size++;
}

void reset_array_p(seq_t self)
{
	self->array = self->beginning;
     192:	82 81       	ldd	r24, Z+2	; 0x02
     194:	93 81       	ldd	r25, Z+3	; 0x03
     196:	91 83       	std	Z+1, r25	; 0x01
     198:	80 83       	st	Z, r24
     19a:	8a 81       	ldd	r24, Y+2	; 0x02
     19c:	9b 81       	ldd	r25, Y+3	; 0x03
     19e:	99 83       	std	Y+1, r25	; 0x01
     1a0:	88 83       	st	Y, r24
	int *new_array_p = new_self->array;
	
	reset_array_p(self);
	reset_array_p(new_self);
	
	for(i = 0; i < self->size; i++)
     1a2:	86 81       	ldd	r24, Z+6	; 0x06
     1a4:	97 81       	ldd	r25, Z+7	; 0x07
     1a6:	18 16       	cp	r1, r24
     1a8:	19 06       	cpc	r1, r25
     1aa:	bc f4       	brge	.+46     	; 0x1da <copy_seq+0x5e>
     1ac:	43 2f       	mov	r20, r19
     1ae:	52 2f       	mov	r21, r18
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
	{
		*new_array_p = *array_p;
     1b4:	fa 01       	movw	r30, r20
     1b6:	81 91       	ld	r24, Z+
     1b8:	91 91       	ld	r25, Z+
     1ba:	af 01       	movw	r20, r30
     1bc:	8d 93       	st	X+, r24
     1be:	9d 93       	st	X+, r25
	return self->max_size;
}

void increment_size(seq_t self)
{
	self->size++;
     1c0:	8e 81       	ldd	r24, Y+6	; 0x06
     1c2:	9f 81       	ldd	r25, Y+7	; 0x07
     1c4:	01 96       	adiw	r24, 0x01	; 1
     1c6:	9f 83       	std	Y+7, r25	; 0x07
     1c8:	8e 83       	std	Y+6, r24	; 0x06
	int *new_array_p = new_self->array;
	
	reset_array_p(self);
	reset_array_p(new_self);
	
	for(i = 0; i < self->size; i++)
     1ca:	2f 5f       	subi	r18, 0xFF	; 255
     1cc:	3f 4f       	sbci	r19, 0xFF	; 255
     1ce:	f8 01       	movw	r30, r16
     1d0:	86 81       	ldd	r24, Z+6	; 0x06
     1d2:	97 81       	ldd	r25, Z+7	; 0x07
     1d4:	28 17       	cp	r18, r24
     1d6:	39 07       	cpc	r19, r25
     1d8:	6c f3       	brlt	.-38     	; 0x1b4 <copy_seq+0x38>
	self->size++;
}

void reset_array_p(seq_t self)
{
	self->array = self->beginning;
     1da:	8a 81       	ldd	r24, Y+2	; 0x02
     1dc:	9b 81       	ldd	r25, Y+3	; 0x03
     1de:	99 83       	std	Y+1, r25	; 0x01
     1e0:	88 83       	st	Y, r24
		new_array_p++;
	}
	
	reset_array_p(new_self);
	
	free(self->array);
     1e2:	f8 01       	movw	r30, r16
     1e4:	80 81       	ld	r24, Z
     1e6:	91 81       	ldd	r25, Z+1	; 0x01
     1e8:	18 d6       	rcall	.+3120   	; 0xe1a <free>
	free(self);
     1ea:	c8 01       	movw	r24, r16
     1ec:	16 d6       	rcall	.+3116   	; 0xe1a <free>
	
	return new_self;
}
     1ee:	ce 01       	movw	r24, r28
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	1f 91       	pop	r17
     1f6:	0f 91       	pop	r16
     1f8:	08 95       	ret

000001fa <seq_expand>:

seq_t seq_expand(seq_t self)
{
     1fa:	0f 93       	push	r16
     1fc:	1f 93       	push	r17
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	8c 01       	movw	r16, r24
	seq_t new_seq;  //variable creation    
		
	int new_size = self->size + 50 ; // access size field of self
	new_seq = seq_create(new_size);
     204:	fc 01       	movw	r30, r24
     206:	86 81       	ldd	r24, Z+6	; 0x06
     208:	97 81       	ldd	r25, Z+7	; 0x07
     20a:	c2 96       	adiw	r24, 0x32	; 50
     20c:	9c df       	rcall	.-200    	; 0x146 <seq_create>
     20e:	ec 01       	movw	r28, r24
	
	copy_seq(self, new_seq);
     210:	bc 01       	movw	r22, r24
     212:	c8 01       	movw	r24, r16
     214:	b3 df       	rcall	.-154    	; 0x17c <copy_seq>
	  seq_t *new_seq= malloc(sizeof(seq_t));            allocates memory for the expanded struct 
	  new_seq->beginning = (*new_seq).array;
	  new_seq->size = 0;                    cuz' you are not able to check the size of the array with pointer , must keep track of size*/
	
	return new_seq;
}
     216:	ce 01       	movw	r24, r28
     218:	df 91       	pop	r29
     21a:	cf 91       	pop	r28
     21c:	1f 91       	pop	r17
     21e:	0f 91       	pop	r16
     220:	08 95       	ret

00000222 <seq_add_to>:
	new_seq->max_size = size;
	return new_seq;
}

void seq_add_to(seq_t self, int value) 
{
     222:	0f 93       	push	r16
     224:	1f 93       	push	r17
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	ec 01       	movw	r28, r24
     22c:	8b 01       	movw	r16, r22
	if (self->size == self->max_size) {
     22e:	2e 81       	ldd	r18, Y+6	; 0x06
     230:	3f 81       	ldd	r19, Y+7	; 0x07
     232:	8c 81       	ldd	r24, Y+4	; 0x04
     234:	9d 81       	ldd	r25, Y+5	; 0x05
     236:	28 17       	cp	r18, r24
     238:	39 07       	cpc	r19, r25
     23a:	11 f4       	brne	.+4      	; 0x240 <seq_add_to+0x1e>
		seq_expand(self);
     23c:	ce 01       	movw	r24, r28
     23e:	dd df       	rcall	.-70     	; 0x1fa <seq_expand>
	}
	reset_array_p(self);
	self->array += self->size;
	*(self->array) = value;
     240:	ee 81       	ldd	r30, Y+6	; 0x06
     242:	ff 81       	ldd	r31, Y+7	; 0x07
     244:	ee 0f       	add	r30, r30
     246:	ff 1f       	adc	r31, r31
     248:	8a 81       	ldd	r24, Y+2	; 0x02
     24a:	9b 81       	ldd	r25, Y+3	; 0x03
     24c:	e8 0f       	add	r30, r24
     24e:	f9 1f       	adc	r31, r25
     250:	11 83       	std	Z+1, r17	; 0x01
     252:	00 83       	st	Z, r16
	return self->max_size;
}

void increment_size(seq_t self)
{
	self->size++;
     254:	8e 81       	ldd	r24, Y+6	; 0x06
     256:	9f 81       	ldd	r25, Y+7	; 0x07
     258:	01 96       	adiw	r24, 0x01	; 1
     25a:	9f 83       	std	Y+7, r25	; 0x07
     25c:	8e 83       	std	Y+6, r24	; 0x06
}

void reset_array_p(seq_t self)
{
	self->array = self->beginning;
     25e:	8a 81       	ldd	r24, Y+2	; 0x02
     260:	9b 81       	ldd	r25, Y+3	; 0x03
     262:	99 83       	std	Y+1, r25	; 0x01
     264:	88 83       	st	Y, r24
	reset_array_p(self);
	self->array += self->size;
	*(self->array) = value;
	increment_size(self);
	reset_array_p(self);
}
     266:	df 91       	pop	r29
     268:	cf 91       	pop	r28
     26a:	1f 91       	pop	r17
     26c:	0f 91       	pop	r16
     26e:	08 95       	ret

00000270 <main>:
	return 0;
}

#ifdef TEST
int main()
{
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	00 d0       	rcall	.+0      	; 0x276 <main+0x6>
     276:	1f 92       	push	r1
     278:	cd b7       	in	r28, 0x3d	; 61
     27a:	de b7       	in	r29, 0x3e	; 62
	init_stdio(0, 10000000L);
     27c:	40 e8       	ldi	r20, 0x80	; 128
     27e:	56 e9       	ldi	r21, 0x96	; 150
     280:	68 e9       	ldi	r22, 0x98	; 152
     282:	70 e0       	ldi	r23, 0x00	; 0
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	8c d1       	rcall	.+792    	; 0x5a0 <init_stdio>
	sei();
     288:	78 94       	sei
	
	DDRA = 0xff;
     28a:	8f ef       	ldi	r24, 0xFF	; 255
     28c:	81 b9       	out	0x01, r24	; 1
	PORTA = 0xff;
     28e:	82 b9       	out	0x02, r24	; 2
	PORTA = ~2;
     290:	8d ef       	ldi	r24, 0xFD	; 253
     292:	82 b9       	out	0x02, r24	; 2

int tests_run = 0;
 
static char * test_seq_create()
{
	printf("\rI'm in the function\n\r");
     294:	81 e6       	ldi	r24, 0x61	; 97
     296:	92 e0       	ldi	r25, 0x02	; 2
     298:	9f 93       	push	r25
     29a:	8f 93       	push	r24
     29c:	4e d6       	rcall	.+3228   	; 0xf3a <printf>
	int size = 10, i, value, *array_start;
	seq_t item = seq_create(size);
     29e:	8a e0       	ldi	r24, 0x0A	; 10
     2a0:	90 e0       	ldi	r25, 0x00	; 0
	
	array_start = get_array(item);
     2a2:	51 df       	rcall	.-350    	; 0x146 <seq_create>
     2a4:	40 df       	rcall	.-384    	; 0x126 <get_array>
	
	for(i = 0; i < 10; i++)
	{
		value = *array_start;
		mu_assert("element != 0", value == 0);
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 81       	ld	r18, Z
     2ae:	31 81       	ldd	r19, Z+1	; 0x01
     2b0:	23 2b       	or	r18, r19
     2b2:	09 f4       	brne	.+2      	; 0x2b6 <main+0x46>
     2b4:	55 c1       	rjmp	.+682    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     2b6:	cb c0       	rjmp	.+406    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	
	array_start = get_array(item);
	
	for(i = 0; i < 10; i++)
	{
		value = *array_start;
     2b8:	21 91       	ld	r18, Z+
     2ba:	31 91       	ld	r19, Z+
		mu_assert("element != 0", value == 0);
     2bc:	23 2b       	or	r18, r19
     2be:	09 f0       	breq	.+2      	; 0x2c2 <main+0x52>
     2c0:	c6 c0       	rjmp	.+396    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	int size = 10, i, value, *array_start;
	seq_t item = seq_create(size);
	
	array_start = get_array(item);
	
	for(i = 0; i < 10; i++)
     2c2:	8e 17       	cp	r24, r30
     2c4:	9f 07       	cpc	r25, r31
     2c6:	c1 f7       	brne	.-16     	; 0x2b8 <main+0x48>
     2c8:	a8 c0       	rjmp	.+336    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
     2ca:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     2ce:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     2d2:	01 96       	adiw	r24, 0x01	; 1
     2d4:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
     2d8:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
	return 0;
}

static char * test_copy_seq()
{
	printf("\rIm in the copySeq\n");
     2dc:	88 e7       	ldi	r24, 0x78	; 120
     2de:	92 e0       	ldi	r25, 0x02	; 2
	int size1 = 5, size2 =10;
	int  i , j, value1, value2;
	int *array1_p, *array2_p;
		
	seq_t struct1 = seq_create(size1);
     2e0:	3f d6       	rcall	.+3198   	; 0xf60 <puts>
     2e2:	85 e0       	ldi	r24, 0x05	; 5
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	2f df       	rcall	.-418    	; 0x146 <seq_create>
	seq_t struct2 = seq_create(size2);
     2e8:	7c 01       	movw	r14, r24
     2ea:	8a e0       	ldi	r24, 0x0A	; 10
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	2b df       	rcall	.-426    	; 0x146 <seq_create>
     2f0:	9a 83       	std	Y+2, r25	; 0x02
	
	array1_p = get_array(struct1);
     2f2:	89 83       	std	Y+1, r24	; 0x01
     2f4:	c7 01       	movw	r24, r14
     2f6:	17 df       	rcall	.-466    	; 0x126 <get_array>
     2f8:	9c 83       	std	Y+4, r25	; 0x04
     2fa:	8b 83       	std	Y+3, r24	; 0x03
	array2_p = get_array(struct2);
     2fc:	89 81       	ldd	r24, Y+1	; 0x01
     2fe:	9a 81       	ldd	r25, Y+2	; 0x02
     300:	12 df       	rcall	.-476    	; 0x126 <get_array>
     302:	8c 01       	movw	r16, r24
		*array1_p = i;
		 array1_p++;
		 increment_size(struct1);
	}*/
	
	*array1_p = 3;
     304:	83 e0       	ldi	r24, 0x03	; 3
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	eb 81       	ldd	r30, Y+3	; 0x03
     30a:	fc 81       	ldd	r31, Y+4	; 0x04
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	80 83       	st	Z, r24
	array1_p++;
	increment_size(struct1);
     310:	c7 01       	movw	r24, r14
     312:	11 df       	rcall	.-478    	; 0x136 <increment_size>
	*array1_p = 4;
     314:	84 e0       	ldi	r24, 0x04	; 4
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	eb 81       	ldd	r30, Y+3	; 0x03
     31a:	fc 81       	ldd	r31, Y+4	; 0x04
     31c:	93 83       	std	Z+3, r25	; 0x03
	array1_p++;
	increment_size(struct1);
     31e:	82 83       	std	Z+2, r24	; 0x02
     320:	c7 01       	movw	r24, r14
     322:	09 df       	rcall	.-494    	; 0x136 <increment_size>
	
	copy_seq(struct1, struct2);
     324:	69 81       	ldd	r22, Y+1	; 0x01
     326:	7a 81       	ldd	r23, Y+2	; 0x02
     328:	c7 01       	movw	r24, r14
     32a:	28 df       	rcall	.-432    	; 0x17c <copy_seq>
     32c:	f8 01       	movw	r30, r16
	
	value2 = *array2_p;
     32e:	01 90       	ld	r0, Z+
     330:	f0 81       	ld	r31, Z
     332:	e0 2d       	mov	r30, r0
     334:	fa 83       	std	Y+2, r31	; 0x02
     336:	e9 83       	std	Y+1, r30	; 0x01
	
	printf("\rVal1: %d\n" , 3);
     338:	1f 92       	push	r1
     33a:	83 e0       	ldi	r24, 0x03	; 3
     33c:	8f 93       	push	r24
     33e:	8b e8       	ldi	r24, 0x8B	; 139
     340:	92 e0       	ldi	r25, 0x02	; 2
     342:	9f 93       	push	r25
     344:	8f 93       	push	r24
     346:	f9 d5       	rcall	.+3058   	; 0xf3a <printf>
	printf("\rVal2: %d\n" , value2);
     348:	fa 81       	ldd	r31, Y+2	; 0x02
     34a:	ff 93       	push	r31
     34c:	29 81       	ldd	r18, Y+1	; 0x01
     34e:	2f 93       	push	r18
     350:	86 e9       	ldi	r24, 0x96	; 150
     352:	92 e0       	ldi	r25, 0x02	; 2
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	f0 d5       	rcall	.+3040   	; 0xf3a <printf>
     35a:	0f b6       	in	r0, 0x3f	; 63
	
	array2_p++;
	
	mu_assert("elements are not equal", 3 == value2);
     35c:	f8 94       	cli
     35e:	de bf       	out	0x3e, r29	; 62
     360:	0f be       	out	0x3f, r0	; 63
     362:	cd bf       	out	0x3d, r28	; 61
     364:	e9 81       	ldd	r30, Y+1	; 0x01
     366:	fa 81       	ldd	r31, Y+2	; 0x02
     368:	33 97       	sbiw	r30, 0x03	; 3
     36a:	19 f5       	brne	.+70     	; 0x3b2 <main+0x142>
	
	value2 = *array2_p;
     36c:	f8 01       	movw	r30, r16
     36e:	02 80       	ldd	r0, Z+2	; 0x02
     370:	f3 81       	ldd	r31, Z+3	; 0x03
     372:	e0 2d       	mov	r30, r0
     374:	fa 83       	std	Y+2, r31	; 0x02
     376:	e9 83       	std	Y+1, r30	; 0x01
	
	printf("\rVal1: %d\n" , 4);
     378:	1f 92       	push	r1
     37a:	84 e0       	ldi	r24, 0x04	; 4
     37c:	8f 93       	push	r24
     37e:	8b e8       	ldi	r24, 0x8B	; 139
     380:	92 e0       	ldi	r25, 0x02	; 2
     382:	9f 93       	push	r25
     384:	8f 93       	push	r24
     386:	d9 d5       	rcall	.+2994   	; 0xf3a <printf>
	printf("\rVal2: %d\n" , value2);
     388:	fa 81       	ldd	r31, Y+2	; 0x02
     38a:	ff 93       	push	r31
     38c:	29 81       	ldd	r18, Y+1	; 0x01
     38e:	2f 93       	push	r18
     390:	86 e9       	ldi	r24, 0x96	; 150
     392:	92 e0       	ldi	r25, 0x02	; 2
     394:	9f 93       	push	r25
     396:	8f 93       	push	r24
     398:	d0 d5       	rcall	.+2976   	; 0xf3a <printf>
     39a:	0f b6       	in	r0, 0x3f	; 63
	
	array2_p++;
	
	mu_assert("elements are not equal", 4 == value2);
     39c:	f8 94       	cli
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	cd bf       	out	0x3d, r28	; 61
     3a4:	e9 81       	ldd	r30, Y+1	; 0x01
     3a6:	fa 81       	ldd	r31, Y+2	; 0x02
     3a8:	34 97       	sbiw	r30, 0x04	; 4
     3aa:	31 f4       	brne	.+12     	; 0x3b8 <main+0x148>
     3ac:	80 e0       	ldi	r24, 0x00	; 0
	return 0;
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	05 c0       	rjmp	.+10     	; 0x3bc <main+0x14c>
     3b2:	8c e1       	ldi	r24, 0x1C	; 28
	printf("\rVal1: %d\n" , 3);
	printf("\rVal2: %d\n" , value2);
	
	array2_p++;
	
	mu_assert("elements are not equal", 3 == value2);
     3b4:	92 e0       	ldi	r25, 0x02	; 2
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <main+0x14c>
     3b8:	8c e1       	ldi	r24, 0x1C	; 28
	printf("\rVal1: %d\n" , 4);
	printf("\rVal2: %d\n" , value2);
	
	array2_p++;
	
	mu_assert("elements are not equal", 4 == value2);
     3ba:	92 e0       	ldi	r25, 0x02	; 2
     3bc:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <__data_end>
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
	mu_run_test(test_copy_seq);
     3c0:	30 91 e3 02 	lds	r19, 0x02E3	; 0x8002e3 <__data_end+0x1>
     3c4:	2f 5f       	subi	r18, 0xFF	; 255
     3c6:	3f 4f       	sbci	r19, 0xFF	; 255
     3c8:	30 93 e3 02 	sts	0x02E3, r19	; 0x8002e3 <__data_end+0x1>
     3cc:	20 93 e2 02 	sts	0x02E2, r18	; 0x8002e2 <__data_end>
	DDRA = 0xff;
	PORTA = 0xff;
	PORTA = ~2;
	
	char *result = all_tests();
	if (result != 0) {
     3d0:	00 97       	sbiw	r24, 0x00	; 0
     3d2:	61 f0       	breq	.+24     	; 0x3ec <main+0x17c>
		printf("error: %s\n\r", result);
     3d4:	9f 93       	push	r25
     3d6:	8f 93       	push	r24
     3d8:	81 ea       	ldi	r24, 0xA1	; 161
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	9f 93       	push	r25
     3de:	8f 93       	push	r24
     3e0:	ac d5       	rcall	.+2904   	; 0xf3a <printf>
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	07 c0       	rjmp	.+14     	; 0x3fa <main+0x18a>
	}
	else {
		printf("ALL TESTS PASSED\n\r");
     3ec:	8d ea       	ldi	r24, 0xAD	; 173
     3ee:	92 e0       	ldi	r25, 0x02	; 2
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
     3f4:	a2 d5       	rcall	.+2884   	; 0xf3a <printf>
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
	}

	printf("Tests run: %d\n", tests_run);
     3fa:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <__data_end+0x1>
     3fe:	8f 93       	push	r24
     400:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     404:	8f 93       	push	r24
     406:	80 ec       	ldi	r24, 0xC0	; 192
     408:	92 e0       	ldi	r25, 0x02	; 2
     40a:	9f 93       	push	r25
     40c:	8f 93       	push	r24
     40e:	95 d5       	rcall	.+2858   	; 0xf3a <printf>
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
	return 0;
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
     418:	ff cf       	rjmp	.-2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     41a:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     41e:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     422:	01 96       	adiw	r24, 0x01	; 1
     424:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
}

static char * test_seq_add_zero () 
{
	int size = 5, value, *array_start;
	seq_t item = seq_create(size);
     428:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     42c:	85 e0       	ldi	r24, 0x05	; 5
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	8a de       	rcall	.-748    	; 0x146 <seq_create>
     432:	9a 83       	std	Y+2, r25	; 0x02
	seq_add_to(item, 0);
     434:	89 83       	std	Y+1, r24	; 0x01
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	f3 de       	rcall	.-538    	; 0x222 <seq_add_to>
	
	array_start = get_beginning(item);
     43c:	89 81       	ldd	r24, Y+1	; 0x01
     43e:	9a 81       	ldd	r25, Y+2	; 0x02
     440:	76 de       	rcall	.-788    	; 0x12e <get_beginning>
     442:	fc 01       	movw	r30, r24
	value = *array_start;
	mu_assert("element != 0", value == 0);
     444:	80 81       	ld	r24, Z
     446:	91 81       	ldd	r25, Z+1	; 0x01
     448:	89 2b       	or	r24, r25
     44a:	c1 f5       	brne	.+112    	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     44c:	0c c0       	rjmp	.+24     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     44e:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
	return 0;
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
     452:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     456:	01 96       	adiw	r24, 0x01	; 1
     458:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
     45c:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     460:	84 e5       	ldi	r24, 0x54	; 84
	mu_run_test(test_seq_add_zero);
     462:	92 e0       	ldi	r25, 0x02	; 2
     464:	b7 cf       	rjmp	.-146    	; 0x3d4 <main+0x164>
     466:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     46a:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
}

static char * test_seq_add_one ()
{
	int size = 5, value, *array_start;
	seq_t item = seq_create(size);
     474:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     478:	85 e0       	ldi	r24, 0x05	; 5
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	64 de       	rcall	.-824    	; 0x146 <seq_create>
	seq_add_to(item, 1);
     47e:	9a 83       	std	Y+2, r25	; 0x02
     480:	89 83       	std	Y+1, r24	; 0x01
     482:	61 e0       	ldi	r22, 0x01	; 1
     484:	70 e0       	ldi	r23, 0x00	; 0
	
	array_start = get_beginning(item);
     486:	cd de       	rcall	.-614    	; 0x222 <seq_add_to>
     488:	89 81       	ldd	r24, Y+1	; 0x01
     48a:	9a 81       	ldd	r25, Y+2	; 0x02
     48c:	50 de       	rcall	.-864    	; 0x12e <get_beginning>
	value = *array_start;
     48e:	fc 01       	movw	r30, r24
     490:	01 90       	ld	r0, Z+
     492:	f0 81       	ld	r31, Z
     494:	e0 2d       	mov	r30, r0
     496:	fa 83       	std	Y+2, r31	; 0x02
     498:	e9 83       	std	Y+1, r30	; 0x01
	
	printf("\rvalue in test %d\n", value);
     49a:	ff 93       	push	r31
     49c:	ef 93       	push	r30
     49e:	8f ec       	ldi	r24, 0xCF	; 207
     4a0:	92 e0       	ldi	r25, 0x02	; 2
     4a2:	9f 93       	push	r25
     4a4:	8f 93       	push	r24
     4a6:	49 d5       	rcall	.+2706   	; 0xf3a <printf>
     4a8:	0f 90       	pop	r0
	
	mu_assert("element != 1", value == 1);
     4aa:	0f 90       	pop	r0
     4ac:	0f 90       	pop	r0
     4ae:	0f 90       	pop	r0
     4b0:	29 81       	ldd	r18, Y+1	; 0x01
     4b2:	3a 81       	ldd	r19, Y+2	; 0x02
     4b4:	21 30       	cpi	r18, 0x01	; 1
     4b6:	31 05       	cpc	r19, r1
     4b8:	89 f5       	brne	.+98     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     4ba:	0c c0       	rjmp	.+24     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
     4bc:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     4c0:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     4c4:	01 96       	adiw	r24, 0x01	; 1
     4c6:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
	seq_t item = seq_create(size);
	seq_add_to(item, 0);
	
	array_start = get_beginning(item);
	value = *array_start;
	mu_assert("element != 0", value == 0);
     4ca:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     4ce:	84 e5       	ldi	r24, 0x54	; 84

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
     4d0:	92 e0       	ldi	r25, 0x02	; 2
     4d2:	80 cf       	rjmp	.-256    	; 0x3d4 <main+0x164>
     4d4:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
     4d8:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     4dc:	01 96       	adiw	r24, 0x01	; 1
}

static char * test_seq_add_multiple ()
{
	int size = 5, i, value, *array_start, control;
	seq_t item = seq_create(size);
     4de:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
     4e2:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     4e6:	85 e0       	ldi	r24, 0x05	; 5
     4e8:	90 e0       	ldi	r25, 0x00	; 0
	seq_add_to(item, 1);
     4ea:	2d de       	rcall	.-934    	; 0x146 <seq_create>
     4ec:	9a 83       	std	Y+2, r25	; 0x02
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	61 e0       	ldi	r22, 0x01	; 1
	seq_add_to(item, 2);
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	96 de       	rcall	.-724    	; 0x222 <seq_add_to>
     4f6:	62 e0       	ldi	r22, 0x02	; 2
     4f8:	70 e0       	ldi	r23, 0x00	; 0
     4fa:	89 81       	ldd	r24, Y+1	; 0x01
     4fc:	9a 81       	ldd	r25, Y+2	; 0x02
	seq_add_to(item, 3);
     4fe:	91 de       	rcall	.-734    	; 0x222 <seq_add_to>
     500:	63 e0       	ldi	r22, 0x03	; 3
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	9a 81       	ldd	r25, Y+2	; 0x02
     508:	8c de       	rcall	.-744    	; 0x222 <seq_add_to>
		
	array_start = get_beginning(item);
     50a:	89 81       	ldd	r24, Y+1	; 0x01
     50c:	9a 81       	ldd	r25, Y+2	; 0x02
     50e:	0f de       	rcall	.-994    	; 0x12e <get_beginning>
     510:	fc 01       	movw	r30, r24
     512:	80 81       	ld	r24, Z
	control = 1;
		
	for(i = 0; i < 3; i++)
	{
		value = *array_start;
		mu_assert("element != expected", value == control);
     514:	91 81       	ldd	r25, Z+1	; 0x01
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	c9 f0       	breq	.+50     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
     51a:	0c c0       	rjmp	.+24     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     51c:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
     520:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     524:	01 96       	adiw	r24, 0x01	; 1
     526:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
     52a:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     52e:	87 e4       	ldi	r24, 0x47	; 71
	array_start = get_beginning(item);
	value = *array_start;
	
	printf("\rvalue in test %d\n", value);
	
	mu_assert("element != 1", value == 1);
     530:	92 e0       	ldi	r25, 0x02	; 2
     532:	50 cf       	rjmp	.-352    	; 0x3d4 <main+0x164>
     534:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <__data_end>
static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
     538:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <__data_end+0x1>
     53c:	01 96       	adiw	r24, 0x01	; 1
     53e:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <__data_end+0x1>
     542:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <__data_end>
     546:	83 e3       	ldi	r24, 0x33	; 51
     548:	92 e0       	ldi	r25, 0x02	; 2
     54a:	44 cf       	rjmp	.-376    	; 0x3d4 <main+0x164>
     54c:	82 81       	ldd	r24, Z+2	; 0x02
	control = 1;
		
	for(i = 0; i < 3; i++)
	{
		value = *array_start;
		mu_assert("element != expected", value == control);
     54e:	93 81       	ldd	r25, Z+3	; 0x03
     550:	02 97       	sbiw	r24, 0x02	; 2
     552:	81 f7       	brne	.-32     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     554:	84 81       	ldd	r24, Z+4	; 0x04
     556:	95 81       	ldd	r25, Z+5	; 0x05
     558:	03 97       	sbiw	r24, 0x03	; 3
     55a:	09 f4       	brne	.+2      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
     55c:	b6 ce       	rjmp	.-660    	; 0x2ca <main+0x5a>
     55e:	ea cf       	rjmp	.-44     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     560:	fc 01       	movw	r30, r24
     562:	32 96       	adiw	r30, 0x02	; 2
     564:	44 96       	adiw	r24, 0x14	; 20
     566:	a8 ce       	rjmp	.-688    	; 0x2b8 <main+0x48>

00000568 <usart_getchar>:
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	1f 92       	push	r1
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	be 01       	movw	r22, r28
     574:	6f 5f       	subi	r22, 0xFF	; 255
     576:	7f 4f       	sbci	r23, 0xFF	; 255
     578:	87 e6       	ldi	r24, 0x67	; 103
     57a:	93 e0       	ldi	r25, 0x03	; 3
     57c:	66 d0       	rcall	.+204    	; 0x64a <buffer_get_item>
     57e:	81 11       	cpse	r24, r1
     580:	f8 cf       	rjmp	.-16     	; 0x572 <usart_getchar+0xa>
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	0f 90       	pop	r0
     588:	df 91       	pop	r29
     58a:	cf 91       	pop	r28
     58c:	08 95       	ret

0000058e <usart_putchar>:
     58e:	68 2f       	mov	r22, r24
     590:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <_com_serial_instance>
     594:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <_com_serial_instance+0x1>
     598:	24 d1       	rcall	.+584    	; 0x7e2 <serial_send_byte>
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	08 95       	ret

000005a0 <init_stdio>:
     5a0:	4f 92       	push	r4
     5a2:	5f 92       	push	r5
     5a4:	6f 92       	push	r6
     5a6:	7f 92       	push	r7
     5a8:	8f 92       	push	r8
     5aa:	9f 92       	push	r9
     5ac:	af 92       	push	r10
     5ae:	cf 92       	push	r12
     5b0:	ef 92       	push	r14
     5b2:	0f 93       	push	r16
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	c8 2f       	mov	r28, r24
     5ba:	2a 01       	movw	r4, r20
     5bc:	3b 01       	movw	r6, r22
     5be:	87 e6       	ldi	r24, 0x67	; 103
     5c0:	93 e0       	ldi	r25, 0x03	; 3
     5c2:	3a d0       	rcall	.+116    	; 0x638 <buffer_init>
     5c4:	84 ee       	ldi	r24, 0xE4	; 228
     5c6:	92 e0       	ldi	r25, 0x02	; 2
     5c8:	37 d0       	rcall	.+110    	; 0x638 <buffer_init>
     5ca:	1f 92       	push	r1
     5cc:	1f 92       	push	r1
     5ce:	84 ee       	ldi	r24, 0xE4	; 228
     5d0:	92 e0       	ldi	r25, 0x02	; 2
     5d2:	9f 93       	push	r25
     5d4:	8f 93       	push	r24
     5d6:	0f 2e       	mov	r0, r31
     5d8:	f7 e6       	ldi	r31, 0x67	; 103
     5da:	8f 2e       	mov	r8, r31
     5dc:	f3 e0       	ldi	r31, 0x03	; 3
     5de:	9f 2e       	mov	r9, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	a1 2c       	mov	r10, r1
     5e4:	c1 2c       	mov	r12, r1
     5e6:	0f 2e       	mov	r0, r31
     5e8:	f3 e0       	ldi	r31, 0x03	; 3
     5ea:	ef 2e       	mov	r14, r31
     5ec:	f0 2d       	mov	r31, r0
     5ee:	00 e0       	ldi	r16, 0x00	; 0
     5f0:	11 ee       	ldi	r17, 0xE1	; 225
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	b3 01       	movw	r22, r6
     5f8:	a2 01       	movw	r20, r4
     5fa:	8c 2f       	mov	r24, r28
     5fc:	70 d0       	rcall	.+224    	; 0x6de <serial_new_instance>
     5fe:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <_com_serial_instance+0x1>
     602:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <_com_serial_instance>
     606:	e8 ef       	ldi	r30, 0xF8	; 248
     608:	f3 e0       	ldi	r31, 0x03	; 3
     60a:	86 e0       	ldi	r24, 0x06	; 6
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	91 83       	std	Z+1, r25	; 0x01
     610:	80 83       	st	Z, r24
     612:	93 83       	std	Z+3, r25	; 0x03
     614:	82 83       	std	Z+2, r24	; 0x02
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	0f 90       	pop	r0
     61e:	cf 91       	pop	r28
     620:	1f 91       	pop	r17
     622:	0f 91       	pop	r16
     624:	ef 90       	pop	r14
     626:	cf 90       	pop	r12
     628:	af 90       	pop	r10
     62a:	9f 90       	pop	r9
     62c:	8f 90       	pop	r8
     62e:	7f 90       	pop	r7
     630:	6f 90       	pop	r6
     632:	5f 90       	pop	r5
     634:	4f 90       	pop	r4
     636:	08 95       	ret

00000638 <buffer_init>:
     638:	fc 01       	movw	r30, r24
     63a:	e0 58       	subi	r30, 0x80	; 128
     63c:	ff 4f       	sbci	r31, 0xFF	; 255
     63e:	10 82       	st	Z, r1
     640:	31 96       	adiw	r30, 0x01	; 1
     642:	10 82       	st	Z, r1
     644:	31 96       	adiw	r30, 0x01	; 1
     646:	10 82       	st	Z, r1
     648:	08 95       	ret

0000064a <buffer_get_item>:
     64a:	fc 01       	movw	r30, r24
     64c:	ee 57       	subi	r30, 0x7E	; 126
     64e:	ff 4f       	sbci	r31, 0xFF	; 255
     650:	20 81       	ld	r18, Z
     652:	22 23       	and	r18, r18
     654:	f9 f0       	breq	.+62     	; 0x694 <buffer_get_item+0x4a>
     656:	31 97       	sbiw	r30, 0x01	; 1
     658:	20 81       	ld	r18, Z
     65a:	dc 01       	movw	r26, r24
     65c:	a2 0f       	add	r26, r18
     65e:	b1 1d       	adc	r27, r1
     660:	2c 91       	ld	r18, X
     662:	db 01       	movw	r26, r22
     664:	2c 93       	st	X, r18
     666:	20 81       	ld	r18, Z
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	2f 5f       	subi	r18, 0xFF	; 255
     66c:	3f 4f       	sbci	r19, 0xFF	; 255
     66e:	2f 77       	andi	r18, 0x7F	; 127
     670:	30 78       	andi	r19, 0x80	; 128
     672:	33 23       	and	r19, r19
     674:	34 f4       	brge	.+12     	; 0x682 <buffer_get_item+0x38>
     676:	21 50       	subi	r18, 0x01	; 1
     678:	31 09       	sbc	r19, r1
     67a:	20 68       	ori	r18, 0x80	; 128
     67c:	3f 6f       	ori	r19, 0xFF	; 255
     67e:	2f 5f       	subi	r18, 0xFF	; 255
     680:	3f 4f       	sbci	r19, 0xFF	; 255
     682:	20 83       	st	Z, r18
     684:	fc 01       	movw	r30, r24
     686:	ee 57       	subi	r30, 0x7E	; 126
     688:	ff 4f       	sbci	r31, 0xFF	; 255
     68a:	80 81       	ld	r24, Z
     68c:	81 50       	subi	r24, 0x01	; 1
     68e:	80 83       	st	Z, r24
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	08 95       	ret
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	08 95       	ret

00000698 <buffer_put_item>:
     698:	fc 01       	movw	r30, r24
     69a:	ee 57       	subi	r30, 0x7E	; 126
     69c:	ff 4f       	sbci	r31, 0xFF	; 255
     69e:	40 81       	ld	r20, Z
     6a0:	44 23       	and	r20, r20
     6a2:	dc f0       	brlt	.+54     	; 0x6da <buffer_put_item+0x42>
     6a4:	32 97       	sbiw	r30, 0x02	; 2
     6a6:	20 81       	ld	r18, Z
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	dc 01       	movw	r26, r24
     6ac:	a2 0f       	add	r26, r18
     6ae:	b3 1f       	adc	r27, r19
     6b0:	6c 93       	st	X, r22
     6b2:	2f 5f       	subi	r18, 0xFF	; 255
     6b4:	3f 4f       	sbci	r19, 0xFF	; 255
     6b6:	2f 77       	andi	r18, 0x7F	; 127
     6b8:	30 78       	andi	r19, 0x80	; 128
     6ba:	33 23       	and	r19, r19
     6bc:	34 f4       	brge	.+12     	; 0x6ca <buffer_put_item+0x32>
     6be:	21 50       	subi	r18, 0x01	; 1
     6c0:	31 09       	sbc	r19, r1
     6c2:	20 68       	ori	r18, 0x80	; 128
     6c4:	3f 6f       	ori	r19, 0xFF	; 255
     6c6:	2f 5f       	subi	r18, 0xFF	; 255
     6c8:	3f 4f       	sbci	r19, 0xFF	; 255
     6ca:	20 83       	st	Z, r18
     6cc:	fc 01       	movw	r30, r24
     6ce:	ee 57       	subi	r30, 0x7E	; 126
     6d0:	ff 4f       	sbci	r31, 0xFF	; 255
     6d2:	4f 5f       	subi	r20, 0xFF	; 255
     6d4:	40 83       	st	Z, r20
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	08 95       	ret
     6da:	82 e0       	ldi	r24, 0x02	; 2
     6dc:	08 95       	ret

000006de <serial_new_instance>:
     6de:	4f 92       	push	r4
     6e0:	5f 92       	push	r5
     6e2:	6f 92       	push	r6
     6e4:	7f 92       	push	r7
     6e6:	8f 92       	push	r8
     6e8:	9f 92       	push	r9
     6ea:	df 92       	push	r13
     6ec:	ef 92       	push	r14
     6ee:	ff 92       	push	r15
     6f0:	0f 93       	push	r16
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	00 d0       	rcall	.+0      	; 0x6fa <serial_new_instance+0x1c>
     6fa:	1f 92       	push	r1
     6fc:	cd b7       	in	r28, 0x3d	; 61
     6fe:	de b7       	in	r29, 0x3e	; 62
     700:	d8 2e       	mov	r13, r24
     702:	49 83       	std	Y+1, r20	; 0x01
     704:	5a 83       	std	Y+2, r21	; 0x02
     706:	6b 83       	std	Y+3, r22	; 0x03
     708:	7c 83       	std	Y+4, r23	; 0x04
     70a:	28 01       	movw	r4, r16
     70c:	39 01       	movw	r6, r18
     70e:	88 e0       	ldi	r24, 0x08	; 8
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	eb d2       	rcall	.+1494   	; 0xcea <malloc>
     714:	7c 01       	movw	r14, r24
     716:	8d 2d       	mov	r24, r13
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	88 0f       	add	r24, r24
     71c:	99 1f       	adc	r25, r25
     71e:	fc 01       	movw	r30, r24
     720:	e4 51       	subi	r30, 0x14	; 20
     722:	fc 4f       	sbci	r31, 0xFC	; 252
     724:	f1 82       	std	Z+1, r15	; 0x01
     726:	e0 82       	st	Z, r14
     728:	fc 01       	movw	r30, r24
     72a:	ec 5e       	subi	r30, 0xEC	; 236
     72c:	fd 4f       	sbci	r31, 0xFD	; 253
     72e:	80 81       	ld	r24, Z
     730:	91 81       	ldd	r25, Z+1	; 0x01
     732:	d7 01       	movw	r26, r14
     734:	11 96       	adiw	r26, 0x01	; 1
     736:	9c 93       	st	X, r25
     738:	8e 93       	st	-X, r24
     73a:	8d 89       	ldd	r24, Y+21	; 0x15
     73c:	9e 89       	ldd	r25, Y+22	; 0x16
     73e:	13 96       	adiw	r26, 0x03	; 3
     740:	9c 93       	st	X, r25
     742:	8e 93       	st	-X, r24
     744:	12 97       	sbiw	r26, 0x02	; 2
     746:	15 96       	adiw	r26, 0x05	; 5
     748:	9c 92       	st	X, r9
     74a:	8e 92       	st	-X, r8
     74c:	14 97       	sbiw	r26, 0x04	; 4
     74e:	8f 89       	ldd	r24, Y+23	; 0x17
     750:	98 8d       	ldd	r25, Y+24	; 0x18
     752:	17 96       	adiw	r26, 0x07	; 7
     754:	9c 93       	st	X, r25
     756:	8e 93       	st	-X, r24
     758:	16 97       	sbiw	r26, 0x06	; 6
     75a:	df b6       	in	r13, 0x3f	; 63
     75c:	f8 94       	cli
     75e:	ed 91       	ld	r30, X+
     760:	fc 91       	ld	r31, X
     762:	11 97       	sbiw	r26, 0x01	; 1
     764:	36 97       	sbiw	r30, 0x06	; 6
     766:	80 81       	ld	r24, Z
     768:	82 60       	ori	r24, 0x02	; 2
     76a:	80 83       	st	Z, r24
     76c:	8d 90       	ld	r8, X+
     76e:	9c 90       	ld	r9, X
     770:	d3 01       	movw	r26, r6
     772:	c2 01       	movw	r24, r4
     774:	88 0f       	add	r24, r24
     776:	99 1f       	adc	r25, r25
     778:	aa 1f       	adc	r26, r26
     77a:	bb 1f       	adc	r27, r27
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	aa 1f       	adc	r26, r26
     782:	bb 1f       	adc	r27, r27
     784:	9c 01       	movw	r18, r24
     786:	ad 01       	movw	r20, r26
     788:	22 0f       	add	r18, r18
     78a:	33 1f       	adc	r19, r19
     78c:	44 1f       	adc	r20, r20
     78e:	55 1f       	adc	r21, r21
     790:	69 81       	ldd	r22, Y+1	; 0x01
     792:	7a 81       	ldd	r23, Y+2	; 0x02
     794:	8b 81       	ldd	r24, Y+3	; 0x03
     796:	9c 81       	ldd	r25, Y+4	; 0x04
     798:	6c d2       	rcall	.+1240   	; 0xc72 <__udivmodsi4>
     79a:	21 50       	subi	r18, 0x01	; 1
     79c:	f4 01       	movw	r30, r8
     79e:	32 97       	sbiw	r30, 0x02	; 2
     7a0:	20 83       	st	Z, r18
     7a2:	d7 01       	movw	r26, r14
     7a4:	ed 91       	ld	r30, X+
     7a6:	fc 91       	ld	r31, X
     7a8:	11 97       	sbiw	r26, 0x01	; 1
     7aa:	35 97       	sbiw	r30, 0x05	; 5
     7ac:	88 e9       	ldi	r24, 0x98	; 152
     7ae:	80 83       	st	Z, r24
     7b0:	ed 91       	ld	r30, X+
     7b2:	fc 91       	ld	r31, X
     7b4:	34 97       	sbiw	r30, 0x04	; 4
     7b6:	86 e0       	ldi	r24, 0x06	; 6
     7b8:	80 83       	st	Z, r24
     7ba:	df be       	out	0x3f, r13	; 63
     7bc:	c7 01       	movw	r24, r14
     7be:	0f 90       	pop	r0
     7c0:	0f 90       	pop	r0
     7c2:	0f 90       	pop	r0
     7c4:	0f 90       	pop	r0
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	1f 91       	pop	r17
     7cc:	0f 91       	pop	r16
     7ce:	ff 90       	pop	r15
     7d0:	ef 90       	pop	r14
     7d2:	df 90       	pop	r13
     7d4:	9f 90       	pop	r9
     7d6:	8f 90       	pop	r8
     7d8:	7f 90       	pop	r7
     7da:	6f 90       	pop	r6
     7dc:	5f 90       	pop	r5
     7de:	4f 90       	pop	r4
     7e0:	08 95       	ret

000007e2 <serial_send_byte>:
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	fc 01       	movw	r30, r24
     7e8:	82 81       	ldd	r24, Z+2	; 0x02
     7ea:	93 81       	ldd	r25, Z+3	; 0x03
     7ec:	00 97       	sbiw	r24, 0x00	; 0
     7ee:	59 f0       	breq	.+22     	; 0x806 <serial_send_byte+0x24>
     7f0:	ef 01       	movw	r28, r30
     7f2:	52 df       	rcall	.-348    	; 0x698 <buffer_put_item>
     7f4:	81 11       	cpse	r24, r1
     7f6:	09 c0       	rjmp	.+18     	; 0x80a <serial_send_byte+0x28>
     7f8:	e8 81       	ld	r30, Y
     7fa:	f9 81       	ldd	r31, Y+1	; 0x01
     7fc:	35 97       	sbiw	r30, 0x05	; 5
     7fe:	90 81       	ld	r25, Z
     800:	90 62       	ori	r25, 0x20	; 32
     802:	90 83       	st	Z, r25
     804:	03 c0       	rjmp	.+6      	; 0x80c <serial_send_byte+0x2a>
     806:	82 e0       	ldi	r24, 0x02	; 2
     808:	01 c0       	rjmp	.+2      	; 0x80c <serial_send_byte+0x2a>
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	08 95       	ret

00000812 <__vector_25>:
     812:	1f 92       	push	r1
     814:	0f 92       	push	r0
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	0f 92       	push	r0
     81a:	11 24       	eor	r1, r1
     81c:	0b b6       	in	r0, 0x3b	; 59
     81e:	0f 92       	push	r0
     820:	2f 93       	push	r18
     822:	3f 93       	push	r19
     824:	4f 93       	push	r20
     826:	5f 93       	push	r21
     828:	6f 93       	push	r22
     82a:	7f 93       	push	r23
     82c:	8f 93       	push	r24
     82e:	9f 93       	push	r25
     830:	af 93       	push	r26
     832:	bf 93       	push	r27
     834:	cf 93       	push	r28
     836:	ef 93       	push	r30
     838:	ff 93       	push	r31
     83a:	e0 91 ec 03 	lds	r30, 0x03EC	; 0x8003ec <_ser_handle>
     83e:	f0 91 ed 03 	lds	r31, 0x03ED	; 0x8003ed <_ser_handle+0x1>
     842:	30 97       	sbiw	r30, 0x00	; 0
     844:	99 f0       	breq	.+38     	; 0x86c <__vector_25+0x5a>
     846:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     84a:	6c 2f       	mov	r22, r28
     84c:	84 81       	ldd	r24, Z+4	; 0x04
     84e:	95 81       	ldd	r25, Z+5	; 0x05
     850:	23 df       	rcall	.-442    	; 0x698 <buffer_put_item>
     852:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <_ser_handle>
     856:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <_ser_handle+0x1>
     85a:	dc 01       	movw	r26, r24
     85c:	16 96       	adiw	r26, 0x06	; 6
     85e:	ed 91       	ld	r30, X+
     860:	fc 91       	ld	r31, X
     862:	17 97       	sbiw	r26, 0x07	; 7
     864:	30 97       	sbiw	r30, 0x00	; 0
     866:	11 f0       	breq	.+4      	; 0x86c <__vector_25+0x5a>
     868:	6c 2f       	mov	r22, r28
     86a:	19 95       	eicall
     86c:	ff 91       	pop	r31
     86e:	ef 91       	pop	r30
     870:	cf 91       	pop	r28
     872:	bf 91       	pop	r27
     874:	af 91       	pop	r26
     876:	9f 91       	pop	r25
     878:	8f 91       	pop	r24
     87a:	7f 91       	pop	r23
     87c:	6f 91       	pop	r22
     87e:	5f 91       	pop	r21
     880:	4f 91       	pop	r20
     882:	3f 91       	pop	r19
     884:	2f 91       	pop	r18
     886:	0f 90       	pop	r0
     888:	0b be       	out	0x3b, r0	; 59
     88a:	0f 90       	pop	r0
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	0f 90       	pop	r0
     890:	1f 90       	pop	r1
     892:	18 95       	reti

00000894 <__vector_26>:
     894:	1f 92       	push	r1
     896:	0f 92       	push	r0
     898:	0f b6       	in	r0, 0x3f	; 63
     89a:	0f 92       	push	r0
     89c:	11 24       	eor	r1, r1
     89e:	0b b6       	in	r0, 0x3b	; 59
     8a0:	0f 92       	push	r0
     8a2:	2f 93       	push	r18
     8a4:	3f 93       	push	r19
     8a6:	4f 93       	push	r20
     8a8:	5f 93       	push	r21
     8aa:	6f 93       	push	r22
     8ac:	7f 93       	push	r23
     8ae:	8f 93       	push	r24
     8b0:	9f 93       	push	r25
     8b2:	af 93       	push	r26
     8b4:	bf 93       	push	r27
     8b6:	ef 93       	push	r30
     8b8:	ff 93       	push	r31
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	1f 92       	push	r1
     8c0:	cd b7       	in	r28, 0x3d	; 61
     8c2:	de b7       	in	r29, 0x3e	; 62
     8c4:	e0 91 ec 03 	lds	r30, 0x03EC	; 0x8003ec <_ser_handle>
     8c8:	f0 91 ed 03 	lds	r31, 0x03ED	; 0x8003ed <_ser_handle+0x1>
     8cc:	30 97       	sbiw	r30, 0x00	; 0
     8ce:	91 f0       	breq	.+36     	; 0x8f4 <__vector_26+0x60>
     8d0:	be 01       	movw	r22, r28
     8d2:	6f 5f       	subi	r22, 0xFF	; 255
     8d4:	7f 4f       	sbci	r23, 0xFF	; 255
     8d6:	82 81       	ldd	r24, Z+2	; 0x02
     8d8:	93 81       	ldd	r25, Z+3	; 0x03
     8da:	b7 de       	rcall	.-658    	; 0x64a <buffer_get_item>
     8dc:	81 11       	cpse	r24, r1
     8de:	04 c0       	rjmp	.+8      	; 0x8e8 <__vector_26+0x54>
     8e0:	89 81       	ldd	r24, Y+1	; 0x01
     8e2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     8e6:	0b c0       	rjmp	.+22     	; 0x8fe <__vector_26+0x6a>
     8e8:	e1 ec       	ldi	r30, 0xC1	; 193
     8ea:	f0 e0       	ldi	r31, 0x00	; 0
     8ec:	80 81       	ld	r24, Z
     8ee:	8f 7d       	andi	r24, 0xDF	; 223
     8f0:	80 83       	st	Z, r24
     8f2:	05 c0       	rjmp	.+10     	; 0x8fe <__vector_26+0x6a>
     8f4:	e1 ec       	ldi	r30, 0xC1	; 193
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	80 81       	ld	r24, Z
     8fa:	8f 7d       	andi	r24, 0xDF	; 223
     8fc:	80 83       	st	Z, r24
     8fe:	0f 90       	pop	r0
     900:	df 91       	pop	r29
     902:	cf 91       	pop	r28
     904:	ff 91       	pop	r31
     906:	ef 91       	pop	r30
     908:	bf 91       	pop	r27
     90a:	af 91       	pop	r26
     90c:	9f 91       	pop	r25
     90e:	8f 91       	pop	r24
     910:	7f 91       	pop	r23
     912:	6f 91       	pop	r22
     914:	5f 91       	pop	r21
     916:	4f 91       	pop	r20
     918:	3f 91       	pop	r19
     91a:	2f 91       	pop	r18
     91c:	0f 90       	pop	r0
     91e:	0b be       	out	0x3b, r0	; 59
     920:	0f 90       	pop	r0
     922:	0f be       	out	0x3f, r0	; 63
     924:	0f 90       	pop	r0
     926:	1f 90       	pop	r1
     928:	18 95       	reti

0000092a <__vector_36>:
     92a:	1f 92       	push	r1
     92c:	0f 92       	push	r0
     92e:	0f b6       	in	r0, 0x3f	; 63
     930:	0f 92       	push	r0
     932:	11 24       	eor	r1, r1
     934:	0b b6       	in	r0, 0x3b	; 59
     936:	0f 92       	push	r0
     938:	2f 93       	push	r18
     93a:	3f 93       	push	r19
     93c:	4f 93       	push	r20
     93e:	5f 93       	push	r21
     940:	6f 93       	push	r22
     942:	7f 93       	push	r23
     944:	8f 93       	push	r24
     946:	9f 93       	push	r25
     948:	af 93       	push	r26
     94a:	bf 93       	push	r27
     94c:	cf 93       	push	r28
     94e:	ef 93       	push	r30
     950:	ff 93       	push	r31
     952:	e0 91 ee 03 	lds	r30, 0x03EE	; 0x8003ee <_ser_handle+0x2>
     956:	f0 91 ef 03 	lds	r31, 0x03EF	; 0x8003ef <_ser_handle+0x3>
     95a:	30 97       	sbiw	r30, 0x00	; 0
     95c:	99 f0       	breq	.+38     	; 0x984 <__vector_36+0x5a>
     95e:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     962:	6c 2f       	mov	r22, r28
     964:	84 81       	ldd	r24, Z+4	; 0x04
     966:	95 81       	ldd	r25, Z+5	; 0x05
     968:	97 de       	rcall	.-722    	; 0x698 <buffer_put_item>
     96a:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <_ser_handle+0x2>
     96e:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <_ser_handle+0x3>
     972:	dc 01       	movw	r26, r24
     974:	16 96       	adiw	r26, 0x06	; 6
     976:	ed 91       	ld	r30, X+
     978:	fc 91       	ld	r31, X
     97a:	17 97       	sbiw	r26, 0x07	; 7
     97c:	30 97       	sbiw	r30, 0x00	; 0
     97e:	11 f0       	breq	.+4      	; 0x984 <__vector_36+0x5a>
     980:	6c 2f       	mov	r22, r28
     982:	19 95       	eicall
     984:	ff 91       	pop	r31
     986:	ef 91       	pop	r30
     988:	cf 91       	pop	r28
     98a:	bf 91       	pop	r27
     98c:	af 91       	pop	r26
     98e:	9f 91       	pop	r25
     990:	8f 91       	pop	r24
     992:	7f 91       	pop	r23
     994:	6f 91       	pop	r22
     996:	5f 91       	pop	r21
     998:	4f 91       	pop	r20
     99a:	3f 91       	pop	r19
     99c:	2f 91       	pop	r18
     99e:	0f 90       	pop	r0
     9a0:	0b be       	out	0x3b, r0	; 59
     9a2:	0f 90       	pop	r0
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	0f 90       	pop	r0
     9a8:	1f 90       	pop	r1
     9aa:	18 95       	reti

000009ac <__vector_37>:
     9ac:	1f 92       	push	r1
     9ae:	0f 92       	push	r0
     9b0:	0f b6       	in	r0, 0x3f	; 63
     9b2:	0f 92       	push	r0
     9b4:	11 24       	eor	r1, r1
     9b6:	0b b6       	in	r0, 0x3b	; 59
     9b8:	0f 92       	push	r0
     9ba:	2f 93       	push	r18
     9bc:	3f 93       	push	r19
     9be:	4f 93       	push	r20
     9c0:	5f 93       	push	r21
     9c2:	6f 93       	push	r22
     9c4:	7f 93       	push	r23
     9c6:	8f 93       	push	r24
     9c8:	9f 93       	push	r25
     9ca:	af 93       	push	r26
     9cc:	bf 93       	push	r27
     9ce:	ef 93       	push	r30
     9d0:	ff 93       	push	r31
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	1f 92       	push	r1
     9d8:	cd b7       	in	r28, 0x3d	; 61
     9da:	de b7       	in	r29, 0x3e	; 62
     9dc:	e0 91 ee 03 	lds	r30, 0x03EE	; 0x8003ee <_ser_handle+0x2>
     9e0:	f0 91 ef 03 	lds	r31, 0x03EF	; 0x8003ef <_ser_handle+0x3>
     9e4:	30 97       	sbiw	r30, 0x00	; 0
     9e6:	91 f0       	breq	.+36     	; 0xa0c <__vector_37+0x60>
     9e8:	be 01       	movw	r22, r28
     9ea:	6f 5f       	subi	r22, 0xFF	; 255
     9ec:	7f 4f       	sbci	r23, 0xFF	; 255
     9ee:	82 81       	ldd	r24, Z+2	; 0x02
     9f0:	93 81       	ldd	r25, Z+3	; 0x03
     9f2:	2b de       	rcall	.-938    	; 0x64a <buffer_get_item>
     9f4:	81 11       	cpse	r24, r1
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__vector_37+0x54>
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     9fe:	0b c0       	rjmp	.+22     	; 0xa16 <__vector_37+0x6a>
     a00:	e9 ec       	ldi	r30, 0xC9	; 201
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	80 81       	ld	r24, Z
     a06:	8f 7d       	andi	r24, 0xDF	; 223
     a08:	80 83       	st	Z, r24
     a0a:	05 c0       	rjmp	.+10     	; 0xa16 <__vector_37+0x6a>
     a0c:	e9 ec       	ldi	r30, 0xC9	; 201
     a0e:	f0 e0       	ldi	r31, 0x00	; 0
     a10:	80 81       	ld	r24, Z
     a12:	8f 7d       	andi	r24, 0xDF	; 223
     a14:	80 83       	st	Z, r24
     a16:	0f 90       	pop	r0
     a18:	df 91       	pop	r29
     a1a:	cf 91       	pop	r28
     a1c:	ff 91       	pop	r31
     a1e:	ef 91       	pop	r30
     a20:	bf 91       	pop	r27
     a22:	af 91       	pop	r26
     a24:	9f 91       	pop	r25
     a26:	8f 91       	pop	r24
     a28:	7f 91       	pop	r23
     a2a:	6f 91       	pop	r22
     a2c:	5f 91       	pop	r21
     a2e:	4f 91       	pop	r20
     a30:	3f 91       	pop	r19
     a32:	2f 91       	pop	r18
     a34:	0f 90       	pop	r0
     a36:	0b be       	out	0x3b, r0	; 59
     a38:	0f 90       	pop	r0
     a3a:	0f be       	out	0x3f, r0	; 63
     a3c:	0f 90       	pop	r0
     a3e:	1f 90       	pop	r1
     a40:	18 95       	reti

00000a42 <__vector_51>:
     a42:	1f 92       	push	r1
     a44:	0f 92       	push	r0
     a46:	0f b6       	in	r0, 0x3f	; 63
     a48:	0f 92       	push	r0
     a4a:	11 24       	eor	r1, r1
     a4c:	0b b6       	in	r0, 0x3b	; 59
     a4e:	0f 92       	push	r0
     a50:	2f 93       	push	r18
     a52:	3f 93       	push	r19
     a54:	4f 93       	push	r20
     a56:	5f 93       	push	r21
     a58:	6f 93       	push	r22
     a5a:	7f 93       	push	r23
     a5c:	8f 93       	push	r24
     a5e:	9f 93       	push	r25
     a60:	af 93       	push	r26
     a62:	bf 93       	push	r27
     a64:	cf 93       	push	r28
     a66:	ef 93       	push	r30
     a68:	ff 93       	push	r31
     a6a:	e0 91 f0 03 	lds	r30, 0x03F0	; 0x8003f0 <_ser_handle+0x4>
     a6e:	f0 91 f1 03 	lds	r31, 0x03F1	; 0x8003f1 <_ser_handle+0x5>
     a72:	30 97       	sbiw	r30, 0x00	; 0
     a74:	99 f0       	breq	.+38     	; 0xa9c <__vector_51+0x5a>
     a76:	c0 91 d6 00 	lds	r28, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     a7a:	6c 2f       	mov	r22, r28
     a7c:	84 81       	ldd	r24, Z+4	; 0x04
     a7e:	95 81       	ldd	r25, Z+5	; 0x05
     a80:	0b de       	rcall	.-1002   	; 0x698 <buffer_put_item>
     a82:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <_ser_handle+0x4>
     a86:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <_ser_handle+0x5>
     a8a:	dc 01       	movw	r26, r24
     a8c:	16 96       	adiw	r26, 0x06	; 6
     a8e:	ed 91       	ld	r30, X+
     a90:	fc 91       	ld	r31, X
     a92:	17 97       	sbiw	r26, 0x07	; 7
     a94:	30 97       	sbiw	r30, 0x00	; 0
     a96:	11 f0       	breq	.+4      	; 0xa9c <__vector_51+0x5a>
     a98:	6c 2f       	mov	r22, r28
     a9a:	19 95       	eicall
     a9c:	ff 91       	pop	r31
     a9e:	ef 91       	pop	r30
     aa0:	cf 91       	pop	r28
     aa2:	bf 91       	pop	r27
     aa4:	af 91       	pop	r26
     aa6:	9f 91       	pop	r25
     aa8:	8f 91       	pop	r24
     aaa:	7f 91       	pop	r23
     aac:	6f 91       	pop	r22
     aae:	5f 91       	pop	r21
     ab0:	4f 91       	pop	r20
     ab2:	3f 91       	pop	r19
     ab4:	2f 91       	pop	r18
     ab6:	0f 90       	pop	r0
     ab8:	0b be       	out	0x3b, r0	; 59
     aba:	0f 90       	pop	r0
     abc:	0f be       	out	0x3f, r0	; 63
     abe:	0f 90       	pop	r0
     ac0:	1f 90       	pop	r1
     ac2:	18 95       	reti

00000ac4 <__vector_52>:
     ac4:	1f 92       	push	r1
     ac6:	0f 92       	push	r0
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	0f 92       	push	r0
     acc:	11 24       	eor	r1, r1
     ace:	0b b6       	in	r0, 0x3b	; 59
     ad0:	0f 92       	push	r0
     ad2:	2f 93       	push	r18
     ad4:	3f 93       	push	r19
     ad6:	4f 93       	push	r20
     ad8:	5f 93       	push	r21
     ada:	6f 93       	push	r22
     adc:	7f 93       	push	r23
     ade:	8f 93       	push	r24
     ae0:	9f 93       	push	r25
     ae2:	af 93       	push	r26
     ae4:	bf 93       	push	r27
     ae6:	ef 93       	push	r30
     ae8:	ff 93       	push	r31
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	1f 92       	push	r1
     af0:	cd b7       	in	r28, 0x3d	; 61
     af2:	de b7       	in	r29, 0x3e	; 62
     af4:	e0 91 f0 03 	lds	r30, 0x03F0	; 0x8003f0 <_ser_handle+0x4>
     af8:	f0 91 f1 03 	lds	r31, 0x03F1	; 0x8003f1 <_ser_handle+0x5>
     afc:	30 97       	sbiw	r30, 0x00	; 0
     afe:	91 f0       	breq	.+36     	; 0xb24 <__vector_52+0x60>
     b00:	be 01       	movw	r22, r28
     b02:	6f 5f       	subi	r22, 0xFF	; 255
     b04:	7f 4f       	sbci	r23, 0xFF	; 255
     b06:	82 81       	ldd	r24, Z+2	; 0x02
     b08:	93 81       	ldd	r25, Z+3	; 0x03
     b0a:	9f dd       	rcall	.-1218   	; 0x64a <buffer_get_item>
     b0c:	81 11       	cpse	r24, r1
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__vector_52+0x54>
     b10:	89 81       	ldd	r24, Y+1	; 0x01
     b12:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     b16:	0b c0       	rjmp	.+22     	; 0xb2e <__vector_52+0x6a>
     b18:	e1 ed       	ldi	r30, 0xD1	; 209
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	80 81       	ld	r24, Z
     b1e:	8f 7d       	andi	r24, 0xDF	; 223
     b20:	80 83       	st	Z, r24
     b22:	05 c0       	rjmp	.+10     	; 0xb2e <__vector_52+0x6a>
     b24:	e1 ed       	ldi	r30, 0xD1	; 209
     b26:	f0 e0       	ldi	r31, 0x00	; 0
     b28:	80 81       	ld	r24, Z
     b2a:	8f 7d       	andi	r24, 0xDF	; 223
     b2c:	80 83       	st	Z, r24
     b2e:	0f 90       	pop	r0
     b30:	df 91       	pop	r29
     b32:	cf 91       	pop	r28
     b34:	ff 91       	pop	r31
     b36:	ef 91       	pop	r30
     b38:	bf 91       	pop	r27
     b3a:	af 91       	pop	r26
     b3c:	9f 91       	pop	r25
     b3e:	8f 91       	pop	r24
     b40:	7f 91       	pop	r23
     b42:	6f 91       	pop	r22
     b44:	5f 91       	pop	r21
     b46:	4f 91       	pop	r20
     b48:	3f 91       	pop	r19
     b4a:	2f 91       	pop	r18
     b4c:	0f 90       	pop	r0
     b4e:	0b be       	out	0x3b, r0	; 59
     b50:	0f 90       	pop	r0
     b52:	0f be       	out	0x3f, r0	; 63
     b54:	0f 90       	pop	r0
     b56:	1f 90       	pop	r1
     b58:	18 95       	reti

00000b5a <__vector_54>:
     b5a:	1f 92       	push	r1
     b5c:	0f 92       	push	r0
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	0f 92       	push	r0
     b62:	11 24       	eor	r1, r1
     b64:	0b b6       	in	r0, 0x3b	; 59
     b66:	0f 92       	push	r0
     b68:	2f 93       	push	r18
     b6a:	3f 93       	push	r19
     b6c:	4f 93       	push	r20
     b6e:	5f 93       	push	r21
     b70:	6f 93       	push	r22
     b72:	7f 93       	push	r23
     b74:	8f 93       	push	r24
     b76:	9f 93       	push	r25
     b78:	af 93       	push	r26
     b7a:	bf 93       	push	r27
     b7c:	cf 93       	push	r28
     b7e:	ef 93       	push	r30
     b80:	ff 93       	push	r31
     b82:	e0 91 f2 03 	lds	r30, 0x03F2	; 0x8003f2 <_ser_handle+0x6>
     b86:	f0 91 f3 03 	lds	r31, 0x03F3	; 0x8003f3 <_ser_handle+0x7>
     b8a:	30 97       	sbiw	r30, 0x00	; 0
     b8c:	99 f0       	breq	.+38     	; 0xbb4 <__vector_54+0x5a>
     b8e:	c0 91 36 01 	lds	r28, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     b92:	6c 2f       	mov	r22, r28
     b94:	84 81       	ldd	r24, Z+4	; 0x04
     b96:	95 81       	ldd	r25, Z+5	; 0x05
     b98:	7f dd       	rcall	.-1282   	; 0x698 <buffer_put_item>
     b9a:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <_ser_handle+0x6>
     b9e:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <_ser_handle+0x7>
     ba2:	dc 01       	movw	r26, r24
     ba4:	16 96       	adiw	r26, 0x06	; 6
     ba6:	ed 91       	ld	r30, X+
     ba8:	fc 91       	ld	r31, X
     baa:	17 97       	sbiw	r26, 0x07	; 7
     bac:	30 97       	sbiw	r30, 0x00	; 0
     bae:	11 f0       	breq	.+4      	; 0xbb4 <__vector_54+0x5a>
     bb0:	6c 2f       	mov	r22, r28
     bb2:	19 95       	eicall
     bb4:	ff 91       	pop	r31
     bb6:	ef 91       	pop	r30
     bb8:	cf 91       	pop	r28
     bba:	bf 91       	pop	r27
     bbc:	af 91       	pop	r26
     bbe:	9f 91       	pop	r25
     bc0:	8f 91       	pop	r24
     bc2:	7f 91       	pop	r23
     bc4:	6f 91       	pop	r22
     bc6:	5f 91       	pop	r21
     bc8:	4f 91       	pop	r20
     bca:	3f 91       	pop	r19
     bcc:	2f 91       	pop	r18
     bce:	0f 90       	pop	r0
     bd0:	0b be       	out	0x3b, r0	; 59
     bd2:	0f 90       	pop	r0
     bd4:	0f be       	out	0x3f, r0	; 63
     bd6:	0f 90       	pop	r0
     bd8:	1f 90       	pop	r1
     bda:	18 95       	reti

00000bdc <__vector_55>:
     bdc:	1f 92       	push	r1
     bde:	0f 92       	push	r0
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	0f 92       	push	r0
     be4:	11 24       	eor	r1, r1
     be6:	0b b6       	in	r0, 0x3b	; 59
     be8:	0f 92       	push	r0
     bea:	2f 93       	push	r18
     bec:	3f 93       	push	r19
     bee:	4f 93       	push	r20
     bf0:	5f 93       	push	r21
     bf2:	6f 93       	push	r22
     bf4:	7f 93       	push	r23
     bf6:	8f 93       	push	r24
     bf8:	9f 93       	push	r25
     bfa:	af 93       	push	r26
     bfc:	bf 93       	push	r27
     bfe:	ef 93       	push	r30
     c00:	ff 93       	push	r31
     c02:	cf 93       	push	r28
     c04:	df 93       	push	r29
     c06:	1f 92       	push	r1
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	e0 91 f2 03 	lds	r30, 0x03F2	; 0x8003f2 <_ser_handle+0x6>
     c10:	f0 91 f3 03 	lds	r31, 0x03F3	; 0x8003f3 <_ser_handle+0x7>
     c14:	30 97       	sbiw	r30, 0x00	; 0
     c16:	91 f0       	breq	.+36     	; 0xc3c <__vector_55+0x60>
     c18:	be 01       	movw	r22, r28
     c1a:	6f 5f       	subi	r22, 0xFF	; 255
     c1c:	7f 4f       	sbci	r23, 0xFF	; 255
     c1e:	82 81       	ldd	r24, Z+2	; 0x02
     c20:	93 81       	ldd	r25, Z+3	; 0x03
     c22:	13 dd       	rcall	.-1498   	; 0x64a <buffer_get_item>
     c24:	81 11       	cpse	r24, r1
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <__vector_55+0x54>
     c28:	89 81       	ldd	r24, Y+1	; 0x01
     c2a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     c2e:	0b c0       	rjmp	.+22     	; 0xc46 <__vector_55+0x6a>
     c30:	e1 e3       	ldi	r30, 0x31	; 49
     c32:	f1 e0       	ldi	r31, 0x01	; 1
     c34:	80 81       	ld	r24, Z
     c36:	8f 7d       	andi	r24, 0xDF	; 223
     c38:	80 83       	st	Z, r24
     c3a:	05 c0       	rjmp	.+10     	; 0xc46 <__vector_55+0x6a>
     c3c:	e1 e3       	ldi	r30, 0x31	; 49
     c3e:	f1 e0       	ldi	r31, 0x01	; 1
     c40:	80 81       	ld	r24, Z
     c42:	8f 7d       	andi	r24, 0xDF	; 223
     c44:	80 83       	st	Z, r24
     c46:	0f 90       	pop	r0
     c48:	df 91       	pop	r29
     c4a:	cf 91       	pop	r28
     c4c:	ff 91       	pop	r31
     c4e:	ef 91       	pop	r30
     c50:	bf 91       	pop	r27
     c52:	af 91       	pop	r26
     c54:	9f 91       	pop	r25
     c56:	8f 91       	pop	r24
     c58:	7f 91       	pop	r23
     c5a:	6f 91       	pop	r22
     c5c:	5f 91       	pop	r21
     c5e:	4f 91       	pop	r20
     c60:	3f 91       	pop	r19
     c62:	2f 91       	pop	r18
     c64:	0f 90       	pop	r0
     c66:	0b be       	out	0x3b, r0	; 59
     c68:	0f 90       	pop	r0
     c6a:	0f be       	out	0x3f, r0	; 63
     c6c:	0f 90       	pop	r0
     c6e:	1f 90       	pop	r1
     c70:	18 95       	reti

00000c72 <__udivmodsi4>:
     c72:	a1 e2       	ldi	r26, 0x21	; 33
     c74:	1a 2e       	mov	r1, r26
     c76:	aa 1b       	sub	r26, r26
     c78:	bb 1b       	sub	r27, r27
     c7a:	fd 01       	movw	r30, r26
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <__udivmodsi4_ep>

00000c7e <__udivmodsi4_loop>:
     c7e:	aa 1f       	adc	r26, r26
     c80:	bb 1f       	adc	r27, r27
     c82:	ee 1f       	adc	r30, r30
     c84:	ff 1f       	adc	r31, r31
     c86:	a2 17       	cp	r26, r18
     c88:	b3 07       	cpc	r27, r19
     c8a:	e4 07       	cpc	r30, r20
     c8c:	f5 07       	cpc	r31, r21
     c8e:	20 f0       	brcs	.+8      	; 0xc98 <__udivmodsi4_ep>
     c90:	a2 1b       	sub	r26, r18
     c92:	b3 0b       	sbc	r27, r19
     c94:	e4 0b       	sbc	r30, r20
     c96:	f5 0b       	sbc	r31, r21

00000c98 <__udivmodsi4_ep>:
     c98:	66 1f       	adc	r22, r22
     c9a:	77 1f       	adc	r23, r23
     c9c:	88 1f       	adc	r24, r24
     c9e:	99 1f       	adc	r25, r25
     ca0:	1a 94       	dec	r1
     ca2:	69 f7       	brne	.-38     	; 0xc7e <__udivmodsi4_loop>
     ca4:	60 95       	com	r22
     ca6:	70 95       	com	r23
     ca8:	80 95       	com	r24
     caa:	90 95       	com	r25
     cac:	9b 01       	movw	r18, r22
     cae:	ac 01       	movw	r20, r24
     cb0:	bd 01       	movw	r22, r26
     cb2:	cf 01       	movw	r24, r30
     cb4:	08 95       	ret

00000cb6 <calloc>:
     cb6:	0f 93       	push	r16
     cb8:	1f 93       	push	r17
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	86 9f       	mul	r24, r22
     cc0:	80 01       	movw	r16, r0
     cc2:	87 9f       	mul	r24, r23
     cc4:	10 0d       	add	r17, r0
     cc6:	96 9f       	mul	r25, r22
     cc8:	10 0d       	add	r17, r0
     cca:	11 24       	eor	r1, r1
     ccc:	c8 01       	movw	r24, r16
     cce:	0d d0       	rcall	.+26     	; 0xcea <malloc>
     cd0:	ec 01       	movw	r28, r24
     cd2:	00 97       	sbiw	r24, 0x00	; 0
     cd4:	21 f0       	breq	.+8      	; 0xcde <calloc+0x28>
     cd6:	a8 01       	movw	r20, r16
     cd8:	60 e0       	ldi	r22, 0x00	; 0
     cda:	70 e0       	ldi	r23, 0x00	; 0
     cdc:	27 d1       	rcall	.+590    	; 0xf2c <memset>
     cde:	ce 01       	movw	r24, r28
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	1f 91       	pop	r17
     ce6:	0f 91       	pop	r16
     ce8:	08 95       	ret

00000cea <malloc>:
     cea:	0f 93       	push	r16
     cec:	1f 93       	push	r17
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	82 30       	cpi	r24, 0x02	; 2
     cf4:	91 05       	cpc	r25, r1
     cf6:	10 f4       	brcc	.+4      	; 0xcfc <malloc+0x12>
     cf8:	82 e0       	ldi	r24, 0x02	; 2
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	e0 91 f6 03 	lds	r30, 0x03F6	; 0x8003f6 <__flp>
     d00:	f0 91 f7 03 	lds	r31, 0x03F7	; 0x8003f7 <__flp+0x1>
     d04:	20 e0       	ldi	r18, 0x00	; 0
     d06:	30 e0       	ldi	r19, 0x00	; 0
     d08:	a0 e0       	ldi	r26, 0x00	; 0
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	30 97       	sbiw	r30, 0x00	; 0
     d0e:	19 f1       	breq	.+70     	; 0xd56 <malloc+0x6c>
     d10:	40 81       	ld	r20, Z
     d12:	51 81       	ldd	r21, Z+1	; 0x01
     d14:	02 81       	ldd	r16, Z+2	; 0x02
     d16:	13 81       	ldd	r17, Z+3	; 0x03
     d18:	48 17       	cp	r20, r24
     d1a:	59 07       	cpc	r21, r25
     d1c:	c8 f0       	brcs	.+50     	; 0xd50 <malloc+0x66>
     d1e:	84 17       	cp	r24, r20
     d20:	95 07       	cpc	r25, r21
     d22:	69 f4       	brne	.+26     	; 0xd3e <malloc+0x54>
     d24:	10 97       	sbiw	r26, 0x00	; 0
     d26:	31 f0       	breq	.+12     	; 0xd34 <malloc+0x4a>
     d28:	12 96       	adiw	r26, 0x02	; 2
     d2a:	0c 93       	st	X, r16
     d2c:	12 97       	sbiw	r26, 0x02	; 2
     d2e:	13 96       	adiw	r26, 0x03	; 3
     d30:	1c 93       	st	X, r17
     d32:	27 c0       	rjmp	.+78     	; 0xd82 <malloc+0x98>
     d34:	00 93 f6 03 	sts	0x03F6, r16	; 0x8003f6 <__flp>
     d38:	10 93 f7 03 	sts	0x03F7, r17	; 0x8003f7 <__flp+0x1>
     d3c:	22 c0       	rjmp	.+68     	; 0xd82 <malloc+0x98>
     d3e:	21 15       	cp	r18, r1
     d40:	31 05       	cpc	r19, r1
     d42:	19 f0       	breq	.+6      	; 0xd4a <malloc+0x60>
     d44:	42 17       	cp	r20, r18
     d46:	53 07       	cpc	r21, r19
     d48:	18 f4       	brcc	.+6      	; 0xd50 <malloc+0x66>
     d4a:	9a 01       	movw	r18, r20
     d4c:	bd 01       	movw	r22, r26
     d4e:	ef 01       	movw	r28, r30
     d50:	df 01       	movw	r26, r30
     d52:	f8 01       	movw	r30, r16
     d54:	db cf       	rjmp	.-74     	; 0xd0c <malloc+0x22>
     d56:	21 15       	cp	r18, r1
     d58:	31 05       	cpc	r19, r1
     d5a:	f9 f0       	breq	.+62     	; 0xd9a <malloc+0xb0>
     d5c:	28 1b       	sub	r18, r24
     d5e:	39 0b       	sbc	r19, r25
     d60:	24 30       	cpi	r18, 0x04	; 4
     d62:	31 05       	cpc	r19, r1
     d64:	80 f4       	brcc	.+32     	; 0xd86 <malloc+0x9c>
     d66:	8a 81       	ldd	r24, Y+2	; 0x02
     d68:	9b 81       	ldd	r25, Y+3	; 0x03
     d6a:	61 15       	cp	r22, r1
     d6c:	71 05       	cpc	r23, r1
     d6e:	21 f0       	breq	.+8      	; 0xd78 <malloc+0x8e>
     d70:	fb 01       	movw	r30, r22
     d72:	93 83       	std	Z+3, r25	; 0x03
     d74:	82 83       	std	Z+2, r24	; 0x02
     d76:	04 c0       	rjmp	.+8      	; 0xd80 <malloc+0x96>
     d78:	90 93 f7 03 	sts	0x03F7, r25	; 0x8003f7 <__flp+0x1>
     d7c:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <__flp>
     d80:	fe 01       	movw	r30, r28
     d82:	32 96       	adiw	r30, 0x02	; 2
     d84:	44 c0       	rjmp	.+136    	; 0xe0e <malloc+0x124>
     d86:	fe 01       	movw	r30, r28
     d88:	e2 0f       	add	r30, r18
     d8a:	f3 1f       	adc	r31, r19
     d8c:	81 93       	st	Z+, r24
     d8e:	91 93       	st	Z+, r25
     d90:	22 50       	subi	r18, 0x02	; 2
     d92:	31 09       	sbc	r19, r1
     d94:	39 83       	std	Y+1, r19	; 0x01
     d96:	28 83       	st	Y, r18
     d98:	3a c0       	rjmp	.+116    	; 0xe0e <malloc+0x124>
     d9a:	20 91 f4 03 	lds	r18, 0x03F4	; 0x8003f4 <__brkval>
     d9e:	30 91 f5 03 	lds	r19, 0x03F5	; 0x8003f5 <__brkval+0x1>
     da2:	23 2b       	or	r18, r19
     da4:	41 f4       	brne	.+16     	; 0xdb6 <malloc+0xcc>
     da6:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     daa:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     dae:	30 93 f5 03 	sts	0x03F5, r19	; 0x8003f5 <__brkval+0x1>
     db2:	20 93 f4 03 	sts	0x03F4, r18	; 0x8003f4 <__brkval>
     db6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     dba:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     dbe:	21 15       	cp	r18, r1
     dc0:	31 05       	cpc	r19, r1
     dc2:	41 f4       	brne	.+16     	; 0xdd4 <malloc+0xea>
     dc4:	2d b7       	in	r18, 0x3d	; 61
     dc6:	3e b7       	in	r19, 0x3e	; 62
     dc8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     dcc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     dd0:	24 1b       	sub	r18, r20
     dd2:	35 0b       	sbc	r19, r21
     dd4:	e0 91 f4 03 	lds	r30, 0x03F4	; 0x8003f4 <__brkval>
     dd8:	f0 91 f5 03 	lds	r31, 0x03F5	; 0x8003f5 <__brkval+0x1>
     ddc:	e2 17       	cp	r30, r18
     dde:	f3 07       	cpc	r31, r19
     de0:	a0 f4       	brcc	.+40     	; 0xe0a <malloc+0x120>
     de2:	2e 1b       	sub	r18, r30
     de4:	3f 0b       	sbc	r19, r31
     de6:	28 17       	cp	r18, r24
     de8:	39 07       	cpc	r19, r25
     dea:	78 f0       	brcs	.+30     	; 0xe0a <malloc+0x120>
     dec:	ac 01       	movw	r20, r24
     dee:	4e 5f       	subi	r20, 0xFE	; 254
     df0:	5f 4f       	sbci	r21, 0xFF	; 255
     df2:	24 17       	cp	r18, r20
     df4:	35 07       	cpc	r19, r21
     df6:	48 f0       	brcs	.+18     	; 0xe0a <malloc+0x120>
     df8:	4e 0f       	add	r20, r30
     dfa:	5f 1f       	adc	r21, r31
     dfc:	50 93 f5 03 	sts	0x03F5, r21	; 0x8003f5 <__brkval+0x1>
     e00:	40 93 f4 03 	sts	0x03F4, r20	; 0x8003f4 <__brkval>
     e04:	81 93       	st	Z+, r24
     e06:	91 93       	st	Z+, r25
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <malloc+0x124>
     e0a:	e0 e0       	ldi	r30, 0x00	; 0
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	cf 01       	movw	r24, r30
     e10:	df 91       	pop	r29
     e12:	cf 91       	pop	r28
     e14:	1f 91       	pop	r17
     e16:	0f 91       	pop	r16
     e18:	08 95       	ret

00000e1a <free>:
     e1a:	cf 93       	push	r28
     e1c:	df 93       	push	r29
     e1e:	00 97       	sbiw	r24, 0x00	; 0
     e20:	09 f4       	brne	.+2      	; 0xe24 <free+0xa>
     e22:	81 c0       	rjmp	.+258    	; 0xf26 <free+0x10c>
     e24:	fc 01       	movw	r30, r24
     e26:	32 97       	sbiw	r30, 0x02	; 2
     e28:	13 82       	std	Z+3, r1	; 0x03
     e2a:	12 82       	std	Z+2, r1	; 0x02
     e2c:	a0 91 f6 03 	lds	r26, 0x03F6	; 0x8003f6 <__flp>
     e30:	b0 91 f7 03 	lds	r27, 0x03F7	; 0x8003f7 <__flp+0x1>
     e34:	10 97       	sbiw	r26, 0x00	; 0
     e36:	81 f4       	brne	.+32     	; 0xe58 <free+0x3e>
     e38:	20 81       	ld	r18, Z
     e3a:	31 81       	ldd	r19, Z+1	; 0x01
     e3c:	82 0f       	add	r24, r18
     e3e:	93 1f       	adc	r25, r19
     e40:	20 91 f4 03 	lds	r18, 0x03F4	; 0x8003f4 <__brkval>
     e44:	30 91 f5 03 	lds	r19, 0x03F5	; 0x8003f5 <__brkval+0x1>
     e48:	28 17       	cp	r18, r24
     e4a:	39 07       	cpc	r19, r25
     e4c:	51 f5       	brne	.+84     	; 0xea2 <free+0x88>
     e4e:	f0 93 f5 03 	sts	0x03F5, r31	; 0x8003f5 <__brkval+0x1>
     e52:	e0 93 f4 03 	sts	0x03F4, r30	; 0x8003f4 <__brkval>
     e56:	67 c0       	rjmp	.+206    	; 0xf26 <free+0x10c>
     e58:	ed 01       	movw	r28, r26
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	ce 17       	cp	r28, r30
     e60:	df 07       	cpc	r29, r31
     e62:	40 f4       	brcc	.+16     	; 0xe74 <free+0x5a>
     e64:	4a 81       	ldd	r20, Y+2	; 0x02
     e66:	5b 81       	ldd	r21, Y+3	; 0x03
     e68:	9e 01       	movw	r18, r28
     e6a:	41 15       	cp	r20, r1
     e6c:	51 05       	cpc	r21, r1
     e6e:	f1 f0       	breq	.+60     	; 0xeac <free+0x92>
     e70:	ea 01       	movw	r28, r20
     e72:	f5 cf       	rjmp	.-22     	; 0xe5e <free+0x44>
     e74:	d3 83       	std	Z+3, r29	; 0x03
     e76:	c2 83       	std	Z+2, r28	; 0x02
     e78:	40 81       	ld	r20, Z
     e7a:	51 81       	ldd	r21, Z+1	; 0x01
     e7c:	84 0f       	add	r24, r20
     e7e:	95 1f       	adc	r25, r21
     e80:	c8 17       	cp	r28, r24
     e82:	d9 07       	cpc	r29, r25
     e84:	59 f4       	brne	.+22     	; 0xe9c <free+0x82>
     e86:	88 81       	ld	r24, Y
     e88:	99 81       	ldd	r25, Y+1	; 0x01
     e8a:	84 0f       	add	r24, r20
     e8c:	95 1f       	adc	r25, r21
     e8e:	02 96       	adiw	r24, 0x02	; 2
     e90:	91 83       	std	Z+1, r25	; 0x01
     e92:	80 83       	st	Z, r24
     e94:	8a 81       	ldd	r24, Y+2	; 0x02
     e96:	9b 81       	ldd	r25, Y+3	; 0x03
     e98:	93 83       	std	Z+3, r25	; 0x03
     e9a:	82 83       	std	Z+2, r24	; 0x02
     e9c:	21 15       	cp	r18, r1
     e9e:	31 05       	cpc	r19, r1
     ea0:	29 f4       	brne	.+10     	; 0xeac <free+0x92>
     ea2:	f0 93 f7 03 	sts	0x03F7, r31	; 0x8003f7 <__flp+0x1>
     ea6:	e0 93 f6 03 	sts	0x03F6, r30	; 0x8003f6 <__flp>
     eaa:	3d c0       	rjmp	.+122    	; 0xf26 <free+0x10c>
     eac:	e9 01       	movw	r28, r18
     eae:	fb 83       	std	Y+3, r31	; 0x03
     eb0:	ea 83       	std	Y+2, r30	; 0x02
     eb2:	49 91       	ld	r20, Y+
     eb4:	59 91       	ld	r21, Y+
     eb6:	c4 0f       	add	r28, r20
     eb8:	d5 1f       	adc	r29, r21
     eba:	ec 17       	cp	r30, r28
     ebc:	fd 07       	cpc	r31, r29
     ebe:	61 f4       	brne	.+24     	; 0xed8 <free+0xbe>
     ec0:	80 81       	ld	r24, Z
     ec2:	91 81       	ldd	r25, Z+1	; 0x01
     ec4:	84 0f       	add	r24, r20
     ec6:	95 1f       	adc	r25, r21
     ec8:	02 96       	adiw	r24, 0x02	; 2
     eca:	e9 01       	movw	r28, r18
     ecc:	99 83       	std	Y+1, r25	; 0x01
     ece:	88 83       	st	Y, r24
     ed0:	82 81       	ldd	r24, Z+2	; 0x02
     ed2:	93 81       	ldd	r25, Z+3	; 0x03
     ed4:	9b 83       	std	Y+3, r25	; 0x03
     ed6:	8a 83       	std	Y+2, r24	; 0x02
     ed8:	e0 e0       	ldi	r30, 0x00	; 0
     eda:	f0 e0       	ldi	r31, 0x00	; 0
     edc:	12 96       	adiw	r26, 0x02	; 2
     ede:	8d 91       	ld	r24, X+
     ee0:	9c 91       	ld	r25, X
     ee2:	13 97       	sbiw	r26, 0x03	; 3
     ee4:	00 97       	sbiw	r24, 0x00	; 0
     ee6:	19 f0       	breq	.+6      	; 0xeee <free+0xd4>
     ee8:	fd 01       	movw	r30, r26
     eea:	dc 01       	movw	r26, r24
     eec:	f7 cf       	rjmp	.-18     	; 0xedc <free+0xc2>
     eee:	8d 91       	ld	r24, X+
     ef0:	9c 91       	ld	r25, X
     ef2:	11 97       	sbiw	r26, 0x01	; 1
     ef4:	9d 01       	movw	r18, r26
     ef6:	2e 5f       	subi	r18, 0xFE	; 254
     ef8:	3f 4f       	sbci	r19, 0xFF	; 255
     efa:	82 0f       	add	r24, r18
     efc:	93 1f       	adc	r25, r19
     efe:	20 91 f4 03 	lds	r18, 0x03F4	; 0x8003f4 <__brkval>
     f02:	30 91 f5 03 	lds	r19, 0x03F5	; 0x8003f5 <__brkval+0x1>
     f06:	28 17       	cp	r18, r24
     f08:	39 07       	cpc	r19, r25
     f0a:	69 f4       	brne	.+26     	; 0xf26 <free+0x10c>
     f0c:	30 97       	sbiw	r30, 0x00	; 0
     f0e:	29 f4       	brne	.+10     	; 0xf1a <free+0x100>
     f10:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <__flp+0x1>
     f14:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <__flp>
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <free+0x104>
     f1a:	13 82       	std	Z+3, r1	; 0x03
     f1c:	12 82       	std	Z+2, r1	; 0x02
     f1e:	b0 93 f5 03 	sts	0x03F5, r27	; 0x8003f5 <__brkval+0x1>
     f22:	a0 93 f4 03 	sts	0x03F4, r26	; 0x8003f4 <__brkval>
     f26:	df 91       	pop	r29
     f28:	cf 91       	pop	r28
     f2a:	08 95       	ret

00000f2c <memset>:
     f2c:	dc 01       	movw	r26, r24
     f2e:	01 c0       	rjmp	.+2      	; 0xf32 <memset+0x6>
     f30:	6d 93       	st	X+, r22
     f32:	41 50       	subi	r20, 0x01	; 1
     f34:	50 40       	sbci	r21, 0x00	; 0
     f36:	e0 f7       	brcc	.-8      	; 0xf30 <memset+0x4>
     f38:	08 95       	ret

00000f3a <printf>:
     f3a:	cf 93       	push	r28
     f3c:	df 93       	push	r29
     f3e:	cd b7       	in	r28, 0x3d	; 61
     f40:	de b7       	in	r29, 0x3e	; 62
     f42:	ae 01       	movw	r20, r28
     f44:	4a 5f       	subi	r20, 0xFA	; 250
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	fa 01       	movw	r30, r20
     f4a:	61 91       	ld	r22, Z+
     f4c:	71 91       	ld	r23, Z+
     f4e:	af 01       	movw	r20, r30
     f50:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <__iob+0x2>
     f54:	90 91 fb 03 	lds	r25, 0x03FB	; 0x8003fb <__iob+0x3>
     f58:	33 d0       	rcall	.+102    	; 0xfc0 <vfprintf>
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	08 95       	ret

00000f60 <puts>:
     f60:	0f 93       	push	r16
     f62:	1f 93       	push	r17
     f64:	cf 93       	push	r28
     f66:	df 93       	push	r29
     f68:	e0 91 fa 03 	lds	r30, 0x03FA	; 0x8003fa <__iob+0x2>
     f6c:	f0 91 fb 03 	lds	r31, 0x03FB	; 0x8003fb <__iob+0x3>
     f70:	23 81       	ldd	r18, Z+3	; 0x03
     f72:	21 ff       	sbrs	r18, 1
     f74:	1b c0       	rjmp	.+54     	; 0xfac <puts+0x4c>
     f76:	8c 01       	movw	r16, r24
     f78:	d0 e0       	ldi	r29, 0x00	; 0
     f7a:	c0 e0       	ldi	r28, 0x00	; 0
     f7c:	f8 01       	movw	r30, r16
     f7e:	81 91       	ld	r24, Z+
     f80:	8f 01       	movw	r16, r30
     f82:	60 91 fa 03 	lds	r22, 0x03FA	; 0x8003fa <__iob+0x2>
     f86:	70 91 fb 03 	lds	r23, 0x03FB	; 0x8003fb <__iob+0x3>
     f8a:	db 01       	movw	r26, r22
     f8c:	18 96       	adiw	r26, 0x08	; 8
     f8e:	ed 91       	ld	r30, X+
     f90:	fc 91       	ld	r31, X
     f92:	19 97       	sbiw	r26, 0x09	; 9
     f94:	88 23       	and	r24, r24
     f96:	31 f0       	breq	.+12     	; 0xfa4 <puts+0x44>
     f98:	19 95       	eicall
     f9a:	89 2b       	or	r24, r25
     f9c:	79 f3       	breq	.-34     	; 0xf7c <puts+0x1c>
     f9e:	df ef       	ldi	r29, 0xFF	; 255
     fa0:	cf ef       	ldi	r28, 0xFF	; 255
     fa2:	ec cf       	rjmp	.-40     	; 0xf7c <puts+0x1c>
     fa4:	8a e0       	ldi	r24, 0x0A	; 10
     fa6:	19 95       	eicall
     fa8:	89 2b       	or	r24, r25
     faa:	19 f0       	breq	.+6      	; 0xfb2 <puts+0x52>
     fac:	8f ef       	ldi	r24, 0xFF	; 255
     fae:	9f ef       	ldi	r25, 0xFF	; 255
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <puts+0x56>
     fb2:	8d 2f       	mov	r24, r29
     fb4:	9c 2f       	mov	r25, r28
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <vfprintf>:
     fc0:	2f 92       	push	r2
     fc2:	3f 92       	push	r3
     fc4:	4f 92       	push	r4
     fc6:	5f 92       	push	r5
     fc8:	6f 92       	push	r6
     fca:	7f 92       	push	r7
     fcc:	8f 92       	push	r8
     fce:	9f 92       	push	r9
     fd0:	af 92       	push	r10
     fd2:	bf 92       	push	r11
     fd4:	cf 92       	push	r12
     fd6:	df 92       	push	r13
     fd8:	ef 92       	push	r14
     fda:	ff 92       	push	r15
     fdc:	0f 93       	push	r16
     fde:	1f 93       	push	r17
     fe0:	cf 93       	push	r28
     fe2:	df 93       	push	r29
     fe4:	cd b7       	in	r28, 0x3d	; 61
     fe6:	de b7       	in	r29, 0x3e	; 62
     fe8:	2b 97       	sbiw	r28, 0x0b	; 11
     fea:	0f b6       	in	r0, 0x3f	; 63
     fec:	f8 94       	cli
     fee:	de bf       	out	0x3e, r29	; 62
     ff0:	0f be       	out	0x3f, r0	; 63
     ff2:	cd bf       	out	0x3d, r28	; 61
     ff4:	6c 01       	movw	r12, r24
     ff6:	7b 01       	movw	r14, r22
     ff8:	8a 01       	movw	r16, r20
     ffa:	fc 01       	movw	r30, r24
     ffc:	17 82       	std	Z+7, r1	; 0x07
     ffe:	16 82       	std	Z+6, r1	; 0x06
    1000:	83 81       	ldd	r24, Z+3	; 0x03
    1002:	81 ff       	sbrs	r24, 1
    1004:	bf c1       	rjmp	.+894    	; 0x1384 <vfprintf+0x3c4>
    1006:	ce 01       	movw	r24, r28
    1008:	01 96       	adiw	r24, 0x01	; 1
    100a:	3c 01       	movw	r6, r24
    100c:	f6 01       	movw	r30, r12
    100e:	93 81       	ldd	r25, Z+3	; 0x03
    1010:	f7 01       	movw	r30, r14
    1012:	93 fd       	sbrc	r25, 3
    1014:	85 91       	lpm	r24, Z+
    1016:	93 ff       	sbrs	r25, 3
    1018:	81 91       	ld	r24, Z+
    101a:	7f 01       	movw	r14, r30
    101c:	88 23       	and	r24, r24
    101e:	09 f4       	brne	.+2      	; 0x1022 <vfprintf+0x62>
    1020:	ad c1       	rjmp	.+858    	; 0x137c <vfprintf+0x3bc>
    1022:	85 32       	cpi	r24, 0x25	; 37
    1024:	39 f4       	brne	.+14     	; 0x1034 <vfprintf+0x74>
    1026:	93 fd       	sbrc	r25, 3
    1028:	85 91       	lpm	r24, Z+
    102a:	93 ff       	sbrs	r25, 3
    102c:	81 91       	ld	r24, Z+
    102e:	7f 01       	movw	r14, r30
    1030:	85 32       	cpi	r24, 0x25	; 37
    1032:	21 f4       	brne	.+8      	; 0x103c <vfprintf+0x7c>
    1034:	b6 01       	movw	r22, r12
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	d6 d1       	rcall	.+940    	; 0x13e6 <fputc>
    103a:	e8 cf       	rjmp	.-48     	; 0x100c <vfprintf+0x4c>
    103c:	91 2c       	mov	r9, r1
    103e:	21 2c       	mov	r2, r1
    1040:	31 2c       	mov	r3, r1
    1042:	ff e1       	ldi	r31, 0x1F	; 31
    1044:	f3 15       	cp	r31, r3
    1046:	d8 f0       	brcs	.+54     	; 0x107e <vfprintf+0xbe>
    1048:	8b 32       	cpi	r24, 0x2B	; 43
    104a:	79 f0       	breq	.+30     	; 0x106a <vfprintf+0xaa>
    104c:	38 f4       	brcc	.+14     	; 0x105c <vfprintf+0x9c>
    104e:	80 32       	cpi	r24, 0x20	; 32
    1050:	79 f0       	breq	.+30     	; 0x1070 <vfprintf+0xb0>
    1052:	83 32       	cpi	r24, 0x23	; 35
    1054:	a1 f4       	brne	.+40     	; 0x107e <vfprintf+0xbe>
    1056:	23 2d       	mov	r18, r3
    1058:	20 61       	ori	r18, 0x10	; 16
    105a:	1d c0       	rjmp	.+58     	; 0x1096 <vfprintf+0xd6>
    105c:	8d 32       	cpi	r24, 0x2D	; 45
    105e:	61 f0       	breq	.+24     	; 0x1078 <vfprintf+0xb8>
    1060:	80 33       	cpi	r24, 0x30	; 48
    1062:	69 f4       	brne	.+26     	; 0x107e <vfprintf+0xbe>
    1064:	23 2d       	mov	r18, r3
    1066:	21 60       	ori	r18, 0x01	; 1
    1068:	16 c0       	rjmp	.+44     	; 0x1096 <vfprintf+0xd6>
    106a:	83 2d       	mov	r24, r3
    106c:	82 60       	ori	r24, 0x02	; 2
    106e:	38 2e       	mov	r3, r24
    1070:	e3 2d       	mov	r30, r3
    1072:	e4 60       	ori	r30, 0x04	; 4
    1074:	3e 2e       	mov	r3, r30
    1076:	2a c0       	rjmp	.+84     	; 0x10cc <vfprintf+0x10c>
    1078:	f3 2d       	mov	r31, r3
    107a:	f8 60       	ori	r31, 0x08	; 8
    107c:	1d c0       	rjmp	.+58     	; 0x10b8 <vfprintf+0xf8>
    107e:	37 fc       	sbrc	r3, 7
    1080:	2d c0       	rjmp	.+90     	; 0x10dc <vfprintf+0x11c>
    1082:	20 ed       	ldi	r18, 0xD0	; 208
    1084:	28 0f       	add	r18, r24
    1086:	2a 30       	cpi	r18, 0x0A	; 10
    1088:	40 f0       	brcs	.+16     	; 0x109a <vfprintf+0xda>
    108a:	8e 32       	cpi	r24, 0x2E	; 46
    108c:	b9 f4       	brne	.+46     	; 0x10bc <vfprintf+0xfc>
    108e:	36 fc       	sbrc	r3, 6
    1090:	75 c1       	rjmp	.+746    	; 0x137c <vfprintf+0x3bc>
    1092:	23 2d       	mov	r18, r3
    1094:	20 64       	ori	r18, 0x40	; 64
    1096:	32 2e       	mov	r3, r18
    1098:	19 c0       	rjmp	.+50     	; 0x10cc <vfprintf+0x10c>
    109a:	36 fe       	sbrs	r3, 6
    109c:	06 c0       	rjmp	.+12     	; 0x10aa <vfprintf+0xea>
    109e:	8a e0       	ldi	r24, 0x0A	; 10
    10a0:	98 9e       	mul	r9, r24
    10a2:	20 0d       	add	r18, r0
    10a4:	11 24       	eor	r1, r1
    10a6:	92 2e       	mov	r9, r18
    10a8:	11 c0       	rjmp	.+34     	; 0x10cc <vfprintf+0x10c>
    10aa:	ea e0       	ldi	r30, 0x0A	; 10
    10ac:	2e 9e       	mul	r2, r30
    10ae:	20 0d       	add	r18, r0
    10b0:	11 24       	eor	r1, r1
    10b2:	22 2e       	mov	r2, r18
    10b4:	f3 2d       	mov	r31, r3
    10b6:	f0 62       	ori	r31, 0x20	; 32
    10b8:	3f 2e       	mov	r3, r31
    10ba:	08 c0       	rjmp	.+16     	; 0x10cc <vfprintf+0x10c>
    10bc:	8c 36       	cpi	r24, 0x6C	; 108
    10be:	21 f4       	brne	.+8      	; 0x10c8 <vfprintf+0x108>
    10c0:	83 2d       	mov	r24, r3
    10c2:	80 68       	ori	r24, 0x80	; 128
    10c4:	38 2e       	mov	r3, r24
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <vfprintf+0x10c>
    10c8:	88 36       	cpi	r24, 0x68	; 104
    10ca:	41 f4       	brne	.+16     	; 0x10dc <vfprintf+0x11c>
    10cc:	f7 01       	movw	r30, r14
    10ce:	93 fd       	sbrc	r25, 3
    10d0:	85 91       	lpm	r24, Z+
    10d2:	93 ff       	sbrs	r25, 3
    10d4:	81 91       	ld	r24, Z+
    10d6:	7f 01       	movw	r14, r30
    10d8:	81 11       	cpse	r24, r1
    10da:	b3 cf       	rjmp	.-154    	; 0x1042 <vfprintf+0x82>
    10dc:	98 2f       	mov	r25, r24
    10de:	9f 7d       	andi	r25, 0xDF	; 223
    10e0:	95 54       	subi	r25, 0x45	; 69
    10e2:	93 30       	cpi	r25, 0x03	; 3
    10e4:	28 f4       	brcc	.+10     	; 0x10f0 <vfprintf+0x130>
    10e6:	0c 5f       	subi	r16, 0xFC	; 252
    10e8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ea:	9f e3       	ldi	r25, 0x3F	; 63
    10ec:	99 83       	std	Y+1, r25	; 0x01
    10ee:	0d c0       	rjmp	.+26     	; 0x110a <vfprintf+0x14a>
    10f0:	83 36       	cpi	r24, 0x63	; 99
    10f2:	31 f0       	breq	.+12     	; 0x1100 <vfprintf+0x140>
    10f4:	83 37       	cpi	r24, 0x73	; 115
    10f6:	71 f0       	breq	.+28     	; 0x1114 <vfprintf+0x154>
    10f8:	83 35       	cpi	r24, 0x53	; 83
    10fa:	09 f0       	breq	.+2      	; 0x10fe <vfprintf+0x13e>
    10fc:	55 c0       	rjmp	.+170    	; 0x11a8 <vfprintf+0x1e8>
    10fe:	20 c0       	rjmp	.+64     	; 0x1140 <vfprintf+0x180>
    1100:	f8 01       	movw	r30, r16
    1102:	80 81       	ld	r24, Z
    1104:	89 83       	std	Y+1, r24	; 0x01
    1106:	0e 5f       	subi	r16, 0xFE	; 254
    1108:	1f 4f       	sbci	r17, 0xFF	; 255
    110a:	88 24       	eor	r8, r8
    110c:	83 94       	inc	r8
    110e:	91 2c       	mov	r9, r1
    1110:	53 01       	movw	r10, r6
    1112:	12 c0       	rjmp	.+36     	; 0x1138 <vfprintf+0x178>
    1114:	28 01       	movw	r4, r16
    1116:	f2 e0       	ldi	r31, 0x02	; 2
    1118:	4f 0e       	add	r4, r31
    111a:	51 1c       	adc	r5, r1
    111c:	f8 01       	movw	r30, r16
    111e:	a0 80       	ld	r10, Z
    1120:	b1 80       	ldd	r11, Z+1	; 0x01
    1122:	36 fe       	sbrs	r3, 6
    1124:	03 c0       	rjmp	.+6      	; 0x112c <vfprintf+0x16c>
    1126:	69 2d       	mov	r22, r9
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	02 c0       	rjmp	.+4      	; 0x1130 <vfprintf+0x170>
    112c:	6f ef       	ldi	r22, 0xFF	; 255
    112e:	7f ef       	ldi	r23, 0xFF	; 255
    1130:	c5 01       	movw	r24, r10
    1132:	4e d1       	rcall	.+668    	; 0x13d0 <strnlen>
    1134:	4c 01       	movw	r8, r24
    1136:	82 01       	movw	r16, r4
    1138:	f3 2d       	mov	r31, r3
    113a:	ff 77       	andi	r31, 0x7F	; 127
    113c:	3f 2e       	mov	r3, r31
    113e:	15 c0       	rjmp	.+42     	; 0x116a <vfprintf+0x1aa>
    1140:	28 01       	movw	r4, r16
    1142:	22 e0       	ldi	r18, 0x02	; 2
    1144:	42 0e       	add	r4, r18
    1146:	51 1c       	adc	r5, r1
    1148:	f8 01       	movw	r30, r16
    114a:	a0 80       	ld	r10, Z
    114c:	b1 80       	ldd	r11, Z+1	; 0x01
    114e:	36 fe       	sbrs	r3, 6
    1150:	03 c0       	rjmp	.+6      	; 0x1158 <vfprintf+0x198>
    1152:	69 2d       	mov	r22, r9
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	02 c0       	rjmp	.+4      	; 0x115c <vfprintf+0x19c>
    1158:	6f ef       	ldi	r22, 0xFF	; 255
    115a:	7f ef       	ldi	r23, 0xFF	; 255
    115c:	c5 01       	movw	r24, r10
    115e:	2d d1       	rcall	.+602    	; 0x13ba <strnlen_P>
    1160:	4c 01       	movw	r8, r24
    1162:	f3 2d       	mov	r31, r3
    1164:	f0 68       	ori	r31, 0x80	; 128
    1166:	3f 2e       	mov	r3, r31
    1168:	82 01       	movw	r16, r4
    116a:	33 fc       	sbrc	r3, 3
    116c:	19 c0       	rjmp	.+50     	; 0x11a0 <vfprintf+0x1e0>
    116e:	82 2d       	mov	r24, r2
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	88 16       	cp	r8, r24
    1174:	99 06       	cpc	r9, r25
    1176:	a0 f4       	brcc	.+40     	; 0x11a0 <vfprintf+0x1e0>
    1178:	b6 01       	movw	r22, r12
    117a:	80 e2       	ldi	r24, 0x20	; 32
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	33 d1       	rcall	.+614    	; 0x13e6 <fputc>
    1180:	2a 94       	dec	r2
    1182:	f5 cf       	rjmp	.-22     	; 0x116e <vfprintf+0x1ae>
    1184:	f5 01       	movw	r30, r10
    1186:	37 fc       	sbrc	r3, 7
    1188:	85 91       	lpm	r24, Z+
    118a:	37 fe       	sbrs	r3, 7
    118c:	81 91       	ld	r24, Z+
    118e:	5f 01       	movw	r10, r30
    1190:	b6 01       	movw	r22, r12
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	28 d1       	rcall	.+592    	; 0x13e6 <fputc>
    1196:	21 10       	cpse	r2, r1
    1198:	2a 94       	dec	r2
    119a:	21 e0       	ldi	r18, 0x01	; 1
    119c:	82 1a       	sub	r8, r18
    119e:	91 08       	sbc	r9, r1
    11a0:	81 14       	cp	r8, r1
    11a2:	91 04       	cpc	r9, r1
    11a4:	79 f7       	brne	.-34     	; 0x1184 <vfprintf+0x1c4>
    11a6:	e1 c0       	rjmp	.+450    	; 0x136a <vfprintf+0x3aa>
    11a8:	84 36       	cpi	r24, 0x64	; 100
    11aa:	11 f0       	breq	.+4      	; 0x11b0 <vfprintf+0x1f0>
    11ac:	89 36       	cpi	r24, 0x69	; 105
    11ae:	39 f5       	brne	.+78     	; 0x11fe <vfprintf+0x23e>
    11b0:	f8 01       	movw	r30, r16
    11b2:	37 fe       	sbrs	r3, 7
    11b4:	07 c0       	rjmp	.+14     	; 0x11c4 <vfprintf+0x204>
    11b6:	60 81       	ld	r22, Z
    11b8:	71 81       	ldd	r23, Z+1	; 0x01
    11ba:	82 81       	ldd	r24, Z+2	; 0x02
    11bc:	93 81       	ldd	r25, Z+3	; 0x03
    11be:	0c 5f       	subi	r16, 0xFC	; 252
    11c0:	1f 4f       	sbci	r17, 0xFF	; 255
    11c2:	08 c0       	rjmp	.+16     	; 0x11d4 <vfprintf+0x214>
    11c4:	60 81       	ld	r22, Z
    11c6:	71 81       	ldd	r23, Z+1	; 0x01
    11c8:	07 2e       	mov	r0, r23
    11ca:	00 0c       	add	r0, r0
    11cc:	88 0b       	sbc	r24, r24
    11ce:	99 0b       	sbc	r25, r25
    11d0:	0e 5f       	subi	r16, 0xFE	; 254
    11d2:	1f 4f       	sbci	r17, 0xFF	; 255
    11d4:	f3 2d       	mov	r31, r3
    11d6:	ff 76       	andi	r31, 0x6F	; 111
    11d8:	3f 2e       	mov	r3, r31
    11da:	97 ff       	sbrs	r25, 7
    11dc:	09 c0       	rjmp	.+18     	; 0x11f0 <vfprintf+0x230>
    11de:	90 95       	com	r25
    11e0:	80 95       	com	r24
    11e2:	70 95       	com	r23
    11e4:	61 95       	neg	r22
    11e6:	7f 4f       	sbci	r23, 0xFF	; 255
    11e8:	8f 4f       	sbci	r24, 0xFF	; 255
    11ea:	9f 4f       	sbci	r25, 0xFF	; 255
    11ec:	f0 68       	ori	r31, 0x80	; 128
    11ee:	3f 2e       	mov	r3, r31
    11f0:	2a e0       	ldi	r18, 0x0A	; 10
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	a3 01       	movw	r20, r6
    11f6:	33 d1       	rcall	.+614    	; 0x145e <__ultoa_invert>
    11f8:	88 2e       	mov	r8, r24
    11fa:	86 18       	sub	r8, r6
    11fc:	44 c0       	rjmp	.+136    	; 0x1286 <vfprintf+0x2c6>
    11fe:	85 37       	cpi	r24, 0x75	; 117
    1200:	31 f4       	brne	.+12     	; 0x120e <vfprintf+0x24e>
    1202:	23 2d       	mov	r18, r3
    1204:	2f 7e       	andi	r18, 0xEF	; 239
    1206:	b2 2e       	mov	r11, r18
    1208:	2a e0       	ldi	r18, 0x0A	; 10
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	25 c0       	rjmp	.+74     	; 0x1258 <vfprintf+0x298>
    120e:	93 2d       	mov	r25, r3
    1210:	99 7f       	andi	r25, 0xF9	; 249
    1212:	b9 2e       	mov	r11, r25
    1214:	8f 36       	cpi	r24, 0x6F	; 111
    1216:	c1 f0       	breq	.+48     	; 0x1248 <vfprintf+0x288>
    1218:	18 f4       	brcc	.+6      	; 0x1220 <vfprintf+0x260>
    121a:	88 35       	cpi	r24, 0x58	; 88
    121c:	79 f0       	breq	.+30     	; 0x123c <vfprintf+0x27c>
    121e:	ae c0       	rjmp	.+348    	; 0x137c <vfprintf+0x3bc>
    1220:	80 37       	cpi	r24, 0x70	; 112
    1222:	19 f0       	breq	.+6      	; 0x122a <vfprintf+0x26a>
    1224:	88 37       	cpi	r24, 0x78	; 120
    1226:	21 f0       	breq	.+8      	; 0x1230 <vfprintf+0x270>
    1228:	a9 c0       	rjmp	.+338    	; 0x137c <vfprintf+0x3bc>
    122a:	e9 2f       	mov	r30, r25
    122c:	e0 61       	ori	r30, 0x10	; 16
    122e:	be 2e       	mov	r11, r30
    1230:	b4 fe       	sbrs	r11, 4
    1232:	0d c0       	rjmp	.+26     	; 0x124e <vfprintf+0x28e>
    1234:	fb 2d       	mov	r31, r11
    1236:	f4 60       	ori	r31, 0x04	; 4
    1238:	bf 2e       	mov	r11, r31
    123a:	09 c0       	rjmp	.+18     	; 0x124e <vfprintf+0x28e>
    123c:	34 fe       	sbrs	r3, 4
    123e:	0a c0       	rjmp	.+20     	; 0x1254 <vfprintf+0x294>
    1240:	29 2f       	mov	r18, r25
    1242:	26 60       	ori	r18, 0x06	; 6
    1244:	b2 2e       	mov	r11, r18
    1246:	06 c0       	rjmp	.+12     	; 0x1254 <vfprintf+0x294>
    1248:	28 e0       	ldi	r18, 0x08	; 8
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	05 c0       	rjmp	.+10     	; 0x1258 <vfprintf+0x298>
    124e:	20 e1       	ldi	r18, 0x10	; 16
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <vfprintf+0x298>
    1254:	20 e1       	ldi	r18, 0x10	; 16
    1256:	32 e0       	ldi	r19, 0x02	; 2
    1258:	f8 01       	movw	r30, r16
    125a:	b7 fe       	sbrs	r11, 7
    125c:	07 c0       	rjmp	.+14     	; 0x126c <vfprintf+0x2ac>
    125e:	60 81       	ld	r22, Z
    1260:	71 81       	ldd	r23, Z+1	; 0x01
    1262:	82 81       	ldd	r24, Z+2	; 0x02
    1264:	93 81       	ldd	r25, Z+3	; 0x03
    1266:	0c 5f       	subi	r16, 0xFC	; 252
    1268:	1f 4f       	sbci	r17, 0xFF	; 255
    126a:	06 c0       	rjmp	.+12     	; 0x1278 <vfprintf+0x2b8>
    126c:	60 81       	ld	r22, Z
    126e:	71 81       	ldd	r23, Z+1	; 0x01
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	0e 5f       	subi	r16, 0xFE	; 254
    1276:	1f 4f       	sbci	r17, 0xFF	; 255
    1278:	a3 01       	movw	r20, r6
    127a:	f1 d0       	rcall	.+482    	; 0x145e <__ultoa_invert>
    127c:	88 2e       	mov	r8, r24
    127e:	86 18       	sub	r8, r6
    1280:	fb 2d       	mov	r31, r11
    1282:	ff 77       	andi	r31, 0x7F	; 127
    1284:	3f 2e       	mov	r3, r31
    1286:	36 fe       	sbrs	r3, 6
    1288:	0d c0       	rjmp	.+26     	; 0x12a4 <vfprintf+0x2e4>
    128a:	23 2d       	mov	r18, r3
    128c:	2e 7f       	andi	r18, 0xFE	; 254
    128e:	a2 2e       	mov	r10, r18
    1290:	89 14       	cp	r8, r9
    1292:	58 f4       	brcc	.+22     	; 0x12aa <vfprintf+0x2ea>
    1294:	34 fe       	sbrs	r3, 4
    1296:	0b c0       	rjmp	.+22     	; 0x12ae <vfprintf+0x2ee>
    1298:	32 fc       	sbrc	r3, 2
    129a:	09 c0       	rjmp	.+18     	; 0x12ae <vfprintf+0x2ee>
    129c:	83 2d       	mov	r24, r3
    129e:	8e 7e       	andi	r24, 0xEE	; 238
    12a0:	a8 2e       	mov	r10, r24
    12a2:	05 c0       	rjmp	.+10     	; 0x12ae <vfprintf+0x2ee>
    12a4:	b8 2c       	mov	r11, r8
    12a6:	a3 2c       	mov	r10, r3
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <vfprintf+0x2f0>
    12aa:	b8 2c       	mov	r11, r8
    12ac:	01 c0       	rjmp	.+2      	; 0x12b0 <vfprintf+0x2f0>
    12ae:	b9 2c       	mov	r11, r9
    12b0:	a4 fe       	sbrs	r10, 4
    12b2:	0f c0       	rjmp	.+30     	; 0x12d2 <vfprintf+0x312>
    12b4:	fe 01       	movw	r30, r28
    12b6:	e8 0d       	add	r30, r8
    12b8:	f1 1d       	adc	r31, r1
    12ba:	80 81       	ld	r24, Z
    12bc:	80 33       	cpi	r24, 0x30	; 48
    12be:	21 f4       	brne	.+8      	; 0x12c8 <vfprintf+0x308>
    12c0:	9a 2d       	mov	r25, r10
    12c2:	99 7e       	andi	r25, 0xE9	; 233
    12c4:	a9 2e       	mov	r10, r25
    12c6:	09 c0       	rjmp	.+18     	; 0x12da <vfprintf+0x31a>
    12c8:	a2 fe       	sbrs	r10, 2
    12ca:	06 c0       	rjmp	.+12     	; 0x12d8 <vfprintf+0x318>
    12cc:	b3 94       	inc	r11
    12ce:	b3 94       	inc	r11
    12d0:	04 c0       	rjmp	.+8      	; 0x12da <vfprintf+0x31a>
    12d2:	8a 2d       	mov	r24, r10
    12d4:	86 78       	andi	r24, 0x86	; 134
    12d6:	09 f0       	breq	.+2      	; 0x12da <vfprintf+0x31a>
    12d8:	b3 94       	inc	r11
    12da:	a3 fc       	sbrc	r10, 3
    12dc:	10 c0       	rjmp	.+32     	; 0x12fe <vfprintf+0x33e>
    12de:	a0 fe       	sbrs	r10, 0
    12e0:	06 c0       	rjmp	.+12     	; 0x12ee <vfprintf+0x32e>
    12e2:	b2 14       	cp	r11, r2
    12e4:	80 f4       	brcc	.+32     	; 0x1306 <vfprintf+0x346>
    12e6:	28 0c       	add	r2, r8
    12e8:	92 2c       	mov	r9, r2
    12ea:	9b 18       	sub	r9, r11
    12ec:	0d c0       	rjmp	.+26     	; 0x1308 <vfprintf+0x348>
    12ee:	b2 14       	cp	r11, r2
    12f0:	58 f4       	brcc	.+22     	; 0x1308 <vfprintf+0x348>
    12f2:	b6 01       	movw	r22, r12
    12f4:	80 e2       	ldi	r24, 0x20	; 32
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	76 d0       	rcall	.+236    	; 0x13e6 <fputc>
    12fa:	b3 94       	inc	r11
    12fc:	f8 cf       	rjmp	.-16     	; 0x12ee <vfprintf+0x32e>
    12fe:	b2 14       	cp	r11, r2
    1300:	18 f4       	brcc	.+6      	; 0x1308 <vfprintf+0x348>
    1302:	2b 18       	sub	r2, r11
    1304:	02 c0       	rjmp	.+4      	; 0x130a <vfprintf+0x34a>
    1306:	98 2c       	mov	r9, r8
    1308:	21 2c       	mov	r2, r1
    130a:	a4 fe       	sbrs	r10, 4
    130c:	0f c0       	rjmp	.+30     	; 0x132c <vfprintf+0x36c>
    130e:	b6 01       	movw	r22, r12
    1310:	80 e3       	ldi	r24, 0x30	; 48
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	68 d0       	rcall	.+208    	; 0x13e6 <fputc>
    1316:	a2 fe       	sbrs	r10, 2
    1318:	16 c0       	rjmp	.+44     	; 0x1346 <vfprintf+0x386>
    131a:	a1 fc       	sbrc	r10, 1
    131c:	03 c0       	rjmp	.+6      	; 0x1324 <vfprintf+0x364>
    131e:	88 e7       	ldi	r24, 0x78	; 120
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <vfprintf+0x368>
    1324:	88 e5       	ldi	r24, 0x58	; 88
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	b6 01       	movw	r22, r12
    132a:	0c c0       	rjmp	.+24     	; 0x1344 <vfprintf+0x384>
    132c:	8a 2d       	mov	r24, r10
    132e:	86 78       	andi	r24, 0x86	; 134
    1330:	51 f0       	breq	.+20     	; 0x1346 <vfprintf+0x386>
    1332:	a1 fe       	sbrs	r10, 1
    1334:	02 c0       	rjmp	.+4      	; 0x133a <vfprintf+0x37a>
    1336:	8b e2       	ldi	r24, 0x2B	; 43
    1338:	01 c0       	rjmp	.+2      	; 0x133c <vfprintf+0x37c>
    133a:	80 e2       	ldi	r24, 0x20	; 32
    133c:	a7 fc       	sbrc	r10, 7
    133e:	8d e2       	ldi	r24, 0x2D	; 45
    1340:	b6 01       	movw	r22, r12
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	50 d0       	rcall	.+160    	; 0x13e6 <fputc>
    1346:	89 14       	cp	r8, r9
    1348:	30 f4       	brcc	.+12     	; 0x1356 <vfprintf+0x396>
    134a:	b6 01       	movw	r22, r12
    134c:	80 e3       	ldi	r24, 0x30	; 48
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	4a d0       	rcall	.+148    	; 0x13e6 <fputc>
    1352:	9a 94       	dec	r9
    1354:	f8 cf       	rjmp	.-16     	; 0x1346 <vfprintf+0x386>
    1356:	8a 94       	dec	r8
    1358:	f3 01       	movw	r30, r6
    135a:	e8 0d       	add	r30, r8
    135c:	f1 1d       	adc	r31, r1
    135e:	80 81       	ld	r24, Z
    1360:	b6 01       	movw	r22, r12
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	40 d0       	rcall	.+128    	; 0x13e6 <fputc>
    1366:	81 10       	cpse	r8, r1
    1368:	f6 cf       	rjmp	.-20     	; 0x1356 <vfprintf+0x396>
    136a:	22 20       	and	r2, r2
    136c:	09 f4       	brne	.+2      	; 0x1370 <vfprintf+0x3b0>
    136e:	4e ce       	rjmp	.-868    	; 0x100c <vfprintf+0x4c>
    1370:	b6 01       	movw	r22, r12
    1372:	80 e2       	ldi	r24, 0x20	; 32
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	37 d0       	rcall	.+110    	; 0x13e6 <fputc>
    1378:	2a 94       	dec	r2
    137a:	f7 cf       	rjmp	.-18     	; 0x136a <vfprintf+0x3aa>
    137c:	f6 01       	movw	r30, r12
    137e:	86 81       	ldd	r24, Z+6	; 0x06
    1380:	97 81       	ldd	r25, Z+7	; 0x07
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <vfprintf+0x3c8>
    1384:	8f ef       	ldi	r24, 0xFF	; 255
    1386:	9f ef       	ldi	r25, 0xFF	; 255
    1388:	2b 96       	adiw	r28, 0x0b	; 11
    138a:	0f b6       	in	r0, 0x3f	; 63
    138c:	f8 94       	cli
    138e:	de bf       	out	0x3e, r29	; 62
    1390:	0f be       	out	0x3f, r0	; 63
    1392:	cd bf       	out	0x3d, r28	; 61
    1394:	df 91       	pop	r29
    1396:	cf 91       	pop	r28
    1398:	1f 91       	pop	r17
    139a:	0f 91       	pop	r16
    139c:	ff 90       	pop	r15
    139e:	ef 90       	pop	r14
    13a0:	df 90       	pop	r13
    13a2:	cf 90       	pop	r12
    13a4:	bf 90       	pop	r11
    13a6:	af 90       	pop	r10
    13a8:	9f 90       	pop	r9
    13aa:	8f 90       	pop	r8
    13ac:	7f 90       	pop	r7
    13ae:	6f 90       	pop	r6
    13b0:	5f 90       	pop	r5
    13b2:	4f 90       	pop	r4
    13b4:	3f 90       	pop	r3
    13b6:	2f 90       	pop	r2
    13b8:	08 95       	ret

000013ba <strnlen_P>:
    13ba:	fc 01       	movw	r30, r24
    13bc:	05 90       	lpm	r0, Z+
    13be:	61 50       	subi	r22, 0x01	; 1
    13c0:	70 40       	sbci	r23, 0x00	; 0
    13c2:	01 10       	cpse	r0, r1
    13c4:	d8 f7       	brcc	.-10     	; 0x13bc <strnlen_P+0x2>
    13c6:	80 95       	com	r24
    13c8:	90 95       	com	r25
    13ca:	8e 0f       	add	r24, r30
    13cc:	9f 1f       	adc	r25, r31
    13ce:	08 95       	ret

000013d0 <strnlen>:
    13d0:	fc 01       	movw	r30, r24
    13d2:	61 50       	subi	r22, 0x01	; 1
    13d4:	70 40       	sbci	r23, 0x00	; 0
    13d6:	01 90       	ld	r0, Z+
    13d8:	01 10       	cpse	r0, r1
    13da:	d8 f7       	brcc	.-10     	; 0x13d2 <strnlen+0x2>
    13dc:	80 95       	com	r24
    13de:	90 95       	com	r25
    13e0:	8e 0f       	add	r24, r30
    13e2:	9f 1f       	adc	r25, r31
    13e4:	08 95       	ret

000013e6 <fputc>:
    13e6:	0f 93       	push	r16
    13e8:	1f 93       	push	r17
    13ea:	cf 93       	push	r28
    13ec:	df 93       	push	r29
    13ee:	fb 01       	movw	r30, r22
    13f0:	23 81       	ldd	r18, Z+3	; 0x03
    13f2:	21 fd       	sbrc	r18, 1
    13f4:	03 c0       	rjmp	.+6      	; 0x13fc <fputc+0x16>
    13f6:	8f ef       	ldi	r24, 0xFF	; 255
    13f8:	9f ef       	ldi	r25, 0xFF	; 255
    13fa:	2c c0       	rjmp	.+88     	; 0x1454 <fputc+0x6e>
    13fc:	22 ff       	sbrs	r18, 2
    13fe:	16 c0       	rjmp	.+44     	; 0x142c <fputc+0x46>
    1400:	46 81       	ldd	r20, Z+6	; 0x06
    1402:	57 81       	ldd	r21, Z+7	; 0x07
    1404:	24 81       	ldd	r18, Z+4	; 0x04
    1406:	35 81       	ldd	r19, Z+5	; 0x05
    1408:	42 17       	cp	r20, r18
    140a:	53 07       	cpc	r21, r19
    140c:	44 f4       	brge	.+16     	; 0x141e <fputc+0x38>
    140e:	a0 81       	ld	r26, Z
    1410:	b1 81       	ldd	r27, Z+1	; 0x01
    1412:	9d 01       	movw	r18, r26
    1414:	2f 5f       	subi	r18, 0xFF	; 255
    1416:	3f 4f       	sbci	r19, 0xFF	; 255
    1418:	31 83       	std	Z+1, r19	; 0x01
    141a:	20 83       	st	Z, r18
    141c:	8c 93       	st	X, r24
    141e:	26 81       	ldd	r18, Z+6	; 0x06
    1420:	37 81       	ldd	r19, Z+7	; 0x07
    1422:	2f 5f       	subi	r18, 0xFF	; 255
    1424:	3f 4f       	sbci	r19, 0xFF	; 255
    1426:	37 83       	std	Z+7, r19	; 0x07
    1428:	26 83       	std	Z+6, r18	; 0x06
    142a:	14 c0       	rjmp	.+40     	; 0x1454 <fputc+0x6e>
    142c:	8b 01       	movw	r16, r22
    142e:	ec 01       	movw	r28, r24
    1430:	fb 01       	movw	r30, r22
    1432:	00 84       	ldd	r0, Z+8	; 0x08
    1434:	f1 85       	ldd	r31, Z+9	; 0x09
    1436:	e0 2d       	mov	r30, r0
    1438:	19 95       	eicall
    143a:	89 2b       	or	r24, r25
    143c:	e1 f6       	brne	.-72     	; 0x13f6 <fputc+0x10>
    143e:	d8 01       	movw	r26, r16
    1440:	16 96       	adiw	r26, 0x06	; 6
    1442:	8d 91       	ld	r24, X+
    1444:	9c 91       	ld	r25, X
    1446:	17 97       	sbiw	r26, 0x07	; 7
    1448:	01 96       	adiw	r24, 0x01	; 1
    144a:	17 96       	adiw	r26, 0x07	; 7
    144c:	9c 93       	st	X, r25
    144e:	8e 93       	st	-X, r24
    1450:	16 97       	sbiw	r26, 0x06	; 6
    1452:	ce 01       	movw	r24, r28
    1454:	df 91       	pop	r29
    1456:	cf 91       	pop	r28
    1458:	1f 91       	pop	r17
    145a:	0f 91       	pop	r16
    145c:	08 95       	ret

0000145e <__ultoa_invert>:
    145e:	fa 01       	movw	r30, r20
    1460:	aa 27       	eor	r26, r26
    1462:	28 30       	cpi	r18, 0x08	; 8
    1464:	51 f1       	breq	.+84     	; 0x14ba <__ultoa_invert+0x5c>
    1466:	20 31       	cpi	r18, 0x10	; 16
    1468:	81 f1       	breq	.+96     	; 0x14ca <__ultoa_invert+0x6c>
    146a:	e8 94       	clt
    146c:	6f 93       	push	r22
    146e:	6e 7f       	andi	r22, 0xFE	; 254
    1470:	6e 5f       	subi	r22, 0xFE	; 254
    1472:	7f 4f       	sbci	r23, 0xFF	; 255
    1474:	8f 4f       	sbci	r24, 0xFF	; 255
    1476:	9f 4f       	sbci	r25, 0xFF	; 255
    1478:	af 4f       	sbci	r26, 0xFF	; 255
    147a:	b1 e0       	ldi	r27, 0x01	; 1
    147c:	3e d0       	rcall	.+124    	; 0x14fa <__ultoa_invert+0x9c>
    147e:	b4 e0       	ldi	r27, 0x04	; 4
    1480:	3c d0       	rcall	.+120    	; 0x14fa <__ultoa_invert+0x9c>
    1482:	67 0f       	add	r22, r23
    1484:	78 1f       	adc	r23, r24
    1486:	89 1f       	adc	r24, r25
    1488:	9a 1f       	adc	r25, r26
    148a:	a1 1d       	adc	r26, r1
    148c:	68 0f       	add	r22, r24
    148e:	79 1f       	adc	r23, r25
    1490:	8a 1f       	adc	r24, r26
    1492:	91 1d       	adc	r25, r1
    1494:	a1 1d       	adc	r26, r1
    1496:	6a 0f       	add	r22, r26
    1498:	71 1d       	adc	r23, r1
    149a:	81 1d       	adc	r24, r1
    149c:	91 1d       	adc	r25, r1
    149e:	a1 1d       	adc	r26, r1
    14a0:	20 d0       	rcall	.+64     	; 0x14e2 <__ultoa_invert+0x84>
    14a2:	09 f4       	brne	.+2      	; 0x14a6 <__ultoa_invert+0x48>
    14a4:	68 94       	set
    14a6:	3f 91       	pop	r19
    14a8:	2a e0       	ldi	r18, 0x0A	; 10
    14aa:	26 9f       	mul	r18, r22
    14ac:	11 24       	eor	r1, r1
    14ae:	30 19       	sub	r19, r0
    14b0:	30 5d       	subi	r19, 0xD0	; 208
    14b2:	31 93       	st	Z+, r19
    14b4:	de f6       	brtc	.-74     	; 0x146c <__ultoa_invert+0xe>
    14b6:	cf 01       	movw	r24, r30
    14b8:	08 95       	ret
    14ba:	46 2f       	mov	r20, r22
    14bc:	47 70       	andi	r20, 0x07	; 7
    14be:	40 5d       	subi	r20, 0xD0	; 208
    14c0:	41 93       	st	Z+, r20
    14c2:	b3 e0       	ldi	r27, 0x03	; 3
    14c4:	0f d0       	rcall	.+30     	; 0x14e4 <__ultoa_invert+0x86>
    14c6:	c9 f7       	brne	.-14     	; 0x14ba <__ultoa_invert+0x5c>
    14c8:	f6 cf       	rjmp	.-20     	; 0x14b6 <__ultoa_invert+0x58>
    14ca:	46 2f       	mov	r20, r22
    14cc:	4f 70       	andi	r20, 0x0F	; 15
    14ce:	40 5d       	subi	r20, 0xD0	; 208
    14d0:	4a 33       	cpi	r20, 0x3A	; 58
    14d2:	18 f0       	brcs	.+6      	; 0x14da <__ultoa_invert+0x7c>
    14d4:	49 5d       	subi	r20, 0xD9	; 217
    14d6:	31 fd       	sbrc	r19, 1
    14d8:	40 52       	subi	r20, 0x20	; 32
    14da:	41 93       	st	Z+, r20
    14dc:	02 d0       	rcall	.+4      	; 0x14e2 <__ultoa_invert+0x84>
    14de:	a9 f7       	brne	.-22     	; 0x14ca <__ultoa_invert+0x6c>
    14e0:	ea cf       	rjmp	.-44     	; 0x14b6 <__ultoa_invert+0x58>
    14e2:	b4 e0       	ldi	r27, 0x04	; 4
    14e4:	a6 95       	lsr	r26
    14e6:	97 95       	ror	r25
    14e8:	87 95       	ror	r24
    14ea:	77 95       	ror	r23
    14ec:	67 95       	ror	r22
    14ee:	ba 95       	dec	r27
    14f0:	c9 f7       	brne	.-14     	; 0x14e4 <__ultoa_invert+0x86>
    14f2:	00 97       	sbiw	r24, 0x00	; 0
    14f4:	61 05       	cpc	r22, r1
    14f6:	71 05       	cpc	r23, r1
    14f8:	08 95       	ret
    14fa:	9b 01       	movw	r18, r22
    14fc:	ac 01       	movw	r20, r24
    14fe:	0a 2e       	mov	r0, r26
    1500:	06 94       	lsr	r0
    1502:	57 95       	ror	r21
    1504:	47 95       	ror	r20
    1506:	37 95       	ror	r19
    1508:	27 95       	ror	r18
    150a:	ba 95       	dec	r27
    150c:	c9 f7       	brne	.-14     	; 0x1500 <__ultoa_invert+0xa2>
    150e:	62 0f       	add	r22, r18
    1510:	73 1f       	adc	r23, r19
    1512:	84 1f       	adc	r24, r20
    1514:	95 1f       	adc	r25, r21
    1516:	a0 1d       	adc	r26, r0
    1518:	08 95       	ret

0000151a <_exit>:
    151a:	f8 94       	cli

0000151c <__stop_program>:
    151c:	ff cf       	rjmp	.-2      	; 0x151c <__stop_program>
