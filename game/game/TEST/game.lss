
game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d0  00800200  000014ca  0000155e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000011c  008002d0  008002d0  0000162e  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  0000162e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021c0  00000000  00000000  0000187c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001244  00000000  00000000  00003a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d5a  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  000059dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b0b  00000000  00000000  0000606c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016c0  00000000  00000000  00006b77  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00008237  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	ac c3       	rjmp	.+1880   	; 0x7be <__vector_25>
      66:	00 00       	nop
      68:	eb c3       	rjmp	.+2006   	; 0x840 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	22 c4       	rjmp	.+2116   	; 0x8d6 <__vector_36>
      92:	00 00       	nop
      94:	61 c4       	rjmp	.+2242   	; 0x958 <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	90 c4       	rjmp	.+2336   	; 0x9ee <__vector_51>
      ce:	00 00       	nop
      d0:	cf c4       	rjmp	.+2462   	; 0xa70 <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	16 c5       	rjmp	.+2604   	; 0xb06 <__vector_54>
      da:	00 00       	nop
      dc:	55 c5       	rjmp	.+2730   	; 0xb88 <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ea ec       	ldi	r30, 0xCA	; 202
      fc:	f4 e1       	ldi	r31, 0x14	; 20
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 3d       	cpi	r26, 0xD0	; 208
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	a0 ed       	ldi	r26, 0xD0	; 208
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 3e       	cpi	r26, 0xEC	; 236
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	b1 d0       	rcall	.+354    	; 0x282 <main>
     120:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <get_array>:
	{
		output_value(*array_p);
		array_p++;
	}
	*(self->array) = *(self->beginning);
}
     126:	fc 01       	movw	r30, r24
     128:	80 81       	ld	r24, Z
     12a:	91 81       	ldd	r25, Z+1	; 0x01
     12c:	08 95       	ret

0000012e <get_beginning>:
     12e:	fc 01       	movw	r30, r24
     130:	82 81       	ldd	r24, Z+2	; 0x02
     132:	93 81       	ldd	r25, Z+3	; 0x03
     134:	08 95       	ret

00000136 <increment_size>:
     136:	fc 01       	movw	r30, r24
     138:	26 81       	ldd	r18, Z+6	; 0x06
     13a:	37 81       	ldd	r19, Z+7	; 0x07
     13c:	2f 5f       	subi	r18, 0xFF	; 255
     13e:	3f 4f       	sbci	r19, 0xFF	; 255
     140:	37 83       	std	Z+7, r19	; 0x07
     142:	26 83       	std	Z+6, r18	; 0x06
     144:	08 95       	ret

00000146 <reset_array_p>:
     146:	fc 01       	movw	r30, r24
     148:	22 81       	ldd	r18, Z+2	; 0x02
     14a:	33 81       	ldd	r19, Z+3	; 0x03
     14c:	31 83       	std	Z+1, r19	; 0x01
     14e:	20 83       	st	Z, r18
     150:	08 95       	ret

00000152 <seq_create>:
     152:	0f 93       	push	r16
     154:	1f 93       	push	r17
     156:	cf 93       	push	r28
     158:	df 93       	push	r29
     15a:	8c 01       	movw	r16, r24
     15c:	88 e0       	ldi	r24, 0x08	; 8
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	9a d5       	rcall	.+2868   	; 0xc96 <malloc>
     162:	ec 01       	movw	r28, r24
     164:	62 e0       	ldi	r22, 0x02	; 2
     166:	70 e0       	ldi	r23, 0x00	; 0
     168:	c8 01       	movw	r24, r16
     16a:	7b d5       	rcall	.+2806   	; 0xc62 <calloc>
     16c:	99 83       	std	Y+1, r25	; 0x01
     16e:	88 83       	st	Y, r24
     170:	9b 83       	std	Y+3, r25	; 0x03
     172:	8a 83       	std	Y+2, r24	; 0x02
     174:	1f 82       	std	Y+7, r1	; 0x07
     176:	1e 82       	std	Y+6, r1	; 0x06
     178:	ce 01       	movw	r24, r28
     17a:	df 91       	pop	r29
     17c:	cf 91       	pop	r28
     17e:	1f 91       	pop	r17
     180:	0f 91       	pop	r16
     182:	08 95       	ret

00000184 <copy_seq>:
	_delay_ms(1000);
	PORTA = 0xff;
}

seq_t copy_seq(seq_t self, seq_t new_self)
{
     184:	0f 93       	push	r16
     186:	1f 93       	push	r17
     188:	cf 93       	push	r28
     18a:	df 93       	push	r29
     18c:	8c 01       	movw	r16, r24
     18e:	eb 01       	movw	r28, r22
	int i;
	int *arrayInitial_p = self->array;  
     190:	dc 01       	movw	r26, r24
     192:	3c 91       	ld	r19, X
     194:	11 96       	adiw	r26, 0x01	; 1
     196:	2c 91       	ld	r18, X
	int *array2_p = new_self->array;
     198:	a8 81       	ld	r26, Y
     19a:	b9 81       	ldd	r27, Y+1	; 0x01
	
	for(i = 0; i <= self->size; i++)
     19c:	fc 01       	movw	r30, r24
     19e:	86 81       	ldd	r24, Z+6	; 0x06
     1a0:	97 81       	ldd	r25, Z+7	; 0x07
     1a2:	99 23       	and	r25, r25
     1a4:	bc f0       	brlt	.+46     	; 0x1d4 <copy_seq+0x50>
     1a6:	43 2f       	mov	r20, r19
     1a8:	52 2f       	mov	r21, r18
     1aa:	20 e0       	ldi	r18, 0x00	; 0
     1ac:	30 e0       	ldi	r19, 0x00	; 0
	{
		*array2_p = *arrayInitial_p;
     1ae:	fa 01       	movw	r30, r20
     1b0:	81 91       	ld	r24, Z+
     1b2:	91 91       	ld	r25, Z+
     1b4:	af 01       	movw	r20, r30
     1b6:	8d 93       	st	X+, r24
     1b8:	9d 93       	st	X+, r25
		new_self->size++;	//cuz' you are not able to check the size of the array with pointer , must keep track of size
     1ba:	8e 81       	ldd	r24, Y+6	; 0x06
     1bc:	9f 81       	ldd	r25, Y+7	; 0x07
     1be:	01 96       	adiw	r24, 0x01	; 1
     1c0:	9f 83       	std	Y+7, r25	; 0x07
     1c2:	8e 83       	std	Y+6, r24	; 0x06
{
	int i;
	int *arrayInitial_p = self->array;  
	int *array2_p = new_self->array;
	
	for(i = 0; i <= self->size; i++)
     1c4:	2f 5f       	subi	r18, 0xFF	; 255
     1c6:	3f 4f       	sbci	r19, 0xFF	; 255
     1c8:	f8 01       	movw	r30, r16
     1ca:	86 81       	ldd	r24, Z+6	; 0x06
     1cc:	97 81       	ldd	r25, Z+7	; 0x07
     1ce:	82 17       	cp	r24, r18
     1d0:	93 07       	cpc	r25, r19
     1d2:	6c f7       	brge	.-38     	; 0x1ae <copy_seq+0x2a>
		new_self->size++;	//cuz' you are not able to check the size of the array with pointer , must keep track of size
		arrayInitial_p++;
		array2_p++;
	}
	
	*self->array = *self->beginning; //when reusing this array, the pointer is reseted to point to the beginning
     1d4:	d8 01       	movw	r26, r16
     1d6:	2d 91       	ld	r18, X+
     1d8:	3c 91       	ld	r19, X
     1da:	11 97       	sbiw	r26, 0x01	; 1
     1dc:	12 96       	adiw	r26, 0x02	; 2
     1de:	0d 90       	ld	r0, X+
     1e0:	bc 91       	ld	r27, X
     1e2:	a0 2d       	mov	r26, r0
     1e4:	8d 91       	ld	r24, X+
     1e6:	9c 91       	ld	r25, X
     1e8:	f9 01       	movw	r30, r18
     1ea:	91 83       	std	Z+1, r25	; 0x01
     1ec:	80 83       	st	Z, r24
	*new_self->array = *new_self->beginning;
     1ee:	e8 81       	ld	r30, Y
     1f0:	f9 81       	ldd	r31, Y+1	; 0x01
     1f2:	aa 81       	ldd	r26, Y+2	; 0x02
     1f4:	bb 81       	ldd	r27, Y+3	; 0x03
     1f6:	8d 91       	ld	r24, X+
     1f8:	9c 91       	ld	r25, X
     1fa:	91 83       	std	Z+1, r25	; 0x01
     1fc:	80 83       	st	Z, r24
	
	free(self->array);
     1fe:	d8 01       	movw	r26, r16
     200:	8d 91       	ld	r24, X+
     202:	9c 91       	ld	r25, X
     204:	e0 d5       	rcall	.+3008   	; 0xdc6 <free>
	free(self);
     206:	c8 01       	movw	r24, r16
     208:	de d5       	rcall	.+3004   	; 0xdc6 <free>
	
	return new_self;

}
     20a:	ce 01       	movw	r24, r28
     20c:	df 91       	pop	r29
     20e:	cf 91       	pop	r28
     210:	1f 91       	pop	r17
     212:	0f 91       	pop	r16
     214:	08 95       	ret

00000216 <seq_expand>:

seq_t seq_expand(seq_t self)
{
     216:	0f 93       	push	r16
     218:	1f 93       	push	r17
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	8c 01       	movw	r16, r24
	seq_t new_seq;  //variable creation    
		
	int new_size = self->size + 50 ; // access size field of self
	new_seq = seq_create(new_size);
     220:	fc 01       	movw	r30, r24
     222:	86 81       	ldd	r24, Z+6	; 0x06
     224:	97 81       	ldd	r25, Z+7	; 0x07
     226:	c2 96       	adiw	r24, 0x32	; 50
     228:	94 df       	rcall	.-216    	; 0x152 <seq_create>
     22a:	ec 01       	movw	r28, r24
	
	copy_seq(self, new_seq);
     22c:	bc 01       	movw	r22, r24
     22e:	c8 01       	movw	r24, r16
     230:	a9 df       	rcall	.-174    	; 0x184 <copy_seq>
	  seq_t *new_seq= malloc(sizeof(seq_t));            allocates memory for the expanded struct 
	  new_seq->beginning = (*new_seq).array;
	  new_seq->size = 0;                    cuz' you are not able to check the size of the array with pointer , must keep track of size*/
	
	return new_seq;
}
     232:	ce 01       	movw	r24, r28
     234:	df 91       	pop	r29
     236:	cf 91       	pop	r28
     238:	1f 91       	pop	r17
     23a:	0f 91       	pop	r16
     23c:	08 95       	ret

0000023e <seq_add_to>:
	new_seq->size = 0;
	return new_seq;
}

void seq_add_to(seq_t self, int value) 
{
     23e:	0f 93       	push	r16
     240:	1f 93       	push	r17
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	ec 01       	movw	r28, r24
     248:	8b 01       	movw	r16, r22
	  if (self->size  == self->max_size) {
     24a:	2e 81       	ldd	r18, Y+6	; 0x06
     24c:	3f 81       	ldd	r19, Y+7	; 0x07
     24e:	8c 81       	ldd	r24, Y+4	; 0x04
     250:	9d 81       	ldd	r25, Y+5	; 0x05
     252:	28 17       	cp	r18, r24
     254:	39 07       	cpc	r19, r25
     256:	11 f4       	brne	.+4      	; 0x25c <seq_add_to+0x1e>
		seq_expand(self);
     258:	ce 01       	movw	r24, r28
     25a:	dd df       	rcall	.-70     	; 0x216 <seq_expand>
	}
	
	*(self->array) = value;
     25c:	e8 81       	ld	r30, Y
     25e:	f9 81       	ldd	r31, Y+1	; 0x01
     260:	11 83       	std	Z+1, r17	; 0x01
     262:	00 83       	st	Z, r16
	self->array++;
     264:	88 81       	ld	r24, Y
     266:	99 81       	ldd	r25, Y+1	; 0x01
     268:	02 96       	adiw	r24, 0x02	; 2
     26a:	99 83       	std	Y+1, r25	; 0x01
     26c:	88 83       	st	Y, r24
	self->size++;
     26e:	8e 81       	ldd	r24, Y+6	; 0x06
     270:	9f 81       	ldd	r25, Y+7	; 0x07
     272:	01 96       	adiw	r24, 0x01	; 1
     274:	9f 83       	std	Y+7, r25	; 0x07
     276:	8e 83       	std	Y+6, r24	; 0x06
}
     278:	df 91       	pop	r29
     27a:	cf 91       	pop	r28
     27c:	1f 91       	pop	r17
     27e:	0f 91       	pop	r16
     280:	08 95       	ret

00000282 <main>:
}

#ifdef TEST
int main()
{
	init_stdio(0, 10000000L);
     282:	40 e8       	ldi	r20, 0x80	; 128
     284:	56 e9       	ldi	r21, 0x96	; 150
     286:	68 e9       	ldi	r22, 0x98	; 152
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	5f d1       	rcall	.+702    	; 0x54c <init_stdio>
	sei();
     28e:	78 94       	sei
	
	DDRA = 0xff;
     290:	8f ef       	ldi	r24, 0xFF	; 255
     292:	81 b9       	out	0x01, r24	; 1
	PORTA = 0xff;
     294:	82 b9       	out	0x02, r24	; 2
	PORTA = ~2;
     296:	8d ef       	ldi	r24, 0xFD	; 253
     298:	82 b9       	out	0x02, r24	; 2

int tests_run = 0;
 
static char * test_seq_create()
{
	printf("\rI'm in the function\n\r");
     29a:	81 e6       	ldi	r24, 0x61	; 97
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	21 d6       	rcall	.+3138   	; 0xee6 <printf>
	int size = 10, i, value, *array_start;
	seq_t item = seq_create(size);
     2a4:	8a e0       	ldi	r24, 0x0A	; 10
     2a6:	90 e0       	ldi	r25, 0x00	; 0
	
	array_start = get_array(item);
     2a8:	54 df       	rcall	.-344    	; 0x152 <seq_create>
     2aa:	3d df       	rcall	.-390    	; 0x126 <get_array>
	
	for(i = 0; i < 10; i++)
	{
		value = *array_start;
		mu_assert("element != 0", value == 0);
     2ac:	0f 90       	pop	r0
     2ae:	0f 90       	pop	r0
     2b0:	fc 01       	movw	r30, r24
     2b2:	20 81       	ld	r18, Z
     2b4:	31 81       	ldd	r19, Z+1	; 0x01
     2b6:	23 2b       	or	r18, r19
     2b8:	09 f4       	brne	.+2      	; 0x2bc <main+0x3a>
     2ba:	28 c1       	rjmp	.+592    	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     2bc:	a0 c0       	rjmp	.+320    	; 0x3fe <main+0x17c>
	
	array_start = get_array(item);
	
	for(i = 0; i < 10; i++)
	{
		value = *array_start;
     2be:	21 91       	ld	r18, Z+
     2c0:	31 91       	ld	r19, Z+
		mu_assert("element != 0", value == 0);
     2c2:	23 2b       	or	r18, r19
     2c4:	09 f0       	breq	.+2      	; 0x2c8 <main+0x46>
     2c6:	9b c0       	rjmp	.+310    	; 0x3fe <main+0x17c>
	int size = 10, i, value, *array_start;
	seq_t item = seq_create(size);
	
	array_start = get_array(item);
	
	for(i = 0; i < 10; i++)
     2c8:	8e 17       	cp	r24, r30
     2ca:	9f 07       	cpc	r25, r31
     2cc:	c1 f7       	brne	.-16     	; 0x2be <main+0x3c>
     2ce:	a3 c0       	rjmp	.+326    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
     2d0:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
     2d4:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     2d8:	01 96       	adiw	r24, 0x01	; 1
     2da:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     2de:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
	return 0;
}

static char * test_copy_seq()
{
	printf("\rIm in the copySeq\n");
     2e2:	88 e7       	ldi	r24, 0x78	; 120
     2e4:	92 e0       	ldi	r25, 0x02	; 2
	int size1 = 5, size2 =10;
	int  i , j, value1, value2;
	int *array_start1, *array_start2;
		
	seq_t struct1 = seq_create(size1);
     2e6:	12 d6       	rcall	.+3108   	; 0xf0c <puts>
     2e8:	85 e0       	ldi	r24, 0x05	; 5
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	32 df       	rcall	.-412    	; 0x152 <seq_create>
	seq_t struct2 = seq_create(size2);
     2ee:	3c 01       	movw	r6, r24
     2f0:	8a e0       	ldi	r24, 0x0A	; 10
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	2e df       	rcall	.-420    	; 0x152 <seq_create>
	
	array_start1 = get_array(struct1);
     2f6:	2c 01       	movw	r4, r24
     2f8:	c3 01       	movw	r24, r6
     2fa:	15 df       	rcall	.-470    	; 0x126 <get_array>
     2fc:	ec 01       	movw	r28, r24
	array_start2 = get_array(struct2);
     2fe:	c2 01       	movw	r24, r4
     300:	12 df       	rcall	.-476    	; 0x126 <get_array>
     302:	1c 01       	movw	r2, r24
	int *array_start1, *array_start2;
		
	seq_t struct1 = seq_create(size1);
	seq_t struct2 = seq_create(size2);
	
	array_start1 = get_array(struct1);
     304:	8e 01       	movw	r16, r28
	array_start2 = get_array(struct2);
	
	for(i = 0; i < size1; i++)
     306:	e1 2c       	mov	r14, r1
     308:	f1 2c       	mov	r15, r1
	{
		*array_start1 = i;
     30a:	f8 01       	movw	r30, r16
     30c:	e1 92       	st	Z+, r14
     30e:	f1 92       	st	Z+, r15
     310:	8f 01       	movw	r16, r30
		 array_start1++;
		 increment_size(struct1);
     312:	c3 01       	movw	r24, r6
     314:	10 df       	rcall	.-480    	; 0x136 <increment_size>
	seq_t struct2 = seq_create(size2);
	
	array_start1 = get_array(struct1);
	array_start2 = get_array(struct2);
	
	for(i = 0; i < size1; i++)
     316:	ff ef       	ldi	r31, 0xFF	; 255
     318:	ef 1a       	sub	r14, r31
     31a:	ff 0a       	sbc	r15, r31
     31c:	85 e0       	ldi	r24, 0x05	; 5
     31e:	e8 16       	cp	r14, r24
     320:	f1 04       	cpc	r15, r1
		*array_start1 = i;
		 array_start1++;
		 increment_size(struct1);
	}
	
	reset_array_p(struct1);
     322:	99 f7       	brne	.-26     	; 0x30a <main+0x88>
     324:	c3 01       	movw	r24, r6
     326:	0f df       	rcall	.-482    	; 0x146 <reset_array_p>
	
	copy_seq(struct1, struct2);
     328:	b2 01       	movw	r22, r4
     32a:	c3 01       	movw	r24, r6
     32c:	2b df       	rcall	.-426    	; 0x184 <copy_seq>
     32e:	8e 01       	movw	r16, r28
     330:	06 5f       	subi	r16, 0xF6	; 246
     332:	1f 4f       	sbci	r17, 0xFF	; 255
     334:	64 96       	adiw	r28, 0x14	; 20
     336:	0f 2e       	mov	r0, r31
	for (j=0; j<size1; j++)
	{
		value1 = *array_start1;
		value2 = *array_start2;
		
		printf("\rVal1: %d\n" , value1);
     338:	fb e8       	ldi	r31, 0x8B	; 139
     33a:	8f 2e       	mov	r8, r31
     33c:	f2 e0       	ldi	r31, 0x02	; 2
     33e:	9f 2e       	mov	r9, r31
     340:	f0 2d       	mov	r31, r0
     342:	0f 2e       	mov	r0, r31
		printf("\rVal2: %d\n" , value2);
     344:	f6 e9       	ldi	r31, 0x96	; 150
     346:	af 2e       	mov	r10, r31
     348:	f2 e0       	ldi	r31, 0x02	; 2
     34a:	bf 2e       	mov	r11, r31
     34c:	f0 2d       	mov	r31, r0
     34e:	f8 01       	movw	r30, r16
	
	copy_seq(struct1, struct2);
	
	for (j=0; j<size1; j++)
	{
		value1 = *array_start1;
     350:	c1 90       	ld	r12, Z+
     352:	d1 90       	ld	r13, Z+
     354:	8f 01       	movw	r16, r30
		value2 = *array_start2;
     356:	f1 01       	movw	r30, r2
     358:	e1 90       	ld	r14, Z+
     35a:	f1 90       	ld	r15, Z+
		
		printf("\rVal1: %d\n" , value1);
     35c:	1f 01       	movw	r2, r30
     35e:	df 92       	push	r13
     360:	cf 92       	push	r12
     362:	9f 92       	push	r9
     364:	8f 92       	push	r8
     366:	bf d5       	rcall	.+2942   	; 0xee6 <printf>
		printf("\rVal2: %d\n" , value2);
     368:	ff 92       	push	r15
     36a:	ef 92       	push	r14
     36c:	bf 92       	push	r11
     36e:	af 92       	push	r10
     370:	ba d5       	rcall	.+2932   	; 0xee6 <printf>
		
		array_start1++;
		array_start2++;
		
		mu_assert("elements are not equal", value1 == value2);
     372:	8d b7       	in	r24, 0x3d	; 61
     374:	9e b7       	in	r25, 0x3e	; 62
     376:	08 96       	adiw	r24, 0x08	; 8
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	9e bf       	out	0x3e, r25	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	8d bf       	out	0x3d, r24	; 61
     382:	ce 14       	cp	r12, r14
     384:	df 04       	cpc	r13, r15
		
		reset_array_p(struct1);
     386:	51 f4       	brne	.+20     	; 0x39c <main+0x11a>
     388:	c3 01       	movw	r24, r6
     38a:	dd de       	rcall	.-582    	; 0x146 <reset_array_p>
		reset_array_p(struct2);
     38c:	c2 01       	movw	r24, r4
     38e:	db de       	rcall	.-586    	; 0x146 <reset_array_p>
     390:	c0 17       	cp	r28, r16
	
	reset_array_p(struct1);
	
	copy_seq(struct1, struct2);
	
	for (j=0; j<size1; j++)
     392:	d1 07       	cpc	r29, r17
     394:	e1 f6       	brne	.-72     	; 0x34e <main+0xcc>
     396:	80 e0       	ldi	r24, 0x00	; 0
		mu_assert("elements are not equal", value1 == value2);
		
		reset_array_p(struct1);
		reset_array_p(struct2);
	}
	return 0;
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	02 c0       	rjmp	.+4      	; 0x3a0 <main+0x11e>
     39c:	8c e1       	ldi	r24, 0x1C	; 28
		printf("\rVal2: %d\n" , value2);
		
		array_start1++;
		array_start2++;
		
		mu_assert("elements are not equal", value1 == value2);
     39e:	92 e0       	ldi	r25, 0x02	; 2
     3a0:	20 91 d0 02 	lds	r18, 0x02D0	; 0x8002d0 <__data_end>
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
	mu_run_test(test_copy_seq);
     3a4:	30 91 d1 02 	lds	r19, 0x02D1	; 0x8002d1 <__data_end+0x1>
     3a8:	2f 5f       	subi	r18, 0xFF	; 255
     3aa:	3f 4f       	sbci	r19, 0xFF	; 255
     3ac:	30 93 d1 02 	sts	0x02D1, r19	; 0x8002d1 <__data_end+0x1>
     3b0:	20 93 d0 02 	sts	0x02D0, r18	; 0x8002d0 <__data_end>
	DDRA = 0xff;
	PORTA = 0xff;
	PORTA = ~2;
	
	char *result = all_tests();
	if (result != 0) {
     3b4:	00 97       	sbiw	r24, 0x00	; 0
     3b6:	61 f0       	breq	.+24     	; 0x3d0 <main+0x14e>
		printf("error: %s\n\r", result);
     3b8:	9f 93       	push	r25
     3ba:	8f 93       	push	r24
     3bc:	81 ea       	ldi	r24, 0xA1	; 161
     3be:	92 e0       	ldi	r25, 0x02	; 2
     3c0:	9f 93       	push	r25
     3c2:	8f 93       	push	r24
     3c4:	90 d5       	rcall	.+2848   	; 0xee6 <printf>
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	07 c0       	rjmp	.+14     	; 0x3de <main+0x15c>
	}
	else {
		printf("ALL TESTS PASSED\n\r");
     3d0:	8d ea       	ldi	r24, 0xAD	; 173
     3d2:	92 e0       	ldi	r25, 0x02	; 2
     3d4:	9f 93       	push	r25
     3d6:	8f 93       	push	r24
     3d8:	86 d5       	rcall	.+2828   	; 0xee6 <printf>
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0
	}

	printf("Tests run: %d\n", tests_run);
     3de:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <__data_end+0x1>
     3e2:	8f 93       	push	r24
     3e4:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
     3e8:	8f 93       	push	r24
     3ea:	80 ec       	ldi	r24, 0xC0	; 192
     3ec:	92 e0       	ldi	r25, 0x02	; 2
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	79 d5       	rcall	.+2802   	; 0xee6 <printf>
     3f4:	0f 90       	pop	r0
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	ff cf       	rjmp	.-2      	; 0x3fc <main+0x17a>
     3fe:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
	return 0;
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
     402:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     406:	01 96       	adiw	r24, 0x01	; 1
     408:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     40c:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
     410:	84 e5       	ldi	r24, 0x54	; 84
     412:	92 e0       	ldi	r25, 0x02	; 2
     414:	d1 cf       	rjmp	.-94     	; 0x3b8 <main+0x136>
     416:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
     41a:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     41e:	01 96       	adiw	r24, 0x01	; 1
     420:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
}

static char * test_seq_add_zero () 
{
	int size = 5, value, *array_start;
	seq_t item = seq_create(size);
     424:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
     428:	85 e0       	ldi	r24, 0x05	; 5
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	92 de       	rcall	.-732    	; 0x152 <seq_create>
	seq_add_to(item, 0);
     42e:	ec 01       	movw	r28, r24
     430:	60 e0       	ldi	r22, 0x00	; 0
     432:	70 e0       	ldi	r23, 0x00	; 0
     434:	04 df       	rcall	.-504    	; 0x23e <seq_add_to>
	
	array_start = get_beginning(item);
     436:	ce 01       	movw	r24, r28
     438:	7a de       	rcall	.-780    	; 0x12e <get_beginning>
     43a:	fc 01       	movw	r30, r24
	value = *array_start;
	mu_assert("element != 0", value == 0);
     43c:	80 81       	ld	r24, Z
     43e:	91 81       	ldd	r25, Z+1	; 0x01
     440:	89 2b       	or	r24, r25
     442:	61 f0       	breq	.+24     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     444:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
     448:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     452:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
	seq_t item = seq_create(size);
	seq_add_to(item, 0);
	
	array_start = get_beginning(item);
	value = *array_start;
	mu_assert("element != 0", value == 0);
     456:	84 e5       	ldi	r24, 0x54	; 84
     458:	92 e0       	ldi	r25, 0x02	; 2
}

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
     45a:	ae cf       	rjmp	.-164    	; 0x3b8 <main+0x136>
     45c:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
     460:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     46a:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
}

static char * test_seq_add_one ()
{
	int size = 5,  value, *array_start;
	seq_t item = seq_create(size);
     46e:	85 e0       	ldi	r24, 0x05	; 5
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	6f de       	rcall	.-802    	; 0x152 <seq_create>
     474:	ec 01       	movw	r28, r24
	seq_add_to(item, 1);
     476:	61 e0       	ldi	r22, 0x01	; 1
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	e1 de       	rcall	.-574    	; 0x23e <seq_add_to>
     47c:	ce 01       	movw	r24, r28
		
	array_start = get_beginning(item);
     47e:	57 de       	rcall	.-850    	; 0x12e <get_beginning>
     480:	fc 01       	movw	r30, r24
     482:	80 81       	ld	r24, Z
	value = *array_start;
	mu_assert("element != 1", value == 1);
     484:	91 81       	ldd	r25, Z+1	; 0x01
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	61 f0       	breq	.+24     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     48a:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
     48e:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     492:	01 96       	adiw	r24, 0x01	; 1
     494:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     498:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
	seq_t item = seq_create(size);
	seq_add_to(item, 1);
		
	array_start = get_beginning(item);
	value = *array_start;
	mu_assert("element != 1", value == 1);
     49c:	87 e4       	ldi	r24, 0x47	; 71

static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
     49e:	92 e0       	ldi	r25, 0x02	; 2
     4a0:	8b cf       	rjmp	.-234    	; 0x3b8 <main+0x136>
     4a2:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
     4a6:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
}

static char * test_seq_add_multiple ()
{
	int size = 5, i, value, *array_start, control;
	seq_t item = seq_create(size);
     4b0:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
     4b4:	85 e0       	ldi	r24, 0x05	; 5
     4b6:	90 e0       	ldi	r25, 0x00	; 0
	seq_add_to(item, 1);
     4b8:	4c de       	rcall	.-872    	; 0x152 <seq_create>
     4ba:	ec 01       	movw	r28, r24
     4bc:	61 e0       	ldi	r22, 0x01	; 1
     4be:	70 e0       	ldi	r23, 0x00	; 0
	seq_add_to(item, 2);
     4c0:	be de       	rcall	.-644    	; 0x23e <seq_add_to>
     4c2:	62 e0       	ldi	r22, 0x02	; 2
     4c4:	70 e0       	ldi	r23, 0x00	; 0
     4c6:	ce 01       	movw	r24, r28
     4c8:	ba de       	rcall	.-652    	; 0x23e <seq_add_to>
	seq_add_to(item, 3);
     4ca:	63 e0       	ldi	r22, 0x03	; 3
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	ce 01       	movw	r24, r28
     4d0:	b6 de       	rcall	.-660    	; 0x23e <seq_add_to>
     4d2:	ce 01       	movw	r24, r28
		
	array_start = get_beginning(item);
     4d4:	2c de       	rcall	.-936    	; 0x12e <get_beginning>
     4d6:	fc 01       	movw	r30, r24
     4d8:	80 81       	ld	r24, Z
     4da:	91 81       	ldd	r25, Z+1	; 0x01
	control = 1;
		
	for(i = 0; i < 3; i++)
	{
		value = *array_start;
		mu_assert("element != expected", value == control);
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	61 f0       	breq	.+24     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4e0:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <__data_end>
static char * all_tests()
{
	mu_run_test(test_seq_create);
	mu_run_test(test_seq_add_zero);
	mu_run_test(test_seq_add_one);
	mu_run_test(test_seq_add_multiple);
     4e4:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <__data_end+0x1>
     4e8:	01 96       	adiw	r24, 0x01	; 1
     4ea:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <__data_end+0x1>
     4ee:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <__data_end>
     4f2:	83 e3       	ldi	r24, 0x33	; 51
     4f4:	92 e0       	ldi	r25, 0x02	; 2
     4f6:	60 cf       	rjmp	.-320    	; 0x3b8 <main+0x136>
     4f8:	82 81       	ldd	r24, Z+2	; 0x02
     4fa:	93 81       	ldd	r25, Z+3	; 0x03
	control = 1;
		
	for(i = 0; i < 3; i++)
	{
		value = *array_start;
		mu_assert("element != expected", value == control);
     4fc:	02 97       	sbiw	r24, 0x02	; 2
     4fe:	81 f7       	brne	.-32     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     500:	84 81       	ldd	r24, Z+4	; 0x04
     502:	95 81       	ldd	r25, Z+5	; 0x05
     504:	03 97       	sbiw	r24, 0x03	; 3
     506:	09 f4       	brne	.+2      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
     508:	e3 ce       	rjmp	.-570    	; 0x2d0 <main+0x4e>
     50a:	ea cf       	rjmp	.-44     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     50c:	fc 01       	movw	r30, r24
     50e:	32 96       	adiw	r30, 0x02	; 2
     510:	44 96       	adiw	r24, 0x14	; 20
     512:	d5 ce       	rjmp	.-598    	; 0x2be <main+0x3c>

00000514 <usart_getchar>:
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	1f 92       	push	r1
     51a:	cd b7       	in	r28, 0x3d	; 61
     51c:	de b7       	in	r29, 0x3e	; 62
     51e:	be 01       	movw	r22, r28
     520:	6f 5f       	subi	r22, 0xFF	; 255
     522:	7f 4f       	sbci	r23, 0xFF	; 255
     524:	85 e5       	ldi	r24, 0x55	; 85
     526:	93 e0       	ldi	r25, 0x03	; 3
     528:	66 d0       	rcall	.+204    	; 0x5f6 <buffer_get_item>
     52a:	81 11       	cpse	r24, r1
     52c:	f8 cf       	rjmp	.-16     	; 0x51e <usart_getchar+0xa>
     52e:	89 81       	ldd	r24, Y+1	; 0x01
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	0f 90       	pop	r0
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <usart_putchar>:
     53a:	68 2f       	mov	r22, r24
     53c:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <_com_serial_instance>
     540:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <_com_serial_instance+0x1>
     544:	24 d1       	rcall	.+584    	; 0x78e <serial_send_byte>
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	08 95       	ret

0000054c <init_stdio>:
     54c:	4f 92       	push	r4
     54e:	5f 92       	push	r5
     550:	6f 92       	push	r6
     552:	7f 92       	push	r7
     554:	8f 92       	push	r8
     556:	9f 92       	push	r9
     558:	af 92       	push	r10
     55a:	cf 92       	push	r12
     55c:	ef 92       	push	r14
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	c8 2f       	mov	r28, r24
     566:	2a 01       	movw	r4, r20
     568:	3b 01       	movw	r6, r22
     56a:	85 e5       	ldi	r24, 0x55	; 85
     56c:	93 e0       	ldi	r25, 0x03	; 3
     56e:	3a d0       	rcall	.+116    	; 0x5e4 <buffer_init>
     570:	82 ed       	ldi	r24, 0xD2	; 210
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	37 d0       	rcall	.+110    	; 0x5e4 <buffer_init>
     576:	1f 92       	push	r1
     578:	1f 92       	push	r1
     57a:	82 ed       	ldi	r24, 0xD2	; 210
     57c:	92 e0       	ldi	r25, 0x02	; 2
     57e:	9f 93       	push	r25
     580:	8f 93       	push	r24
     582:	0f 2e       	mov	r0, r31
     584:	f5 e5       	ldi	r31, 0x55	; 85
     586:	8f 2e       	mov	r8, r31
     588:	f3 e0       	ldi	r31, 0x03	; 3
     58a:	9f 2e       	mov	r9, r31
     58c:	f0 2d       	mov	r31, r0
     58e:	a1 2c       	mov	r10, r1
     590:	c1 2c       	mov	r12, r1
     592:	0f 2e       	mov	r0, r31
     594:	f3 e0       	ldi	r31, 0x03	; 3
     596:	ef 2e       	mov	r14, r31
     598:	f0 2d       	mov	r31, r0
     59a:	00 e0       	ldi	r16, 0x00	; 0
     59c:	11 ee       	ldi	r17, 0xE1	; 225
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	b3 01       	movw	r22, r6
     5a4:	a2 01       	movw	r20, r4
     5a6:	8c 2f       	mov	r24, r28
     5a8:	70 d0       	rcall	.+224    	; 0x68a <serial_new_instance>
     5aa:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <_com_serial_instance+0x1>
     5ae:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <_com_serial_instance>
     5b2:	e6 ee       	ldi	r30, 0xE6	; 230
     5b4:	f3 e0       	ldi	r31, 0x03	; 3
     5b6:	86 e0       	ldi	r24, 0x06	; 6
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	91 83       	std	Z+1, r25	; 0x01
     5bc:	80 83       	st	Z, r24
     5be:	93 83       	std	Z+3, r25	; 0x03
     5c0:	82 83       	std	Z+2, r24	; 0x02
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	cf 91       	pop	r28
     5cc:	1f 91       	pop	r17
     5ce:	0f 91       	pop	r16
     5d0:	ef 90       	pop	r14
     5d2:	cf 90       	pop	r12
     5d4:	af 90       	pop	r10
     5d6:	9f 90       	pop	r9
     5d8:	8f 90       	pop	r8
     5da:	7f 90       	pop	r7
     5dc:	6f 90       	pop	r6
     5de:	5f 90       	pop	r5
     5e0:	4f 90       	pop	r4
     5e2:	08 95       	ret

000005e4 <buffer_init>:
     5e4:	fc 01       	movw	r30, r24
     5e6:	e0 58       	subi	r30, 0x80	; 128
     5e8:	ff 4f       	sbci	r31, 0xFF	; 255
     5ea:	10 82       	st	Z, r1
     5ec:	31 96       	adiw	r30, 0x01	; 1
     5ee:	10 82       	st	Z, r1
     5f0:	31 96       	adiw	r30, 0x01	; 1
     5f2:	10 82       	st	Z, r1
     5f4:	08 95       	ret

000005f6 <buffer_get_item>:
     5f6:	fc 01       	movw	r30, r24
     5f8:	ee 57       	subi	r30, 0x7E	; 126
     5fa:	ff 4f       	sbci	r31, 0xFF	; 255
     5fc:	20 81       	ld	r18, Z
     5fe:	22 23       	and	r18, r18
     600:	f9 f0       	breq	.+62     	; 0x640 <buffer_get_item+0x4a>
     602:	31 97       	sbiw	r30, 0x01	; 1
     604:	20 81       	ld	r18, Z
     606:	dc 01       	movw	r26, r24
     608:	a2 0f       	add	r26, r18
     60a:	b1 1d       	adc	r27, r1
     60c:	2c 91       	ld	r18, X
     60e:	db 01       	movw	r26, r22
     610:	2c 93       	st	X, r18
     612:	20 81       	ld	r18, Z
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	2f 5f       	subi	r18, 0xFF	; 255
     618:	3f 4f       	sbci	r19, 0xFF	; 255
     61a:	2f 77       	andi	r18, 0x7F	; 127
     61c:	30 78       	andi	r19, 0x80	; 128
     61e:	33 23       	and	r19, r19
     620:	34 f4       	brge	.+12     	; 0x62e <buffer_get_item+0x38>
     622:	21 50       	subi	r18, 0x01	; 1
     624:	31 09       	sbc	r19, r1
     626:	20 68       	ori	r18, 0x80	; 128
     628:	3f 6f       	ori	r19, 0xFF	; 255
     62a:	2f 5f       	subi	r18, 0xFF	; 255
     62c:	3f 4f       	sbci	r19, 0xFF	; 255
     62e:	20 83       	st	Z, r18
     630:	fc 01       	movw	r30, r24
     632:	ee 57       	subi	r30, 0x7E	; 126
     634:	ff 4f       	sbci	r31, 0xFF	; 255
     636:	80 81       	ld	r24, Z
     638:	81 50       	subi	r24, 0x01	; 1
     63a:	80 83       	st	Z, r24
     63c:	80 e0       	ldi	r24, 0x00	; 0
     63e:	08 95       	ret
     640:	81 e0       	ldi	r24, 0x01	; 1
     642:	08 95       	ret

00000644 <buffer_put_item>:
     644:	fc 01       	movw	r30, r24
     646:	ee 57       	subi	r30, 0x7E	; 126
     648:	ff 4f       	sbci	r31, 0xFF	; 255
     64a:	40 81       	ld	r20, Z
     64c:	44 23       	and	r20, r20
     64e:	dc f0       	brlt	.+54     	; 0x686 <buffer_put_item+0x42>
     650:	32 97       	sbiw	r30, 0x02	; 2
     652:	20 81       	ld	r18, Z
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	dc 01       	movw	r26, r24
     658:	a2 0f       	add	r26, r18
     65a:	b3 1f       	adc	r27, r19
     65c:	6c 93       	st	X, r22
     65e:	2f 5f       	subi	r18, 0xFF	; 255
     660:	3f 4f       	sbci	r19, 0xFF	; 255
     662:	2f 77       	andi	r18, 0x7F	; 127
     664:	30 78       	andi	r19, 0x80	; 128
     666:	33 23       	and	r19, r19
     668:	34 f4       	brge	.+12     	; 0x676 <buffer_put_item+0x32>
     66a:	21 50       	subi	r18, 0x01	; 1
     66c:	31 09       	sbc	r19, r1
     66e:	20 68       	ori	r18, 0x80	; 128
     670:	3f 6f       	ori	r19, 0xFF	; 255
     672:	2f 5f       	subi	r18, 0xFF	; 255
     674:	3f 4f       	sbci	r19, 0xFF	; 255
     676:	20 83       	st	Z, r18
     678:	fc 01       	movw	r30, r24
     67a:	ee 57       	subi	r30, 0x7E	; 126
     67c:	ff 4f       	sbci	r31, 0xFF	; 255
     67e:	4f 5f       	subi	r20, 0xFF	; 255
     680:	40 83       	st	Z, r20
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	08 95       	ret
     686:	82 e0       	ldi	r24, 0x02	; 2
     688:	08 95       	ret

0000068a <serial_new_instance>:
     68a:	4f 92       	push	r4
     68c:	5f 92       	push	r5
     68e:	6f 92       	push	r6
     690:	7f 92       	push	r7
     692:	8f 92       	push	r8
     694:	9f 92       	push	r9
     696:	df 92       	push	r13
     698:	ef 92       	push	r14
     69a:	ff 92       	push	r15
     69c:	0f 93       	push	r16
     69e:	1f 93       	push	r17
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	00 d0       	rcall	.+0      	; 0x6a6 <serial_new_instance+0x1c>
     6a6:	1f 92       	push	r1
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	d8 2e       	mov	r13, r24
     6ae:	49 83       	std	Y+1, r20	; 0x01
     6b0:	5a 83       	std	Y+2, r21	; 0x02
     6b2:	6b 83       	std	Y+3, r22	; 0x03
     6b4:	7c 83       	std	Y+4, r23	; 0x04
     6b6:	28 01       	movw	r4, r16
     6b8:	39 01       	movw	r6, r18
     6ba:	88 e0       	ldi	r24, 0x08	; 8
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	eb d2       	rcall	.+1494   	; 0xc96 <malloc>
     6c0:	7c 01       	movw	r14, r24
     6c2:	8d 2d       	mov	r24, r13
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	88 0f       	add	r24, r24
     6c8:	99 1f       	adc	r25, r25
     6ca:	fc 01       	movw	r30, r24
     6cc:	e6 52       	subi	r30, 0x26	; 38
     6ce:	fc 4f       	sbci	r31, 0xFC	; 252
     6d0:	f1 82       	std	Z+1, r15	; 0x01
     6d2:	e0 82       	st	Z, r14
     6d4:	fc 01       	movw	r30, r24
     6d6:	ec 5e       	subi	r30, 0xEC	; 236
     6d8:	fd 4f       	sbci	r31, 0xFD	; 253
     6da:	80 81       	ld	r24, Z
     6dc:	91 81       	ldd	r25, Z+1	; 0x01
     6de:	d7 01       	movw	r26, r14
     6e0:	11 96       	adiw	r26, 0x01	; 1
     6e2:	9c 93       	st	X, r25
     6e4:	8e 93       	st	-X, r24
     6e6:	8d 89       	ldd	r24, Y+21	; 0x15
     6e8:	9e 89       	ldd	r25, Y+22	; 0x16
     6ea:	13 96       	adiw	r26, 0x03	; 3
     6ec:	9c 93       	st	X, r25
     6ee:	8e 93       	st	-X, r24
     6f0:	12 97       	sbiw	r26, 0x02	; 2
     6f2:	15 96       	adiw	r26, 0x05	; 5
     6f4:	9c 92       	st	X, r9
     6f6:	8e 92       	st	-X, r8
     6f8:	14 97       	sbiw	r26, 0x04	; 4
     6fa:	8f 89       	ldd	r24, Y+23	; 0x17
     6fc:	98 8d       	ldd	r25, Y+24	; 0x18
     6fe:	17 96       	adiw	r26, 0x07	; 7
     700:	9c 93       	st	X, r25
     702:	8e 93       	st	-X, r24
     704:	16 97       	sbiw	r26, 0x06	; 6
     706:	df b6       	in	r13, 0x3f	; 63
     708:	f8 94       	cli
     70a:	ed 91       	ld	r30, X+
     70c:	fc 91       	ld	r31, X
     70e:	11 97       	sbiw	r26, 0x01	; 1
     710:	36 97       	sbiw	r30, 0x06	; 6
     712:	80 81       	ld	r24, Z
     714:	82 60       	ori	r24, 0x02	; 2
     716:	80 83       	st	Z, r24
     718:	8d 90       	ld	r8, X+
     71a:	9c 90       	ld	r9, X
     71c:	d3 01       	movw	r26, r6
     71e:	c2 01       	movw	r24, r4
     720:	88 0f       	add	r24, r24
     722:	99 1f       	adc	r25, r25
     724:	aa 1f       	adc	r26, r26
     726:	bb 1f       	adc	r27, r27
     728:	88 0f       	add	r24, r24
     72a:	99 1f       	adc	r25, r25
     72c:	aa 1f       	adc	r26, r26
     72e:	bb 1f       	adc	r27, r27
     730:	9c 01       	movw	r18, r24
     732:	ad 01       	movw	r20, r26
     734:	22 0f       	add	r18, r18
     736:	33 1f       	adc	r19, r19
     738:	44 1f       	adc	r20, r20
     73a:	55 1f       	adc	r21, r21
     73c:	69 81       	ldd	r22, Y+1	; 0x01
     73e:	7a 81       	ldd	r23, Y+2	; 0x02
     740:	8b 81       	ldd	r24, Y+3	; 0x03
     742:	9c 81       	ldd	r25, Y+4	; 0x04
     744:	6c d2       	rcall	.+1240   	; 0xc1e <__udivmodsi4>
     746:	21 50       	subi	r18, 0x01	; 1
     748:	f4 01       	movw	r30, r8
     74a:	32 97       	sbiw	r30, 0x02	; 2
     74c:	20 83       	st	Z, r18
     74e:	d7 01       	movw	r26, r14
     750:	ed 91       	ld	r30, X+
     752:	fc 91       	ld	r31, X
     754:	11 97       	sbiw	r26, 0x01	; 1
     756:	35 97       	sbiw	r30, 0x05	; 5
     758:	88 e9       	ldi	r24, 0x98	; 152
     75a:	80 83       	st	Z, r24
     75c:	ed 91       	ld	r30, X+
     75e:	fc 91       	ld	r31, X
     760:	34 97       	sbiw	r30, 0x04	; 4
     762:	86 e0       	ldi	r24, 0x06	; 6
     764:	80 83       	st	Z, r24
     766:	df be       	out	0x3f, r13	; 63
     768:	c7 01       	movw	r24, r14
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
     76e:	0f 90       	pop	r0
     770:	0f 90       	pop	r0
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	0f 91       	pop	r16
     77a:	ff 90       	pop	r15
     77c:	ef 90       	pop	r14
     77e:	df 90       	pop	r13
     780:	9f 90       	pop	r9
     782:	8f 90       	pop	r8
     784:	7f 90       	pop	r7
     786:	6f 90       	pop	r6
     788:	5f 90       	pop	r5
     78a:	4f 90       	pop	r4
     78c:	08 95       	ret

0000078e <serial_send_byte>:
     78e:	cf 93       	push	r28
     790:	df 93       	push	r29
     792:	fc 01       	movw	r30, r24
     794:	82 81       	ldd	r24, Z+2	; 0x02
     796:	93 81       	ldd	r25, Z+3	; 0x03
     798:	00 97       	sbiw	r24, 0x00	; 0
     79a:	59 f0       	breq	.+22     	; 0x7b2 <serial_send_byte+0x24>
     79c:	ef 01       	movw	r28, r30
     79e:	52 df       	rcall	.-348    	; 0x644 <buffer_put_item>
     7a0:	81 11       	cpse	r24, r1
     7a2:	09 c0       	rjmp	.+18     	; 0x7b6 <serial_send_byte+0x28>
     7a4:	e8 81       	ld	r30, Y
     7a6:	f9 81       	ldd	r31, Y+1	; 0x01
     7a8:	35 97       	sbiw	r30, 0x05	; 5
     7aa:	90 81       	ld	r25, Z
     7ac:	90 62       	ori	r25, 0x20	; 32
     7ae:	90 83       	st	Z, r25
     7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <serial_send_byte+0x2a>
     7b2:	82 e0       	ldi	r24, 0x02	; 2
     7b4:	01 c0       	rjmp	.+2      	; 0x7b8 <serial_send_byte+0x2a>
     7b6:	82 e0       	ldi	r24, 0x02	; 2
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	08 95       	ret

000007be <__vector_25>:
     7be:	1f 92       	push	r1
     7c0:	0f 92       	push	r0
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	0f 92       	push	r0
     7c6:	11 24       	eor	r1, r1
     7c8:	0b b6       	in	r0, 0x3b	; 59
     7ca:	0f 92       	push	r0
     7cc:	2f 93       	push	r18
     7ce:	3f 93       	push	r19
     7d0:	4f 93       	push	r20
     7d2:	5f 93       	push	r21
     7d4:	6f 93       	push	r22
     7d6:	7f 93       	push	r23
     7d8:	8f 93       	push	r24
     7da:	9f 93       	push	r25
     7dc:	af 93       	push	r26
     7de:	bf 93       	push	r27
     7e0:	cf 93       	push	r28
     7e2:	ef 93       	push	r30
     7e4:	ff 93       	push	r31
     7e6:	e0 91 da 03 	lds	r30, 0x03DA	; 0x8003da <_ser_handle>
     7ea:	f0 91 db 03 	lds	r31, 0x03DB	; 0x8003db <_ser_handle+0x1>
     7ee:	30 97       	sbiw	r30, 0x00	; 0
     7f0:	99 f0       	breq	.+38     	; 0x818 <__vector_25+0x5a>
     7f2:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     7f6:	6c 2f       	mov	r22, r28
     7f8:	84 81       	ldd	r24, Z+4	; 0x04
     7fa:	95 81       	ldd	r25, Z+5	; 0x05
     7fc:	23 df       	rcall	.-442    	; 0x644 <buffer_put_item>
     7fe:	80 91 da 03 	lds	r24, 0x03DA	; 0x8003da <_ser_handle>
     802:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <_ser_handle+0x1>
     806:	dc 01       	movw	r26, r24
     808:	16 96       	adiw	r26, 0x06	; 6
     80a:	ed 91       	ld	r30, X+
     80c:	fc 91       	ld	r31, X
     80e:	17 97       	sbiw	r26, 0x07	; 7
     810:	30 97       	sbiw	r30, 0x00	; 0
     812:	11 f0       	breq	.+4      	; 0x818 <__vector_25+0x5a>
     814:	6c 2f       	mov	r22, r28
     816:	19 95       	eicall
     818:	ff 91       	pop	r31
     81a:	ef 91       	pop	r30
     81c:	cf 91       	pop	r28
     81e:	bf 91       	pop	r27
     820:	af 91       	pop	r26
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	7f 91       	pop	r23
     828:	6f 91       	pop	r22
     82a:	5f 91       	pop	r21
     82c:	4f 91       	pop	r20
     82e:	3f 91       	pop	r19
     830:	2f 91       	pop	r18
     832:	0f 90       	pop	r0
     834:	0b be       	out	0x3b, r0	; 59
     836:	0f 90       	pop	r0
     838:	0f be       	out	0x3f, r0	; 63
     83a:	0f 90       	pop	r0
     83c:	1f 90       	pop	r1
     83e:	18 95       	reti

00000840 <__vector_26>:
     840:	1f 92       	push	r1
     842:	0f 92       	push	r0
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	0f 92       	push	r0
     848:	11 24       	eor	r1, r1
     84a:	0b b6       	in	r0, 0x3b	; 59
     84c:	0f 92       	push	r0
     84e:	2f 93       	push	r18
     850:	3f 93       	push	r19
     852:	4f 93       	push	r20
     854:	5f 93       	push	r21
     856:	6f 93       	push	r22
     858:	7f 93       	push	r23
     85a:	8f 93       	push	r24
     85c:	9f 93       	push	r25
     85e:	af 93       	push	r26
     860:	bf 93       	push	r27
     862:	ef 93       	push	r30
     864:	ff 93       	push	r31
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	1f 92       	push	r1
     86c:	cd b7       	in	r28, 0x3d	; 61
     86e:	de b7       	in	r29, 0x3e	; 62
     870:	e0 91 da 03 	lds	r30, 0x03DA	; 0x8003da <_ser_handle>
     874:	f0 91 db 03 	lds	r31, 0x03DB	; 0x8003db <_ser_handle+0x1>
     878:	30 97       	sbiw	r30, 0x00	; 0
     87a:	91 f0       	breq	.+36     	; 0x8a0 <__vector_26+0x60>
     87c:	be 01       	movw	r22, r28
     87e:	6f 5f       	subi	r22, 0xFF	; 255
     880:	7f 4f       	sbci	r23, 0xFF	; 255
     882:	82 81       	ldd	r24, Z+2	; 0x02
     884:	93 81       	ldd	r25, Z+3	; 0x03
     886:	b7 de       	rcall	.-658    	; 0x5f6 <buffer_get_item>
     888:	81 11       	cpse	r24, r1
     88a:	04 c0       	rjmp	.+8      	; 0x894 <__vector_26+0x54>
     88c:	89 81       	ldd	r24, Y+1	; 0x01
     88e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     892:	0b c0       	rjmp	.+22     	; 0x8aa <__vector_26+0x6a>
     894:	e1 ec       	ldi	r30, 0xC1	; 193
     896:	f0 e0       	ldi	r31, 0x00	; 0
     898:	80 81       	ld	r24, Z
     89a:	8f 7d       	andi	r24, 0xDF	; 223
     89c:	80 83       	st	Z, r24
     89e:	05 c0       	rjmp	.+10     	; 0x8aa <__vector_26+0x6a>
     8a0:	e1 ec       	ldi	r30, 0xC1	; 193
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	80 81       	ld	r24, Z
     8a6:	8f 7d       	andi	r24, 0xDF	; 223
     8a8:	80 83       	st	Z, r24
     8aa:	0f 90       	pop	r0
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	ff 91       	pop	r31
     8b2:	ef 91       	pop	r30
     8b4:	bf 91       	pop	r27
     8b6:	af 91       	pop	r26
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	7f 91       	pop	r23
     8be:	6f 91       	pop	r22
     8c0:	5f 91       	pop	r21
     8c2:	4f 91       	pop	r20
     8c4:	3f 91       	pop	r19
     8c6:	2f 91       	pop	r18
     8c8:	0f 90       	pop	r0
     8ca:	0b be       	out	0x3b, r0	; 59
     8cc:	0f 90       	pop	r0
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	0f 90       	pop	r0
     8d2:	1f 90       	pop	r1
     8d4:	18 95       	reti

000008d6 <__vector_36>:
     8d6:	1f 92       	push	r1
     8d8:	0f 92       	push	r0
     8da:	0f b6       	in	r0, 0x3f	; 63
     8dc:	0f 92       	push	r0
     8de:	11 24       	eor	r1, r1
     8e0:	0b b6       	in	r0, 0x3b	; 59
     8e2:	0f 92       	push	r0
     8e4:	2f 93       	push	r18
     8e6:	3f 93       	push	r19
     8e8:	4f 93       	push	r20
     8ea:	5f 93       	push	r21
     8ec:	6f 93       	push	r22
     8ee:	7f 93       	push	r23
     8f0:	8f 93       	push	r24
     8f2:	9f 93       	push	r25
     8f4:	af 93       	push	r26
     8f6:	bf 93       	push	r27
     8f8:	cf 93       	push	r28
     8fa:	ef 93       	push	r30
     8fc:	ff 93       	push	r31
     8fe:	e0 91 dc 03 	lds	r30, 0x03DC	; 0x8003dc <_ser_handle+0x2>
     902:	f0 91 dd 03 	lds	r31, 0x03DD	; 0x8003dd <_ser_handle+0x3>
     906:	30 97       	sbiw	r30, 0x00	; 0
     908:	99 f0       	breq	.+38     	; 0x930 <__vector_36+0x5a>
     90a:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     90e:	6c 2f       	mov	r22, r28
     910:	84 81       	ldd	r24, Z+4	; 0x04
     912:	95 81       	ldd	r25, Z+5	; 0x05
     914:	97 de       	rcall	.-722    	; 0x644 <buffer_put_item>
     916:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <_ser_handle+0x2>
     91a:	90 91 dd 03 	lds	r25, 0x03DD	; 0x8003dd <_ser_handle+0x3>
     91e:	dc 01       	movw	r26, r24
     920:	16 96       	adiw	r26, 0x06	; 6
     922:	ed 91       	ld	r30, X+
     924:	fc 91       	ld	r31, X
     926:	17 97       	sbiw	r26, 0x07	; 7
     928:	30 97       	sbiw	r30, 0x00	; 0
     92a:	11 f0       	breq	.+4      	; 0x930 <__vector_36+0x5a>
     92c:	6c 2f       	mov	r22, r28
     92e:	19 95       	eicall
     930:	ff 91       	pop	r31
     932:	ef 91       	pop	r30
     934:	cf 91       	pop	r28
     936:	bf 91       	pop	r27
     938:	af 91       	pop	r26
     93a:	9f 91       	pop	r25
     93c:	8f 91       	pop	r24
     93e:	7f 91       	pop	r23
     940:	6f 91       	pop	r22
     942:	5f 91       	pop	r21
     944:	4f 91       	pop	r20
     946:	3f 91       	pop	r19
     948:	2f 91       	pop	r18
     94a:	0f 90       	pop	r0
     94c:	0b be       	out	0x3b, r0	; 59
     94e:	0f 90       	pop	r0
     950:	0f be       	out	0x3f, r0	; 63
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <__vector_37>:
     958:	1f 92       	push	r1
     95a:	0f 92       	push	r0
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	0f 92       	push	r0
     960:	11 24       	eor	r1, r1
     962:	0b b6       	in	r0, 0x3b	; 59
     964:	0f 92       	push	r0
     966:	2f 93       	push	r18
     968:	3f 93       	push	r19
     96a:	4f 93       	push	r20
     96c:	5f 93       	push	r21
     96e:	6f 93       	push	r22
     970:	7f 93       	push	r23
     972:	8f 93       	push	r24
     974:	9f 93       	push	r25
     976:	af 93       	push	r26
     978:	bf 93       	push	r27
     97a:	ef 93       	push	r30
     97c:	ff 93       	push	r31
     97e:	cf 93       	push	r28
     980:	df 93       	push	r29
     982:	1f 92       	push	r1
     984:	cd b7       	in	r28, 0x3d	; 61
     986:	de b7       	in	r29, 0x3e	; 62
     988:	e0 91 dc 03 	lds	r30, 0x03DC	; 0x8003dc <_ser_handle+0x2>
     98c:	f0 91 dd 03 	lds	r31, 0x03DD	; 0x8003dd <_ser_handle+0x3>
     990:	30 97       	sbiw	r30, 0x00	; 0
     992:	91 f0       	breq	.+36     	; 0x9b8 <__vector_37+0x60>
     994:	be 01       	movw	r22, r28
     996:	6f 5f       	subi	r22, 0xFF	; 255
     998:	7f 4f       	sbci	r23, 0xFF	; 255
     99a:	82 81       	ldd	r24, Z+2	; 0x02
     99c:	93 81       	ldd	r25, Z+3	; 0x03
     99e:	2b de       	rcall	.-938    	; 0x5f6 <buffer_get_item>
     9a0:	81 11       	cpse	r24, r1
     9a2:	04 c0       	rjmp	.+8      	; 0x9ac <__vector_37+0x54>
     9a4:	89 81       	ldd	r24, Y+1	; 0x01
     9a6:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     9aa:	0b c0       	rjmp	.+22     	; 0x9c2 <__vector_37+0x6a>
     9ac:	e9 ec       	ldi	r30, 0xC9	; 201
     9ae:	f0 e0       	ldi	r31, 0x00	; 0
     9b0:	80 81       	ld	r24, Z
     9b2:	8f 7d       	andi	r24, 0xDF	; 223
     9b4:	80 83       	st	Z, r24
     9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <__vector_37+0x6a>
     9b8:	e9 ec       	ldi	r30, 0xC9	; 201
     9ba:	f0 e0       	ldi	r31, 0x00	; 0
     9bc:	80 81       	ld	r24, Z
     9be:	8f 7d       	andi	r24, 0xDF	; 223
     9c0:	80 83       	st	Z, r24
     9c2:	0f 90       	pop	r0
     9c4:	df 91       	pop	r29
     9c6:	cf 91       	pop	r28
     9c8:	ff 91       	pop	r31
     9ca:	ef 91       	pop	r30
     9cc:	bf 91       	pop	r27
     9ce:	af 91       	pop	r26
     9d0:	9f 91       	pop	r25
     9d2:	8f 91       	pop	r24
     9d4:	7f 91       	pop	r23
     9d6:	6f 91       	pop	r22
     9d8:	5f 91       	pop	r21
     9da:	4f 91       	pop	r20
     9dc:	3f 91       	pop	r19
     9de:	2f 91       	pop	r18
     9e0:	0f 90       	pop	r0
     9e2:	0b be       	out	0x3b, r0	; 59
     9e4:	0f 90       	pop	r0
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	0f 90       	pop	r0
     9ea:	1f 90       	pop	r1
     9ec:	18 95       	reti

000009ee <__vector_51>:
     9ee:	1f 92       	push	r1
     9f0:	0f 92       	push	r0
     9f2:	0f b6       	in	r0, 0x3f	; 63
     9f4:	0f 92       	push	r0
     9f6:	11 24       	eor	r1, r1
     9f8:	0b b6       	in	r0, 0x3b	; 59
     9fa:	0f 92       	push	r0
     9fc:	2f 93       	push	r18
     9fe:	3f 93       	push	r19
     a00:	4f 93       	push	r20
     a02:	5f 93       	push	r21
     a04:	6f 93       	push	r22
     a06:	7f 93       	push	r23
     a08:	8f 93       	push	r24
     a0a:	9f 93       	push	r25
     a0c:	af 93       	push	r26
     a0e:	bf 93       	push	r27
     a10:	cf 93       	push	r28
     a12:	ef 93       	push	r30
     a14:	ff 93       	push	r31
     a16:	e0 91 de 03 	lds	r30, 0x03DE	; 0x8003de <_ser_handle+0x4>
     a1a:	f0 91 df 03 	lds	r31, 0x03DF	; 0x8003df <_ser_handle+0x5>
     a1e:	30 97       	sbiw	r30, 0x00	; 0
     a20:	99 f0       	breq	.+38     	; 0xa48 <__vector_51+0x5a>
     a22:	c0 91 d6 00 	lds	r28, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     a26:	6c 2f       	mov	r22, r28
     a28:	84 81       	ldd	r24, Z+4	; 0x04
     a2a:	95 81       	ldd	r25, Z+5	; 0x05
     a2c:	0b de       	rcall	.-1002   	; 0x644 <buffer_put_item>
     a2e:	80 91 de 03 	lds	r24, 0x03DE	; 0x8003de <_ser_handle+0x4>
     a32:	90 91 df 03 	lds	r25, 0x03DF	; 0x8003df <_ser_handle+0x5>
     a36:	dc 01       	movw	r26, r24
     a38:	16 96       	adiw	r26, 0x06	; 6
     a3a:	ed 91       	ld	r30, X+
     a3c:	fc 91       	ld	r31, X
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	30 97       	sbiw	r30, 0x00	; 0
     a42:	11 f0       	breq	.+4      	; 0xa48 <__vector_51+0x5a>
     a44:	6c 2f       	mov	r22, r28
     a46:	19 95       	eicall
     a48:	ff 91       	pop	r31
     a4a:	ef 91       	pop	r30
     a4c:	cf 91       	pop	r28
     a4e:	bf 91       	pop	r27
     a50:	af 91       	pop	r26
     a52:	9f 91       	pop	r25
     a54:	8f 91       	pop	r24
     a56:	7f 91       	pop	r23
     a58:	6f 91       	pop	r22
     a5a:	5f 91       	pop	r21
     a5c:	4f 91       	pop	r20
     a5e:	3f 91       	pop	r19
     a60:	2f 91       	pop	r18
     a62:	0f 90       	pop	r0
     a64:	0b be       	out	0x3b, r0	; 59
     a66:	0f 90       	pop	r0
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	0f 90       	pop	r0
     a6c:	1f 90       	pop	r1
     a6e:	18 95       	reti

00000a70 <__vector_52>:
     a70:	1f 92       	push	r1
     a72:	0f 92       	push	r0
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	0f 92       	push	r0
     a78:	11 24       	eor	r1, r1
     a7a:	0b b6       	in	r0, 0x3b	; 59
     a7c:	0f 92       	push	r0
     a7e:	2f 93       	push	r18
     a80:	3f 93       	push	r19
     a82:	4f 93       	push	r20
     a84:	5f 93       	push	r21
     a86:	6f 93       	push	r22
     a88:	7f 93       	push	r23
     a8a:	8f 93       	push	r24
     a8c:	9f 93       	push	r25
     a8e:	af 93       	push	r26
     a90:	bf 93       	push	r27
     a92:	ef 93       	push	r30
     a94:	ff 93       	push	r31
     a96:	cf 93       	push	r28
     a98:	df 93       	push	r29
     a9a:	1f 92       	push	r1
     a9c:	cd b7       	in	r28, 0x3d	; 61
     a9e:	de b7       	in	r29, 0x3e	; 62
     aa0:	e0 91 de 03 	lds	r30, 0x03DE	; 0x8003de <_ser_handle+0x4>
     aa4:	f0 91 df 03 	lds	r31, 0x03DF	; 0x8003df <_ser_handle+0x5>
     aa8:	30 97       	sbiw	r30, 0x00	; 0
     aaa:	91 f0       	breq	.+36     	; 0xad0 <__vector_52+0x60>
     aac:	be 01       	movw	r22, r28
     aae:	6f 5f       	subi	r22, 0xFF	; 255
     ab0:	7f 4f       	sbci	r23, 0xFF	; 255
     ab2:	82 81       	ldd	r24, Z+2	; 0x02
     ab4:	93 81       	ldd	r25, Z+3	; 0x03
     ab6:	9f dd       	rcall	.-1218   	; 0x5f6 <buffer_get_item>
     ab8:	81 11       	cpse	r24, r1
     aba:	04 c0       	rjmp	.+8      	; 0xac4 <__vector_52+0x54>
     abc:	89 81       	ldd	r24, Y+1	; 0x01
     abe:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     ac2:	0b c0       	rjmp	.+22     	; 0xada <__vector_52+0x6a>
     ac4:	e1 ed       	ldi	r30, 0xD1	; 209
     ac6:	f0 e0       	ldi	r31, 0x00	; 0
     ac8:	80 81       	ld	r24, Z
     aca:	8f 7d       	andi	r24, 0xDF	; 223
     acc:	80 83       	st	Z, r24
     ace:	05 c0       	rjmp	.+10     	; 0xada <__vector_52+0x6a>
     ad0:	e1 ed       	ldi	r30, 0xD1	; 209
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	80 81       	ld	r24, Z
     ad6:	8f 7d       	andi	r24, 0xDF	; 223
     ad8:	80 83       	st	Z, r24
     ada:	0f 90       	pop	r0
     adc:	df 91       	pop	r29
     ade:	cf 91       	pop	r28
     ae0:	ff 91       	pop	r31
     ae2:	ef 91       	pop	r30
     ae4:	bf 91       	pop	r27
     ae6:	af 91       	pop	r26
     ae8:	9f 91       	pop	r25
     aea:	8f 91       	pop	r24
     aec:	7f 91       	pop	r23
     aee:	6f 91       	pop	r22
     af0:	5f 91       	pop	r21
     af2:	4f 91       	pop	r20
     af4:	3f 91       	pop	r19
     af6:	2f 91       	pop	r18
     af8:	0f 90       	pop	r0
     afa:	0b be       	out	0x3b, r0	; 59
     afc:	0f 90       	pop	r0
     afe:	0f be       	out	0x3f, r0	; 63
     b00:	0f 90       	pop	r0
     b02:	1f 90       	pop	r1
     b04:	18 95       	reti

00000b06 <__vector_54>:
     b06:	1f 92       	push	r1
     b08:	0f 92       	push	r0
     b0a:	0f b6       	in	r0, 0x3f	; 63
     b0c:	0f 92       	push	r0
     b0e:	11 24       	eor	r1, r1
     b10:	0b b6       	in	r0, 0x3b	; 59
     b12:	0f 92       	push	r0
     b14:	2f 93       	push	r18
     b16:	3f 93       	push	r19
     b18:	4f 93       	push	r20
     b1a:	5f 93       	push	r21
     b1c:	6f 93       	push	r22
     b1e:	7f 93       	push	r23
     b20:	8f 93       	push	r24
     b22:	9f 93       	push	r25
     b24:	af 93       	push	r26
     b26:	bf 93       	push	r27
     b28:	cf 93       	push	r28
     b2a:	ef 93       	push	r30
     b2c:	ff 93       	push	r31
     b2e:	e0 91 e0 03 	lds	r30, 0x03E0	; 0x8003e0 <_ser_handle+0x6>
     b32:	f0 91 e1 03 	lds	r31, 0x03E1	; 0x8003e1 <_ser_handle+0x7>
     b36:	30 97       	sbiw	r30, 0x00	; 0
     b38:	99 f0       	breq	.+38     	; 0xb60 <__vector_54+0x5a>
     b3a:	c0 91 36 01 	lds	r28, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     b3e:	6c 2f       	mov	r22, r28
     b40:	84 81       	ldd	r24, Z+4	; 0x04
     b42:	95 81       	ldd	r25, Z+5	; 0x05
     b44:	7f dd       	rcall	.-1282   	; 0x644 <buffer_put_item>
     b46:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <_ser_handle+0x6>
     b4a:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <_ser_handle+0x7>
     b4e:	dc 01       	movw	r26, r24
     b50:	16 96       	adiw	r26, 0x06	; 6
     b52:	ed 91       	ld	r30, X+
     b54:	fc 91       	ld	r31, X
     b56:	17 97       	sbiw	r26, 0x07	; 7
     b58:	30 97       	sbiw	r30, 0x00	; 0
     b5a:	11 f0       	breq	.+4      	; 0xb60 <__vector_54+0x5a>
     b5c:	6c 2f       	mov	r22, r28
     b5e:	19 95       	eicall
     b60:	ff 91       	pop	r31
     b62:	ef 91       	pop	r30
     b64:	cf 91       	pop	r28
     b66:	bf 91       	pop	r27
     b68:	af 91       	pop	r26
     b6a:	9f 91       	pop	r25
     b6c:	8f 91       	pop	r24
     b6e:	7f 91       	pop	r23
     b70:	6f 91       	pop	r22
     b72:	5f 91       	pop	r21
     b74:	4f 91       	pop	r20
     b76:	3f 91       	pop	r19
     b78:	2f 91       	pop	r18
     b7a:	0f 90       	pop	r0
     b7c:	0b be       	out	0x3b, r0	; 59
     b7e:	0f 90       	pop	r0
     b80:	0f be       	out	0x3f, r0	; 63
     b82:	0f 90       	pop	r0
     b84:	1f 90       	pop	r1
     b86:	18 95       	reti

00000b88 <__vector_55>:
     b88:	1f 92       	push	r1
     b8a:	0f 92       	push	r0
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	0f 92       	push	r0
     b90:	11 24       	eor	r1, r1
     b92:	0b b6       	in	r0, 0x3b	; 59
     b94:	0f 92       	push	r0
     b96:	2f 93       	push	r18
     b98:	3f 93       	push	r19
     b9a:	4f 93       	push	r20
     b9c:	5f 93       	push	r21
     b9e:	6f 93       	push	r22
     ba0:	7f 93       	push	r23
     ba2:	8f 93       	push	r24
     ba4:	9f 93       	push	r25
     ba6:	af 93       	push	r26
     ba8:	bf 93       	push	r27
     baa:	ef 93       	push	r30
     bac:	ff 93       	push	r31
     bae:	cf 93       	push	r28
     bb0:	df 93       	push	r29
     bb2:	1f 92       	push	r1
     bb4:	cd b7       	in	r28, 0x3d	; 61
     bb6:	de b7       	in	r29, 0x3e	; 62
     bb8:	e0 91 e0 03 	lds	r30, 0x03E0	; 0x8003e0 <_ser_handle+0x6>
     bbc:	f0 91 e1 03 	lds	r31, 0x03E1	; 0x8003e1 <_ser_handle+0x7>
     bc0:	30 97       	sbiw	r30, 0x00	; 0
     bc2:	91 f0       	breq	.+36     	; 0xbe8 <__vector_55+0x60>
     bc4:	be 01       	movw	r22, r28
     bc6:	6f 5f       	subi	r22, 0xFF	; 255
     bc8:	7f 4f       	sbci	r23, 0xFF	; 255
     bca:	82 81       	ldd	r24, Z+2	; 0x02
     bcc:	93 81       	ldd	r25, Z+3	; 0x03
     bce:	13 dd       	rcall	.-1498   	; 0x5f6 <buffer_get_item>
     bd0:	81 11       	cpse	r24, r1
     bd2:	04 c0       	rjmp	.+8      	; 0xbdc <__vector_55+0x54>
     bd4:	89 81       	ldd	r24, Y+1	; 0x01
     bd6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     bda:	0b c0       	rjmp	.+22     	; 0xbf2 <__vector_55+0x6a>
     bdc:	e1 e3       	ldi	r30, 0x31	; 49
     bde:	f1 e0       	ldi	r31, 0x01	; 1
     be0:	80 81       	ld	r24, Z
     be2:	8f 7d       	andi	r24, 0xDF	; 223
     be4:	80 83       	st	Z, r24
     be6:	05 c0       	rjmp	.+10     	; 0xbf2 <__vector_55+0x6a>
     be8:	e1 e3       	ldi	r30, 0x31	; 49
     bea:	f1 e0       	ldi	r31, 0x01	; 1
     bec:	80 81       	ld	r24, Z
     bee:	8f 7d       	andi	r24, 0xDF	; 223
     bf0:	80 83       	st	Z, r24
     bf2:	0f 90       	pop	r0
     bf4:	df 91       	pop	r29
     bf6:	cf 91       	pop	r28
     bf8:	ff 91       	pop	r31
     bfa:	ef 91       	pop	r30
     bfc:	bf 91       	pop	r27
     bfe:	af 91       	pop	r26
     c00:	9f 91       	pop	r25
     c02:	8f 91       	pop	r24
     c04:	7f 91       	pop	r23
     c06:	6f 91       	pop	r22
     c08:	5f 91       	pop	r21
     c0a:	4f 91       	pop	r20
     c0c:	3f 91       	pop	r19
     c0e:	2f 91       	pop	r18
     c10:	0f 90       	pop	r0
     c12:	0b be       	out	0x3b, r0	; 59
     c14:	0f 90       	pop	r0
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	0f 90       	pop	r0
     c1a:	1f 90       	pop	r1
     c1c:	18 95       	reti

00000c1e <__udivmodsi4>:
     c1e:	a1 e2       	ldi	r26, 0x21	; 33
     c20:	1a 2e       	mov	r1, r26
     c22:	aa 1b       	sub	r26, r26
     c24:	bb 1b       	sub	r27, r27
     c26:	fd 01       	movw	r30, r26
     c28:	0d c0       	rjmp	.+26     	; 0xc44 <__udivmodsi4_ep>

00000c2a <__udivmodsi4_loop>:
     c2a:	aa 1f       	adc	r26, r26
     c2c:	bb 1f       	adc	r27, r27
     c2e:	ee 1f       	adc	r30, r30
     c30:	ff 1f       	adc	r31, r31
     c32:	a2 17       	cp	r26, r18
     c34:	b3 07       	cpc	r27, r19
     c36:	e4 07       	cpc	r30, r20
     c38:	f5 07       	cpc	r31, r21
     c3a:	20 f0       	brcs	.+8      	; 0xc44 <__udivmodsi4_ep>
     c3c:	a2 1b       	sub	r26, r18
     c3e:	b3 0b       	sbc	r27, r19
     c40:	e4 0b       	sbc	r30, r20
     c42:	f5 0b       	sbc	r31, r21

00000c44 <__udivmodsi4_ep>:
     c44:	66 1f       	adc	r22, r22
     c46:	77 1f       	adc	r23, r23
     c48:	88 1f       	adc	r24, r24
     c4a:	99 1f       	adc	r25, r25
     c4c:	1a 94       	dec	r1
     c4e:	69 f7       	brne	.-38     	; 0xc2a <__udivmodsi4_loop>
     c50:	60 95       	com	r22
     c52:	70 95       	com	r23
     c54:	80 95       	com	r24
     c56:	90 95       	com	r25
     c58:	9b 01       	movw	r18, r22
     c5a:	ac 01       	movw	r20, r24
     c5c:	bd 01       	movw	r22, r26
     c5e:	cf 01       	movw	r24, r30
     c60:	08 95       	ret

00000c62 <calloc>:
     c62:	0f 93       	push	r16
     c64:	1f 93       	push	r17
     c66:	cf 93       	push	r28
     c68:	df 93       	push	r29
     c6a:	86 9f       	mul	r24, r22
     c6c:	80 01       	movw	r16, r0
     c6e:	87 9f       	mul	r24, r23
     c70:	10 0d       	add	r17, r0
     c72:	96 9f       	mul	r25, r22
     c74:	10 0d       	add	r17, r0
     c76:	11 24       	eor	r1, r1
     c78:	c8 01       	movw	r24, r16
     c7a:	0d d0       	rcall	.+26     	; 0xc96 <malloc>
     c7c:	ec 01       	movw	r28, r24
     c7e:	00 97       	sbiw	r24, 0x00	; 0
     c80:	21 f0       	breq	.+8      	; 0xc8a <calloc+0x28>
     c82:	a8 01       	movw	r20, r16
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	27 d1       	rcall	.+590    	; 0xed8 <memset>
     c8a:	ce 01       	movw	r24, r28
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	0f 91       	pop	r16
     c94:	08 95       	ret

00000c96 <malloc>:
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	82 30       	cpi	r24, 0x02	; 2
     ca0:	91 05       	cpc	r25, r1
     ca2:	10 f4       	brcc	.+4      	; 0xca8 <malloc+0x12>
     ca4:	82 e0       	ldi	r24, 0x02	; 2
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	e0 91 e4 03 	lds	r30, 0x03E4	; 0x8003e4 <__flp>
     cac:	f0 91 e5 03 	lds	r31, 0x03E5	; 0x8003e5 <__flp+0x1>
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	a0 e0       	ldi	r26, 0x00	; 0
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	30 97       	sbiw	r30, 0x00	; 0
     cba:	19 f1       	breq	.+70     	; 0xd02 <malloc+0x6c>
     cbc:	40 81       	ld	r20, Z
     cbe:	51 81       	ldd	r21, Z+1	; 0x01
     cc0:	02 81       	ldd	r16, Z+2	; 0x02
     cc2:	13 81       	ldd	r17, Z+3	; 0x03
     cc4:	48 17       	cp	r20, r24
     cc6:	59 07       	cpc	r21, r25
     cc8:	c8 f0       	brcs	.+50     	; 0xcfc <malloc+0x66>
     cca:	84 17       	cp	r24, r20
     ccc:	95 07       	cpc	r25, r21
     cce:	69 f4       	brne	.+26     	; 0xcea <malloc+0x54>
     cd0:	10 97       	sbiw	r26, 0x00	; 0
     cd2:	31 f0       	breq	.+12     	; 0xce0 <malloc+0x4a>
     cd4:	12 96       	adiw	r26, 0x02	; 2
     cd6:	0c 93       	st	X, r16
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	13 96       	adiw	r26, 0x03	; 3
     cdc:	1c 93       	st	X, r17
     cde:	27 c0       	rjmp	.+78     	; 0xd2e <malloc+0x98>
     ce0:	00 93 e4 03 	sts	0x03E4, r16	; 0x8003e4 <__flp>
     ce4:	10 93 e5 03 	sts	0x03E5, r17	; 0x8003e5 <__flp+0x1>
     ce8:	22 c0       	rjmp	.+68     	; 0xd2e <malloc+0x98>
     cea:	21 15       	cp	r18, r1
     cec:	31 05       	cpc	r19, r1
     cee:	19 f0       	breq	.+6      	; 0xcf6 <malloc+0x60>
     cf0:	42 17       	cp	r20, r18
     cf2:	53 07       	cpc	r21, r19
     cf4:	18 f4       	brcc	.+6      	; 0xcfc <malloc+0x66>
     cf6:	9a 01       	movw	r18, r20
     cf8:	bd 01       	movw	r22, r26
     cfa:	ef 01       	movw	r28, r30
     cfc:	df 01       	movw	r26, r30
     cfe:	f8 01       	movw	r30, r16
     d00:	db cf       	rjmp	.-74     	; 0xcb8 <malloc+0x22>
     d02:	21 15       	cp	r18, r1
     d04:	31 05       	cpc	r19, r1
     d06:	f9 f0       	breq	.+62     	; 0xd46 <malloc+0xb0>
     d08:	28 1b       	sub	r18, r24
     d0a:	39 0b       	sbc	r19, r25
     d0c:	24 30       	cpi	r18, 0x04	; 4
     d0e:	31 05       	cpc	r19, r1
     d10:	80 f4       	brcc	.+32     	; 0xd32 <malloc+0x9c>
     d12:	8a 81       	ldd	r24, Y+2	; 0x02
     d14:	9b 81       	ldd	r25, Y+3	; 0x03
     d16:	61 15       	cp	r22, r1
     d18:	71 05       	cpc	r23, r1
     d1a:	21 f0       	breq	.+8      	; 0xd24 <malloc+0x8e>
     d1c:	fb 01       	movw	r30, r22
     d1e:	93 83       	std	Z+3, r25	; 0x03
     d20:	82 83       	std	Z+2, r24	; 0x02
     d22:	04 c0       	rjmp	.+8      	; 0xd2c <malloc+0x96>
     d24:	90 93 e5 03 	sts	0x03E5, r25	; 0x8003e5 <__flp+0x1>
     d28:	80 93 e4 03 	sts	0x03E4, r24	; 0x8003e4 <__flp>
     d2c:	fe 01       	movw	r30, r28
     d2e:	32 96       	adiw	r30, 0x02	; 2
     d30:	44 c0       	rjmp	.+136    	; 0xdba <malloc+0x124>
     d32:	fe 01       	movw	r30, r28
     d34:	e2 0f       	add	r30, r18
     d36:	f3 1f       	adc	r31, r19
     d38:	81 93       	st	Z+, r24
     d3a:	91 93       	st	Z+, r25
     d3c:	22 50       	subi	r18, 0x02	; 2
     d3e:	31 09       	sbc	r19, r1
     d40:	39 83       	std	Y+1, r19	; 0x01
     d42:	28 83       	st	Y, r18
     d44:	3a c0       	rjmp	.+116    	; 0xdba <malloc+0x124>
     d46:	20 91 e2 03 	lds	r18, 0x03E2	; 0x8003e2 <__brkval>
     d4a:	30 91 e3 03 	lds	r19, 0x03E3	; 0x8003e3 <__brkval+0x1>
     d4e:	23 2b       	or	r18, r19
     d50:	41 f4       	brne	.+16     	; 0xd62 <malloc+0xcc>
     d52:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     d56:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     d5a:	30 93 e3 03 	sts	0x03E3, r19	; 0x8003e3 <__brkval+0x1>
     d5e:	20 93 e2 03 	sts	0x03E2, r18	; 0x8003e2 <__brkval>
     d62:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     d66:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     d6a:	21 15       	cp	r18, r1
     d6c:	31 05       	cpc	r19, r1
     d6e:	41 f4       	brne	.+16     	; 0xd80 <malloc+0xea>
     d70:	2d b7       	in	r18, 0x3d	; 61
     d72:	3e b7       	in	r19, 0x3e	; 62
     d74:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     d78:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     d7c:	24 1b       	sub	r18, r20
     d7e:	35 0b       	sbc	r19, r21
     d80:	e0 91 e2 03 	lds	r30, 0x03E2	; 0x8003e2 <__brkval>
     d84:	f0 91 e3 03 	lds	r31, 0x03E3	; 0x8003e3 <__brkval+0x1>
     d88:	e2 17       	cp	r30, r18
     d8a:	f3 07       	cpc	r31, r19
     d8c:	a0 f4       	brcc	.+40     	; 0xdb6 <malloc+0x120>
     d8e:	2e 1b       	sub	r18, r30
     d90:	3f 0b       	sbc	r19, r31
     d92:	28 17       	cp	r18, r24
     d94:	39 07       	cpc	r19, r25
     d96:	78 f0       	brcs	.+30     	; 0xdb6 <malloc+0x120>
     d98:	ac 01       	movw	r20, r24
     d9a:	4e 5f       	subi	r20, 0xFE	; 254
     d9c:	5f 4f       	sbci	r21, 0xFF	; 255
     d9e:	24 17       	cp	r18, r20
     da0:	35 07       	cpc	r19, r21
     da2:	48 f0       	brcs	.+18     	; 0xdb6 <malloc+0x120>
     da4:	4e 0f       	add	r20, r30
     da6:	5f 1f       	adc	r21, r31
     da8:	50 93 e3 03 	sts	0x03E3, r21	; 0x8003e3 <__brkval+0x1>
     dac:	40 93 e2 03 	sts	0x03E2, r20	; 0x8003e2 <__brkval>
     db0:	81 93       	st	Z+, r24
     db2:	91 93       	st	Z+, r25
     db4:	02 c0       	rjmp	.+4      	; 0xdba <malloc+0x124>
     db6:	e0 e0       	ldi	r30, 0x00	; 0
     db8:	f0 e0       	ldi	r31, 0x00	; 0
     dba:	cf 01       	movw	r24, r30
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	0f 91       	pop	r16
     dc4:	08 95       	ret

00000dc6 <free>:
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	00 97       	sbiw	r24, 0x00	; 0
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <free+0xa>
     dce:	81 c0       	rjmp	.+258    	; 0xed2 <free+0x10c>
     dd0:	fc 01       	movw	r30, r24
     dd2:	32 97       	sbiw	r30, 0x02	; 2
     dd4:	13 82       	std	Z+3, r1	; 0x03
     dd6:	12 82       	std	Z+2, r1	; 0x02
     dd8:	a0 91 e4 03 	lds	r26, 0x03E4	; 0x8003e4 <__flp>
     ddc:	b0 91 e5 03 	lds	r27, 0x03E5	; 0x8003e5 <__flp+0x1>
     de0:	10 97       	sbiw	r26, 0x00	; 0
     de2:	81 f4       	brne	.+32     	; 0xe04 <free+0x3e>
     de4:	20 81       	ld	r18, Z
     de6:	31 81       	ldd	r19, Z+1	; 0x01
     de8:	82 0f       	add	r24, r18
     dea:	93 1f       	adc	r25, r19
     dec:	20 91 e2 03 	lds	r18, 0x03E2	; 0x8003e2 <__brkval>
     df0:	30 91 e3 03 	lds	r19, 0x03E3	; 0x8003e3 <__brkval+0x1>
     df4:	28 17       	cp	r18, r24
     df6:	39 07       	cpc	r19, r25
     df8:	51 f5       	brne	.+84     	; 0xe4e <free+0x88>
     dfa:	f0 93 e3 03 	sts	0x03E3, r31	; 0x8003e3 <__brkval+0x1>
     dfe:	e0 93 e2 03 	sts	0x03E2, r30	; 0x8003e2 <__brkval>
     e02:	67 c0       	rjmp	.+206    	; 0xed2 <free+0x10c>
     e04:	ed 01       	movw	r28, r26
     e06:	20 e0       	ldi	r18, 0x00	; 0
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	ce 17       	cp	r28, r30
     e0c:	df 07       	cpc	r29, r31
     e0e:	40 f4       	brcc	.+16     	; 0xe20 <free+0x5a>
     e10:	4a 81       	ldd	r20, Y+2	; 0x02
     e12:	5b 81       	ldd	r21, Y+3	; 0x03
     e14:	9e 01       	movw	r18, r28
     e16:	41 15       	cp	r20, r1
     e18:	51 05       	cpc	r21, r1
     e1a:	f1 f0       	breq	.+60     	; 0xe58 <free+0x92>
     e1c:	ea 01       	movw	r28, r20
     e1e:	f5 cf       	rjmp	.-22     	; 0xe0a <free+0x44>
     e20:	d3 83       	std	Z+3, r29	; 0x03
     e22:	c2 83       	std	Z+2, r28	; 0x02
     e24:	40 81       	ld	r20, Z
     e26:	51 81       	ldd	r21, Z+1	; 0x01
     e28:	84 0f       	add	r24, r20
     e2a:	95 1f       	adc	r25, r21
     e2c:	c8 17       	cp	r28, r24
     e2e:	d9 07       	cpc	r29, r25
     e30:	59 f4       	brne	.+22     	; 0xe48 <free+0x82>
     e32:	88 81       	ld	r24, Y
     e34:	99 81       	ldd	r25, Y+1	; 0x01
     e36:	84 0f       	add	r24, r20
     e38:	95 1f       	adc	r25, r21
     e3a:	02 96       	adiw	r24, 0x02	; 2
     e3c:	91 83       	std	Z+1, r25	; 0x01
     e3e:	80 83       	st	Z, r24
     e40:	8a 81       	ldd	r24, Y+2	; 0x02
     e42:	9b 81       	ldd	r25, Y+3	; 0x03
     e44:	93 83       	std	Z+3, r25	; 0x03
     e46:	82 83       	std	Z+2, r24	; 0x02
     e48:	21 15       	cp	r18, r1
     e4a:	31 05       	cpc	r19, r1
     e4c:	29 f4       	brne	.+10     	; 0xe58 <free+0x92>
     e4e:	f0 93 e5 03 	sts	0x03E5, r31	; 0x8003e5 <__flp+0x1>
     e52:	e0 93 e4 03 	sts	0x03E4, r30	; 0x8003e4 <__flp>
     e56:	3d c0       	rjmp	.+122    	; 0xed2 <free+0x10c>
     e58:	e9 01       	movw	r28, r18
     e5a:	fb 83       	std	Y+3, r31	; 0x03
     e5c:	ea 83       	std	Y+2, r30	; 0x02
     e5e:	49 91       	ld	r20, Y+
     e60:	59 91       	ld	r21, Y+
     e62:	c4 0f       	add	r28, r20
     e64:	d5 1f       	adc	r29, r21
     e66:	ec 17       	cp	r30, r28
     e68:	fd 07       	cpc	r31, r29
     e6a:	61 f4       	brne	.+24     	; 0xe84 <free+0xbe>
     e6c:	80 81       	ld	r24, Z
     e6e:	91 81       	ldd	r25, Z+1	; 0x01
     e70:	84 0f       	add	r24, r20
     e72:	95 1f       	adc	r25, r21
     e74:	02 96       	adiw	r24, 0x02	; 2
     e76:	e9 01       	movw	r28, r18
     e78:	99 83       	std	Y+1, r25	; 0x01
     e7a:	88 83       	st	Y, r24
     e7c:	82 81       	ldd	r24, Z+2	; 0x02
     e7e:	93 81       	ldd	r25, Z+3	; 0x03
     e80:	9b 83       	std	Y+3, r25	; 0x03
     e82:	8a 83       	std	Y+2, r24	; 0x02
     e84:	e0 e0       	ldi	r30, 0x00	; 0
     e86:	f0 e0       	ldi	r31, 0x00	; 0
     e88:	12 96       	adiw	r26, 0x02	; 2
     e8a:	8d 91       	ld	r24, X+
     e8c:	9c 91       	ld	r25, X
     e8e:	13 97       	sbiw	r26, 0x03	; 3
     e90:	00 97       	sbiw	r24, 0x00	; 0
     e92:	19 f0       	breq	.+6      	; 0xe9a <free+0xd4>
     e94:	fd 01       	movw	r30, r26
     e96:	dc 01       	movw	r26, r24
     e98:	f7 cf       	rjmp	.-18     	; 0xe88 <free+0xc2>
     e9a:	8d 91       	ld	r24, X+
     e9c:	9c 91       	ld	r25, X
     e9e:	11 97       	sbiw	r26, 0x01	; 1
     ea0:	9d 01       	movw	r18, r26
     ea2:	2e 5f       	subi	r18, 0xFE	; 254
     ea4:	3f 4f       	sbci	r19, 0xFF	; 255
     ea6:	82 0f       	add	r24, r18
     ea8:	93 1f       	adc	r25, r19
     eaa:	20 91 e2 03 	lds	r18, 0x03E2	; 0x8003e2 <__brkval>
     eae:	30 91 e3 03 	lds	r19, 0x03E3	; 0x8003e3 <__brkval+0x1>
     eb2:	28 17       	cp	r18, r24
     eb4:	39 07       	cpc	r19, r25
     eb6:	69 f4       	brne	.+26     	; 0xed2 <free+0x10c>
     eb8:	30 97       	sbiw	r30, 0x00	; 0
     eba:	29 f4       	brne	.+10     	; 0xec6 <free+0x100>
     ebc:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <__flp+0x1>
     ec0:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <__flp>
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <free+0x104>
     ec6:	13 82       	std	Z+3, r1	; 0x03
     ec8:	12 82       	std	Z+2, r1	; 0x02
     eca:	b0 93 e3 03 	sts	0x03E3, r27	; 0x8003e3 <__brkval+0x1>
     ece:	a0 93 e2 03 	sts	0x03E2, r26	; 0x8003e2 <__brkval>
     ed2:	df 91       	pop	r29
     ed4:	cf 91       	pop	r28
     ed6:	08 95       	ret

00000ed8 <memset>:
     ed8:	dc 01       	movw	r26, r24
     eda:	01 c0       	rjmp	.+2      	; 0xede <memset+0x6>
     edc:	6d 93       	st	X+, r22
     ede:	41 50       	subi	r20, 0x01	; 1
     ee0:	50 40       	sbci	r21, 0x00	; 0
     ee2:	e0 f7       	brcc	.-8      	; 0xedc <memset+0x4>
     ee4:	08 95       	ret

00000ee6 <printf>:
     ee6:	cf 93       	push	r28
     ee8:	df 93       	push	r29
     eea:	cd b7       	in	r28, 0x3d	; 61
     eec:	de b7       	in	r29, 0x3e	; 62
     eee:	ae 01       	movw	r20, r28
     ef0:	4a 5f       	subi	r20, 0xFA	; 250
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	fa 01       	movw	r30, r20
     ef6:	61 91       	ld	r22, Z+
     ef8:	71 91       	ld	r23, Z+
     efa:	af 01       	movw	r20, r30
     efc:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <__iob+0x2>
     f00:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <__iob+0x3>
     f04:	33 d0       	rcall	.+102    	; 0xf6c <vfprintf>
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	08 95       	ret

00000f0c <puts>:
     f0c:	0f 93       	push	r16
     f0e:	1f 93       	push	r17
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	e0 91 e8 03 	lds	r30, 0x03E8	; 0x8003e8 <__iob+0x2>
     f18:	f0 91 e9 03 	lds	r31, 0x03E9	; 0x8003e9 <__iob+0x3>
     f1c:	23 81       	ldd	r18, Z+3	; 0x03
     f1e:	21 ff       	sbrs	r18, 1
     f20:	1b c0       	rjmp	.+54     	; 0xf58 <puts+0x4c>
     f22:	8c 01       	movw	r16, r24
     f24:	d0 e0       	ldi	r29, 0x00	; 0
     f26:	c0 e0       	ldi	r28, 0x00	; 0
     f28:	f8 01       	movw	r30, r16
     f2a:	81 91       	ld	r24, Z+
     f2c:	8f 01       	movw	r16, r30
     f2e:	60 91 e8 03 	lds	r22, 0x03E8	; 0x8003e8 <__iob+0x2>
     f32:	70 91 e9 03 	lds	r23, 0x03E9	; 0x8003e9 <__iob+0x3>
     f36:	db 01       	movw	r26, r22
     f38:	18 96       	adiw	r26, 0x08	; 8
     f3a:	ed 91       	ld	r30, X+
     f3c:	fc 91       	ld	r31, X
     f3e:	19 97       	sbiw	r26, 0x09	; 9
     f40:	88 23       	and	r24, r24
     f42:	31 f0       	breq	.+12     	; 0xf50 <puts+0x44>
     f44:	19 95       	eicall
     f46:	89 2b       	or	r24, r25
     f48:	79 f3       	breq	.-34     	; 0xf28 <puts+0x1c>
     f4a:	df ef       	ldi	r29, 0xFF	; 255
     f4c:	cf ef       	ldi	r28, 0xFF	; 255
     f4e:	ec cf       	rjmp	.-40     	; 0xf28 <puts+0x1c>
     f50:	8a e0       	ldi	r24, 0x0A	; 10
     f52:	19 95       	eicall
     f54:	89 2b       	or	r24, r25
     f56:	19 f0       	breq	.+6      	; 0xf5e <puts+0x52>
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <puts+0x56>
     f5e:	8d 2f       	mov	r24, r29
     f60:	9c 2f       	mov	r25, r28
     f62:	df 91       	pop	r29
     f64:	cf 91       	pop	r28
     f66:	1f 91       	pop	r17
     f68:	0f 91       	pop	r16
     f6a:	08 95       	ret

00000f6c <vfprintf>:
     f6c:	2f 92       	push	r2
     f6e:	3f 92       	push	r3
     f70:	4f 92       	push	r4
     f72:	5f 92       	push	r5
     f74:	6f 92       	push	r6
     f76:	7f 92       	push	r7
     f78:	8f 92       	push	r8
     f7a:	9f 92       	push	r9
     f7c:	af 92       	push	r10
     f7e:	bf 92       	push	r11
     f80:	cf 92       	push	r12
     f82:	df 92       	push	r13
     f84:	ef 92       	push	r14
     f86:	ff 92       	push	r15
     f88:	0f 93       	push	r16
     f8a:	1f 93       	push	r17
     f8c:	cf 93       	push	r28
     f8e:	df 93       	push	r29
     f90:	cd b7       	in	r28, 0x3d	; 61
     f92:	de b7       	in	r29, 0x3e	; 62
     f94:	2b 97       	sbiw	r28, 0x0b	; 11
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	f8 94       	cli
     f9a:	de bf       	out	0x3e, r29	; 62
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	cd bf       	out	0x3d, r28	; 61
     fa0:	6c 01       	movw	r12, r24
     fa2:	7b 01       	movw	r14, r22
     fa4:	8a 01       	movw	r16, r20
     fa6:	fc 01       	movw	r30, r24
     fa8:	17 82       	std	Z+7, r1	; 0x07
     faa:	16 82       	std	Z+6, r1	; 0x06
     fac:	83 81       	ldd	r24, Z+3	; 0x03
     fae:	81 ff       	sbrs	r24, 1
     fb0:	bf c1       	rjmp	.+894    	; 0x1330 <vfprintf+0x3c4>
     fb2:	ce 01       	movw	r24, r28
     fb4:	01 96       	adiw	r24, 0x01	; 1
     fb6:	3c 01       	movw	r6, r24
     fb8:	f6 01       	movw	r30, r12
     fba:	93 81       	ldd	r25, Z+3	; 0x03
     fbc:	f7 01       	movw	r30, r14
     fbe:	93 fd       	sbrc	r25, 3
     fc0:	85 91       	lpm	r24, Z+
     fc2:	93 ff       	sbrs	r25, 3
     fc4:	81 91       	ld	r24, Z+
     fc6:	7f 01       	movw	r14, r30
     fc8:	88 23       	and	r24, r24
     fca:	09 f4       	brne	.+2      	; 0xfce <vfprintf+0x62>
     fcc:	ad c1       	rjmp	.+858    	; 0x1328 <vfprintf+0x3bc>
     fce:	85 32       	cpi	r24, 0x25	; 37
     fd0:	39 f4       	brne	.+14     	; 0xfe0 <vfprintf+0x74>
     fd2:	93 fd       	sbrc	r25, 3
     fd4:	85 91       	lpm	r24, Z+
     fd6:	93 ff       	sbrs	r25, 3
     fd8:	81 91       	ld	r24, Z+
     fda:	7f 01       	movw	r14, r30
     fdc:	85 32       	cpi	r24, 0x25	; 37
     fde:	21 f4       	brne	.+8      	; 0xfe8 <vfprintf+0x7c>
     fe0:	b6 01       	movw	r22, r12
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	d6 d1       	rcall	.+940    	; 0x1392 <fputc>
     fe6:	e8 cf       	rjmp	.-48     	; 0xfb8 <vfprintf+0x4c>
     fe8:	91 2c       	mov	r9, r1
     fea:	21 2c       	mov	r2, r1
     fec:	31 2c       	mov	r3, r1
     fee:	ff e1       	ldi	r31, 0x1F	; 31
     ff0:	f3 15       	cp	r31, r3
     ff2:	d8 f0       	brcs	.+54     	; 0x102a <vfprintf+0xbe>
     ff4:	8b 32       	cpi	r24, 0x2B	; 43
     ff6:	79 f0       	breq	.+30     	; 0x1016 <vfprintf+0xaa>
     ff8:	38 f4       	brcc	.+14     	; 0x1008 <vfprintf+0x9c>
     ffa:	80 32       	cpi	r24, 0x20	; 32
     ffc:	79 f0       	breq	.+30     	; 0x101c <vfprintf+0xb0>
     ffe:	83 32       	cpi	r24, 0x23	; 35
    1000:	a1 f4       	brne	.+40     	; 0x102a <vfprintf+0xbe>
    1002:	23 2d       	mov	r18, r3
    1004:	20 61       	ori	r18, 0x10	; 16
    1006:	1d c0       	rjmp	.+58     	; 0x1042 <vfprintf+0xd6>
    1008:	8d 32       	cpi	r24, 0x2D	; 45
    100a:	61 f0       	breq	.+24     	; 0x1024 <vfprintf+0xb8>
    100c:	80 33       	cpi	r24, 0x30	; 48
    100e:	69 f4       	brne	.+26     	; 0x102a <vfprintf+0xbe>
    1010:	23 2d       	mov	r18, r3
    1012:	21 60       	ori	r18, 0x01	; 1
    1014:	16 c0       	rjmp	.+44     	; 0x1042 <vfprintf+0xd6>
    1016:	83 2d       	mov	r24, r3
    1018:	82 60       	ori	r24, 0x02	; 2
    101a:	38 2e       	mov	r3, r24
    101c:	e3 2d       	mov	r30, r3
    101e:	e4 60       	ori	r30, 0x04	; 4
    1020:	3e 2e       	mov	r3, r30
    1022:	2a c0       	rjmp	.+84     	; 0x1078 <vfprintf+0x10c>
    1024:	f3 2d       	mov	r31, r3
    1026:	f8 60       	ori	r31, 0x08	; 8
    1028:	1d c0       	rjmp	.+58     	; 0x1064 <vfprintf+0xf8>
    102a:	37 fc       	sbrc	r3, 7
    102c:	2d c0       	rjmp	.+90     	; 0x1088 <vfprintf+0x11c>
    102e:	20 ed       	ldi	r18, 0xD0	; 208
    1030:	28 0f       	add	r18, r24
    1032:	2a 30       	cpi	r18, 0x0A	; 10
    1034:	40 f0       	brcs	.+16     	; 0x1046 <vfprintf+0xda>
    1036:	8e 32       	cpi	r24, 0x2E	; 46
    1038:	b9 f4       	brne	.+46     	; 0x1068 <vfprintf+0xfc>
    103a:	36 fc       	sbrc	r3, 6
    103c:	75 c1       	rjmp	.+746    	; 0x1328 <vfprintf+0x3bc>
    103e:	23 2d       	mov	r18, r3
    1040:	20 64       	ori	r18, 0x40	; 64
    1042:	32 2e       	mov	r3, r18
    1044:	19 c0       	rjmp	.+50     	; 0x1078 <vfprintf+0x10c>
    1046:	36 fe       	sbrs	r3, 6
    1048:	06 c0       	rjmp	.+12     	; 0x1056 <vfprintf+0xea>
    104a:	8a e0       	ldi	r24, 0x0A	; 10
    104c:	98 9e       	mul	r9, r24
    104e:	20 0d       	add	r18, r0
    1050:	11 24       	eor	r1, r1
    1052:	92 2e       	mov	r9, r18
    1054:	11 c0       	rjmp	.+34     	; 0x1078 <vfprintf+0x10c>
    1056:	ea e0       	ldi	r30, 0x0A	; 10
    1058:	2e 9e       	mul	r2, r30
    105a:	20 0d       	add	r18, r0
    105c:	11 24       	eor	r1, r1
    105e:	22 2e       	mov	r2, r18
    1060:	f3 2d       	mov	r31, r3
    1062:	f0 62       	ori	r31, 0x20	; 32
    1064:	3f 2e       	mov	r3, r31
    1066:	08 c0       	rjmp	.+16     	; 0x1078 <vfprintf+0x10c>
    1068:	8c 36       	cpi	r24, 0x6C	; 108
    106a:	21 f4       	brne	.+8      	; 0x1074 <vfprintf+0x108>
    106c:	83 2d       	mov	r24, r3
    106e:	80 68       	ori	r24, 0x80	; 128
    1070:	38 2e       	mov	r3, r24
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <vfprintf+0x10c>
    1074:	88 36       	cpi	r24, 0x68	; 104
    1076:	41 f4       	brne	.+16     	; 0x1088 <vfprintf+0x11c>
    1078:	f7 01       	movw	r30, r14
    107a:	93 fd       	sbrc	r25, 3
    107c:	85 91       	lpm	r24, Z+
    107e:	93 ff       	sbrs	r25, 3
    1080:	81 91       	ld	r24, Z+
    1082:	7f 01       	movw	r14, r30
    1084:	81 11       	cpse	r24, r1
    1086:	b3 cf       	rjmp	.-154    	; 0xfee <vfprintf+0x82>
    1088:	98 2f       	mov	r25, r24
    108a:	9f 7d       	andi	r25, 0xDF	; 223
    108c:	95 54       	subi	r25, 0x45	; 69
    108e:	93 30       	cpi	r25, 0x03	; 3
    1090:	28 f4       	brcc	.+10     	; 0x109c <vfprintf+0x130>
    1092:	0c 5f       	subi	r16, 0xFC	; 252
    1094:	1f 4f       	sbci	r17, 0xFF	; 255
    1096:	9f e3       	ldi	r25, 0x3F	; 63
    1098:	99 83       	std	Y+1, r25	; 0x01
    109a:	0d c0       	rjmp	.+26     	; 0x10b6 <vfprintf+0x14a>
    109c:	83 36       	cpi	r24, 0x63	; 99
    109e:	31 f0       	breq	.+12     	; 0x10ac <vfprintf+0x140>
    10a0:	83 37       	cpi	r24, 0x73	; 115
    10a2:	71 f0       	breq	.+28     	; 0x10c0 <vfprintf+0x154>
    10a4:	83 35       	cpi	r24, 0x53	; 83
    10a6:	09 f0       	breq	.+2      	; 0x10aa <vfprintf+0x13e>
    10a8:	55 c0       	rjmp	.+170    	; 0x1154 <vfprintf+0x1e8>
    10aa:	20 c0       	rjmp	.+64     	; 0x10ec <vfprintf+0x180>
    10ac:	f8 01       	movw	r30, r16
    10ae:	80 81       	ld	r24, Z
    10b0:	89 83       	std	Y+1, r24	; 0x01
    10b2:	0e 5f       	subi	r16, 0xFE	; 254
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	88 24       	eor	r8, r8
    10b8:	83 94       	inc	r8
    10ba:	91 2c       	mov	r9, r1
    10bc:	53 01       	movw	r10, r6
    10be:	12 c0       	rjmp	.+36     	; 0x10e4 <vfprintf+0x178>
    10c0:	28 01       	movw	r4, r16
    10c2:	f2 e0       	ldi	r31, 0x02	; 2
    10c4:	4f 0e       	add	r4, r31
    10c6:	51 1c       	adc	r5, r1
    10c8:	f8 01       	movw	r30, r16
    10ca:	a0 80       	ld	r10, Z
    10cc:	b1 80       	ldd	r11, Z+1	; 0x01
    10ce:	36 fe       	sbrs	r3, 6
    10d0:	03 c0       	rjmp	.+6      	; 0x10d8 <vfprintf+0x16c>
    10d2:	69 2d       	mov	r22, r9
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <vfprintf+0x170>
    10d8:	6f ef       	ldi	r22, 0xFF	; 255
    10da:	7f ef       	ldi	r23, 0xFF	; 255
    10dc:	c5 01       	movw	r24, r10
    10de:	4e d1       	rcall	.+668    	; 0x137c <strnlen>
    10e0:	4c 01       	movw	r8, r24
    10e2:	82 01       	movw	r16, r4
    10e4:	f3 2d       	mov	r31, r3
    10e6:	ff 77       	andi	r31, 0x7F	; 127
    10e8:	3f 2e       	mov	r3, r31
    10ea:	15 c0       	rjmp	.+42     	; 0x1116 <vfprintf+0x1aa>
    10ec:	28 01       	movw	r4, r16
    10ee:	22 e0       	ldi	r18, 0x02	; 2
    10f0:	42 0e       	add	r4, r18
    10f2:	51 1c       	adc	r5, r1
    10f4:	f8 01       	movw	r30, r16
    10f6:	a0 80       	ld	r10, Z
    10f8:	b1 80       	ldd	r11, Z+1	; 0x01
    10fa:	36 fe       	sbrs	r3, 6
    10fc:	03 c0       	rjmp	.+6      	; 0x1104 <vfprintf+0x198>
    10fe:	69 2d       	mov	r22, r9
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfprintf+0x19c>
    1104:	6f ef       	ldi	r22, 0xFF	; 255
    1106:	7f ef       	ldi	r23, 0xFF	; 255
    1108:	c5 01       	movw	r24, r10
    110a:	2d d1       	rcall	.+602    	; 0x1366 <strnlen_P>
    110c:	4c 01       	movw	r8, r24
    110e:	f3 2d       	mov	r31, r3
    1110:	f0 68       	ori	r31, 0x80	; 128
    1112:	3f 2e       	mov	r3, r31
    1114:	82 01       	movw	r16, r4
    1116:	33 fc       	sbrc	r3, 3
    1118:	19 c0       	rjmp	.+50     	; 0x114c <vfprintf+0x1e0>
    111a:	82 2d       	mov	r24, r2
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	88 16       	cp	r8, r24
    1120:	99 06       	cpc	r9, r25
    1122:	a0 f4       	brcc	.+40     	; 0x114c <vfprintf+0x1e0>
    1124:	b6 01       	movw	r22, r12
    1126:	80 e2       	ldi	r24, 0x20	; 32
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	33 d1       	rcall	.+614    	; 0x1392 <fputc>
    112c:	2a 94       	dec	r2
    112e:	f5 cf       	rjmp	.-22     	; 0x111a <vfprintf+0x1ae>
    1130:	f5 01       	movw	r30, r10
    1132:	37 fc       	sbrc	r3, 7
    1134:	85 91       	lpm	r24, Z+
    1136:	37 fe       	sbrs	r3, 7
    1138:	81 91       	ld	r24, Z+
    113a:	5f 01       	movw	r10, r30
    113c:	b6 01       	movw	r22, r12
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	28 d1       	rcall	.+592    	; 0x1392 <fputc>
    1142:	21 10       	cpse	r2, r1
    1144:	2a 94       	dec	r2
    1146:	21 e0       	ldi	r18, 0x01	; 1
    1148:	82 1a       	sub	r8, r18
    114a:	91 08       	sbc	r9, r1
    114c:	81 14       	cp	r8, r1
    114e:	91 04       	cpc	r9, r1
    1150:	79 f7       	brne	.-34     	; 0x1130 <vfprintf+0x1c4>
    1152:	e1 c0       	rjmp	.+450    	; 0x1316 <vfprintf+0x3aa>
    1154:	84 36       	cpi	r24, 0x64	; 100
    1156:	11 f0       	breq	.+4      	; 0x115c <vfprintf+0x1f0>
    1158:	89 36       	cpi	r24, 0x69	; 105
    115a:	39 f5       	brne	.+78     	; 0x11aa <vfprintf+0x23e>
    115c:	f8 01       	movw	r30, r16
    115e:	37 fe       	sbrs	r3, 7
    1160:	07 c0       	rjmp	.+14     	; 0x1170 <vfprintf+0x204>
    1162:	60 81       	ld	r22, Z
    1164:	71 81       	ldd	r23, Z+1	; 0x01
    1166:	82 81       	ldd	r24, Z+2	; 0x02
    1168:	93 81       	ldd	r25, Z+3	; 0x03
    116a:	0c 5f       	subi	r16, 0xFC	; 252
    116c:	1f 4f       	sbci	r17, 0xFF	; 255
    116e:	08 c0       	rjmp	.+16     	; 0x1180 <vfprintf+0x214>
    1170:	60 81       	ld	r22, Z
    1172:	71 81       	ldd	r23, Z+1	; 0x01
    1174:	07 2e       	mov	r0, r23
    1176:	00 0c       	add	r0, r0
    1178:	88 0b       	sbc	r24, r24
    117a:	99 0b       	sbc	r25, r25
    117c:	0e 5f       	subi	r16, 0xFE	; 254
    117e:	1f 4f       	sbci	r17, 0xFF	; 255
    1180:	f3 2d       	mov	r31, r3
    1182:	ff 76       	andi	r31, 0x6F	; 111
    1184:	3f 2e       	mov	r3, r31
    1186:	97 ff       	sbrs	r25, 7
    1188:	09 c0       	rjmp	.+18     	; 0x119c <vfprintf+0x230>
    118a:	90 95       	com	r25
    118c:	80 95       	com	r24
    118e:	70 95       	com	r23
    1190:	61 95       	neg	r22
    1192:	7f 4f       	sbci	r23, 0xFF	; 255
    1194:	8f 4f       	sbci	r24, 0xFF	; 255
    1196:	9f 4f       	sbci	r25, 0xFF	; 255
    1198:	f0 68       	ori	r31, 0x80	; 128
    119a:	3f 2e       	mov	r3, r31
    119c:	2a e0       	ldi	r18, 0x0A	; 10
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	a3 01       	movw	r20, r6
    11a2:	33 d1       	rcall	.+614    	; 0x140a <__ultoa_invert>
    11a4:	88 2e       	mov	r8, r24
    11a6:	86 18       	sub	r8, r6
    11a8:	44 c0       	rjmp	.+136    	; 0x1232 <vfprintf+0x2c6>
    11aa:	85 37       	cpi	r24, 0x75	; 117
    11ac:	31 f4       	brne	.+12     	; 0x11ba <vfprintf+0x24e>
    11ae:	23 2d       	mov	r18, r3
    11b0:	2f 7e       	andi	r18, 0xEF	; 239
    11b2:	b2 2e       	mov	r11, r18
    11b4:	2a e0       	ldi	r18, 0x0A	; 10
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	25 c0       	rjmp	.+74     	; 0x1204 <vfprintf+0x298>
    11ba:	93 2d       	mov	r25, r3
    11bc:	99 7f       	andi	r25, 0xF9	; 249
    11be:	b9 2e       	mov	r11, r25
    11c0:	8f 36       	cpi	r24, 0x6F	; 111
    11c2:	c1 f0       	breq	.+48     	; 0x11f4 <vfprintf+0x288>
    11c4:	18 f4       	brcc	.+6      	; 0x11cc <vfprintf+0x260>
    11c6:	88 35       	cpi	r24, 0x58	; 88
    11c8:	79 f0       	breq	.+30     	; 0x11e8 <vfprintf+0x27c>
    11ca:	ae c0       	rjmp	.+348    	; 0x1328 <vfprintf+0x3bc>
    11cc:	80 37       	cpi	r24, 0x70	; 112
    11ce:	19 f0       	breq	.+6      	; 0x11d6 <vfprintf+0x26a>
    11d0:	88 37       	cpi	r24, 0x78	; 120
    11d2:	21 f0       	breq	.+8      	; 0x11dc <vfprintf+0x270>
    11d4:	a9 c0       	rjmp	.+338    	; 0x1328 <vfprintf+0x3bc>
    11d6:	e9 2f       	mov	r30, r25
    11d8:	e0 61       	ori	r30, 0x10	; 16
    11da:	be 2e       	mov	r11, r30
    11dc:	b4 fe       	sbrs	r11, 4
    11de:	0d c0       	rjmp	.+26     	; 0x11fa <vfprintf+0x28e>
    11e0:	fb 2d       	mov	r31, r11
    11e2:	f4 60       	ori	r31, 0x04	; 4
    11e4:	bf 2e       	mov	r11, r31
    11e6:	09 c0       	rjmp	.+18     	; 0x11fa <vfprintf+0x28e>
    11e8:	34 fe       	sbrs	r3, 4
    11ea:	0a c0       	rjmp	.+20     	; 0x1200 <vfprintf+0x294>
    11ec:	29 2f       	mov	r18, r25
    11ee:	26 60       	ori	r18, 0x06	; 6
    11f0:	b2 2e       	mov	r11, r18
    11f2:	06 c0       	rjmp	.+12     	; 0x1200 <vfprintf+0x294>
    11f4:	28 e0       	ldi	r18, 0x08	; 8
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	05 c0       	rjmp	.+10     	; 0x1204 <vfprintf+0x298>
    11fa:	20 e1       	ldi	r18, 0x10	; 16
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <vfprintf+0x298>
    1200:	20 e1       	ldi	r18, 0x10	; 16
    1202:	32 e0       	ldi	r19, 0x02	; 2
    1204:	f8 01       	movw	r30, r16
    1206:	b7 fe       	sbrs	r11, 7
    1208:	07 c0       	rjmp	.+14     	; 0x1218 <vfprintf+0x2ac>
    120a:	60 81       	ld	r22, Z
    120c:	71 81       	ldd	r23, Z+1	; 0x01
    120e:	82 81       	ldd	r24, Z+2	; 0x02
    1210:	93 81       	ldd	r25, Z+3	; 0x03
    1212:	0c 5f       	subi	r16, 0xFC	; 252
    1214:	1f 4f       	sbci	r17, 0xFF	; 255
    1216:	06 c0       	rjmp	.+12     	; 0x1224 <vfprintf+0x2b8>
    1218:	60 81       	ld	r22, Z
    121a:	71 81       	ldd	r23, Z+1	; 0x01
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	0e 5f       	subi	r16, 0xFE	; 254
    1222:	1f 4f       	sbci	r17, 0xFF	; 255
    1224:	a3 01       	movw	r20, r6
    1226:	f1 d0       	rcall	.+482    	; 0x140a <__ultoa_invert>
    1228:	88 2e       	mov	r8, r24
    122a:	86 18       	sub	r8, r6
    122c:	fb 2d       	mov	r31, r11
    122e:	ff 77       	andi	r31, 0x7F	; 127
    1230:	3f 2e       	mov	r3, r31
    1232:	36 fe       	sbrs	r3, 6
    1234:	0d c0       	rjmp	.+26     	; 0x1250 <vfprintf+0x2e4>
    1236:	23 2d       	mov	r18, r3
    1238:	2e 7f       	andi	r18, 0xFE	; 254
    123a:	a2 2e       	mov	r10, r18
    123c:	89 14       	cp	r8, r9
    123e:	58 f4       	brcc	.+22     	; 0x1256 <vfprintf+0x2ea>
    1240:	34 fe       	sbrs	r3, 4
    1242:	0b c0       	rjmp	.+22     	; 0x125a <vfprintf+0x2ee>
    1244:	32 fc       	sbrc	r3, 2
    1246:	09 c0       	rjmp	.+18     	; 0x125a <vfprintf+0x2ee>
    1248:	83 2d       	mov	r24, r3
    124a:	8e 7e       	andi	r24, 0xEE	; 238
    124c:	a8 2e       	mov	r10, r24
    124e:	05 c0       	rjmp	.+10     	; 0x125a <vfprintf+0x2ee>
    1250:	b8 2c       	mov	r11, r8
    1252:	a3 2c       	mov	r10, r3
    1254:	03 c0       	rjmp	.+6      	; 0x125c <vfprintf+0x2f0>
    1256:	b8 2c       	mov	r11, r8
    1258:	01 c0       	rjmp	.+2      	; 0x125c <vfprintf+0x2f0>
    125a:	b9 2c       	mov	r11, r9
    125c:	a4 fe       	sbrs	r10, 4
    125e:	0f c0       	rjmp	.+30     	; 0x127e <vfprintf+0x312>
    1260:	fe 01       	movw	r30, r28
    1262:	e8 0d       	add	r30, r8
    1264:	f1 1d       	adc	r31, r1
    1266:	80 81       	ld	r24, Z
    1268:	80 33       	cpi	r24, 0x30	; 48
    126a:	21 f4       	brne	.+8      	; 0x1274 <vfprintf+0x308>
    126c:	9a 2d       	mov	r25, r10
    126e:	99 7e       	andi	r25, 0xE9	; 233
    1270:	a9 2e       	mov	r10, r25
    1272:	09 c0       	rjmp	.+18     	; 0x1286 <vfprintf+0x31a>
    1274:	a2 fe       	sbrs	r10, 2
    1276:	06 c0       	rjmp	.+12     	; 0x1284 <vfprintf+0x318>
    1278:	b3 94       	inc	r11
    127a:	b3 94       	inc	r11
    127c:	04 c0       	rjmp	.+8      	; 0x1286 <vfprintf+0x31a>
    127e:	8a 2d       	mov	r24, r10
    1280:	86 78       	andi	r24, 0x86	; 134
    1282:	09 f0       	breq	.+2      	; 0x1286 <vfprintf+0x31a>
    1284:	b3 94       	inc	r11
    1286:	a3 fc       	sbrc	r10, 3
    1288:	10 c0       	rjmp	.+32     	; 0x12aa <vfprintf+0x33e>
    128a:	a0 fe       	sbrs	r10, 0
    128c:	06 c0       	rjmp	.+12     	; 0x129a <vfprintf+0x32e>
    128e:	b2 14       	cp	r11, r2
    1290:	80 f4       	brcc	.+32     	; 0x12b2 <vfprintf+0x346>
    1292:	28 0c       	add	r2, r8
    1294:	92 2c       	mov	r9, r2
    1296:	9b 18       	sub	r9, r11
    1298:	0d c0       	rjmp	.+26     	; 0x12b4 <vfprintf+0x348>
    129a:	b2 14       	cp	r11, r2
    129c:	58 f4       	brcc	.+22     	; 0x12b4 <vfprintf+0x348>
    129e:	b6 01       	movw	r22, r12
    12a0:	80 e2       	ldi	r24, 0x20	; 32
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	76 d0       	rcall	.+236    	; 0x1392 <fputc>
    12a6:	b3 94       	inc	r11
    12a8:	f8 cf       	rjmp	.-16     	; 0x129a <vfprintf+0x32e>
    12aa:	b2 14       	cp	r11, r2
    12ac:	18 f4       	brcc	.+6      	; 0x12b4 <vfprintf+0x348>
    12ae:	2b 18       	sub	r2, r11
    12b0:	02 c0       	rjmp	.+4      	; 0x12b6 <vfprintf+0x34a>
    12b2:	98 2c       	mov	r9, r8
    12b4:	21 2c       	mov	r2, r1
    12b6:	a4 fe       	sbrs	r10, 4
    12b8:	0f c0       	rjmp	.+30     	; 0x12d8 <vfprintf+0x36c>
    12ba:	b6 01       	movw	r22, r12
    12bc:	80 e3       	ldi	r24, 0x30	; 48
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	68 d0       	rcall	.+208    	; 0x1392 <fputc>
    12c2:	a2 fe       	sbrs	r10, 2
    12c4:	16 c0       	rjmp	.+44     	; 0x12f2 <vfprintf+0x386>
    12c6:	a1 fc       	sbrc	r10, 1
    12c8:	03 c0       	rjmp	.+6      	; 0x12d0 <vfprintf+0x364>
    12ca:	88 e7       	ldi	r24, 0x78	; 120
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <vfprintf+0x368>
    12d0:	88 e5       	ldi	r24, 0x58	; 88
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	b6 01       	movw	r22, r12
    12d6:	0c c0       	rjmp	.+24     	; 0x12f0 <vfprintf+0x384>
    12d8:	8a 2d       	mov	r24, r10
    12da:	86 78       	andi	r24, 0x86	; 134
    12dc:	51 f0       	breq	.+20     	; 0x12f2 <vfprintf+0x386>
    12de:	a1 fe       	sbrs	r10, 1
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <vfprintf+0x37a>
    12e2:	8b e2       	ldi	r24, 0x2B	; 43
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <vfprintf+0x37c>
    12e6:	80 e2       	ldi	r24, 0x20	; 32
    12e8:	a7 fc       	sbrc	r10, 7
    12ea:	8d e2       	ldi	r24, 0x2D	; 45
    12ec:	b6 01       	movw	r22, r12
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	50 d0       	rcall	.+160    	; 0x1392 <fputc>
    12f2:	89 14       	cp	r8, r9
    12f4:	30 f4       	brcc	.+12     	; 0x1302 <vfprintf+0x396>
    12f6:	b6 01       	movw	r22, r12
    12f8:	80 e3       	ldi	r24, 0x30	; 48
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	4a d0       	rcall	.+148    	; 0x1392 <fputc>
    12fe:	9a 94       	dec	r9
    1300:	f8 cf       	rjmp	.-16     	; 0x12f2 <vfprintf+0x386>
    1302:	8a 94       	dec	r8
    1304:	f3 01       	movw	r30, r6
    1306:	e8 0d       	add	r30, r8
    1308:	f1 1d       	adc	r31, r1
    130a:	80 81       	ld	r24, Z
    130c:	b6 01       	movw	r22, r12
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	40 d0       	rcall	.+128    	; 0x1392 <fputc>
    1312:	81 10       	cpse	r8, r1
    1314:	f6 cf       	rjmp	.-20     	; 0x1302 <vfprintf+0x396>
    1316:	22 20       	and	r2, r2
    1318:	09 f4       	brne	.+2      	; 0x131c <vfprintf+0x3b0>
    131a:	4e ce       	rjmp	.-868    	; 0xfb8 <vfprintf+0x4c>
    131c:	b6 01       	movw	r22, r12
    131e:	80 e2       	ldi	r24, 0x20	; 32
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	37 d0       	rcall	.+110    	; 0x1392 <fputc>
    1324:	2a 94       	dec	r2
    1326:	f7 cf       	rjmp	.-18     	; 0x1316 <vfprintf+0x3aa>
    1328:	f6 01       	movw	r30, r12
    132a:	86 81       	ldd	r24, Z+6	; 0x06
    132c:	97 81       	ldd	r25, Z+7	; 0x07
    132e:	02 c0       	rjmp	.+4      	; 0x1334 <vfprintf+0x3c8>
    1330:	8f ef       	ldi	r24, 0xFF	; 255
    1332:	9f ef       	ldi	r25, 0xFF	; 255
    1334:	2b 96       	adiw	r28, 0x0b	; 11
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	f8 94       	cli
    133a:	de bf       	out	0x3e, r29	; 62
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	df 91       	pop	r29
    1342:	cf 91       	pop	r28
    1344:	1f 91       	pop	r17
    1346:	0f 91       	pop	r16
    1348:	ff 90       	pop	r15
    134a:	ef 90       	pop	r14
    134c:	df 90       	pop	r13
    134e:	cf 90       	pop	r12
    1350:	bf 90       	pop	r11
    1352:	af 90       	pop	r10
    1354:	9f 90       	pop	r9
    1356:	8f 90       	pop	r8
    1358:	7f 90       	pop	r7
    135a:	6f 90       	pop	r6
    135c:	5f 90       	pop	r5
    135e:	4f 90       	pop	r4
    1360:	3f 90       	pop	r3
    1362:	2f 90       	pop	r2
    1364:	08 95       	ret

00001366 <strnlen_P>:
    1366:	fc 01       	movw	r30, r24
    1368:	05 90       	lpm	r0, Z+
    136a:	61 50       	subi	r22, 0x01	; 1
    136c:	70 40       	sbci	r23, 0x00	; 0
    136e:	01 10       	cpse	r0, r1
    1370:	d8 f7       	brcc	.-10     	; 0x1368 <strnlen_P+0x2>
    1372:	80 95       	com	r24
    1374:	90 95       	com	r25
    1376:	8e 0f       	add	r24, r30
    1378:	9f 1f       	adc	r25, r31
    137a:	08 95       	ret

0000137c <strnlen>:
    137c:	fc 01       	movw	r30, r24
    137e:	61 50       	subi	r22, 0x01	; 1
    1380:	70 40       	sbci	r23, 0x00	; 0
    1382:	01 90       	ld	r0, Z+
    1384:	01 10       	cpse	r0, r1
    1386:	d8 f7       	brcc	.-10     	; 0x137e <strnlen+0x2>
    1388:	80 95       	com	r24
    138a:	90 95       	com	r25
    138c:	8e 0f       	add	r24, r30
    138e:	9f 1f       	adc	r25, r31
    1390:	08 95       	ret

00001392 <fputc>:
    1392:	0f 93       	push	r16
    1394:	1f 93       	push	r17
    1396:	cf 93       	push	r28
    1398:	df 93       	push	r29
    139a:	fb 01       	movw	r30, r22
    139c:	23 81       	ldd	r18, Z+3	; 0x03
    139e:	21 fd       	sbrc	r18, 1
    13a0:	03 c0       	rjmp	.+6      	; 0x13a8 <fputc+0x16>
    13a2:	8f ef       	ldi	r24, 0xFF	; 255
    13a4:	9f ef       	ldi	r25, 0xFF	; 255
    13a6:	2c c0       	rjmp	.+88     	; 0x1400 <fputc+0x6e>
    13a8:	22 ff       	sbrs	r18, 2
    13aa:	16 c0       	rjmp	.+44     	; 0x13d8 <fputc+0x46>
    13ac:	46 81       	ldd	r20, Z+6	; 0x06
    13ae:	57 81       	ldd	r21, Z+7	; 0x07
    13b0:	24 81       	ldd	r18, Z+4	; 0x04
    13b2:	35 81       	ldd	r19, Z+5	; 0x05
    13b4:	42 17       	cp	r20, r18
    13b6:	53 07       	cpc	r21, r19
    13b8:	44 f4       	brge	.+16     	; 0x13ca <fputc+0x38>
    13ba:	a0 81       	ld	r26, Z
    13bc:	b1 81       	ldd	r27, Z+1	; 0x01
    13be:	9d 01       	movw	r18, r26
    13c0:	2f 5f       	subi	r18, 0xFF	; 255
    13c2:	3f 4f       	sbci	r19, 0xFF	; 255
    13c4:	31 83       	std	Z+1, r19	; 0x01
    13c6:	20 83       	st	Z, r18
    13c8:	8c 93       	st	X, r24
    13ca:	26 81       	ldd	r18, Z+6	; 0x06
    13cc:	37 81       	ldd	r19, Z+7	; 0x07
    13ce:	2f 5f       	subi	r18, 0xFF	; 255
    13d0:	3f 4f       	sbci	r19, 0xFF	; 255
    13d2:	37 83       	std	Z+7, r19	; 0x07
    13d4:	26 83       	std	Z+6, r18	; 0x06
    13d6:	14 c0       	rjmp	.+40     	; 0x1400 <fputc+0x6e>
    13d8:	8b 01       	movw	r16, r22
    13da:	ec 01       	movw	r28, r24
    13dc:	fb 01       	movw	r30, r22
    13de:	00 84       	ldd	r0, Z+8	; 0x08
    13e0:	f1 85       	ldd	r31, Z+9	; 0x09
    13e2:	e0 2d       	mov	r30, r0
    13e4:	19 95       	eicall
    13e6:	89 2b       	or	r24, r25
    13e8:	e1 f6       	brne	.-72     	; 0x13a2 <fputc+0x10>
    13ea:	d8 01       	movw	r26, r16
    13ec:	16 96       	adiw	r26, 0x06	; 6
    13ee:	8d 91       	ld	r24, X+
    13f0:	9c 91       	ld	r25, X
    13f2:	17 97       	sbiw	r26, 0x07	; 7
    13f4:	01 96       	adiw	r24, 0x01	; 1
    13f6:	17 96       	adiw	r26, 0x07	; 7
    13f8:	9c 93       	st	X, r25
    13fa:	8e 93       	st	-X, r24
    13fc:	16 97       	sbiw	r26, 0x06	; 6
    13fe:	ce 01       	movw	r24, r28
    1400:	df 91       	pop	r29
    1402:	cf 91       	pop	r28
    1404:	1f 91       	pop	r17
    1406:	0f 91       	pop	r16
    1408:	08 95       	ret

0000140a <__ultoa_invert>:
    140a:	fa 01       	movw	r30, r20
    140c:	aa 27       	eor	r26, r26
    140e:	28 30       	cpi	r18, 0x08	; 8
    1410:	51 f1       	breq	.+84     	; 0x1466 <__ultoa_invert+0x5c>
    1412:	20 31       	cpi	r18, 0x10	; 16
    1414:	81 f1       	breq	.+96     	; 0x1476 <__ultoa_invert+0x6c>
    1416:	e8 94       	clt
    1418:	6f 93       	push	r22
    141a:	6e 7f       	andi	r22, 0xFE	; 254
    141c:	6e 5f       	subi	r22, 0xFE	; 254
    141e:	7f 4f       	sbci	r23, 0xFF	; 255
    1420:	8f 4f       	sbci	r24, 0xFF	; 255
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	af 4f       	sbci	r26, 0xFF	; 255
    1426:	b1 e0       	ldi	r27, 0x01	; 1
    1428:	3e d0       	rcall	.+124    	; 0x14a6 <__ultoa_invert+0x9c>
    142a:	b4 e0       	ldi	r27, 0x04	; 4
    142c:	3c d0       	rcall	.+120    	; 0x14a6 <__ultoa_invert+0x9c>
    142e:	67 0f       	add	r22, r23
    1430:	78 1f       	adc	r23, r24
    1432:	89 1f       	adc	r24, r25
    1434:	9a 1f       	adc	r25, r26
    1436:	a1 1d       	adc	r26, r1
    1438:	68 0f       	add	r22, r24
    143a:	79 1f       	adc	r23, r25
    143c:	8a 1f       	adc	r24, r26
    143e:	91 1d       	adc	r25, r1
    1440:	a1 1d       	adc	r26, r1
    1442:	6a 0f       	add	r22, r26
    1444:	71 1d       	adc	r23, r1
    1446:	81 1d       	adc	r24, r1
    1448:	91 1d       	adc	r25, r1
    144a:	a1 1d       	adc	r26, r1
    144c:	20 d0       	rcall	.+64     	; 0x148e <__ultoa_invert+0x84>
    144e:	09 f4       	brne	.+2      	; 0x1452 <__ultoa_invert+0x48>
    1450:	68 94       	set
    1452:	3f 91       	pop	r19
    1454:	2a e0       	ldi	r18, 0x0A	; 10
    1456:	26 9f       	mul	r18, r22
    1458:	11 24       	eor	r1, r1
    145a:	30 19       	sub	r19, r0
    145c:	30 5d       	subi	r19, 0xD0	; 208
    145e:	31 93       	st	Z+, r19
    1460:	de f6       	brtc	.-74     	; 0x1418 <__ultoa_invert+0xe>
    1462:	cf 01       	movw	r24, r30
    1464:	08 95       	ret
    1466:	46 2f       	mov	r20, r22
    1468:	47 70       	andi	r20, 0x07	; 7
    146a:	40 5d       	subi	r20, 0xD0	; 208
    146c:	41 93       	st	Z+, r20
    146e:	b3 e0       	ldi	r27, 0x03	; 3
    1470:	0f d0       	rcall	.+30     	; 0x1490 <__ultoa_invert+0x86>
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0x5c>
    1474:	f6 cf       	rjmp	.-20     	; 0x1462 <__ultoa_invert+0x58>
    1476:	46 2f       	mov	r20, r22
    1478:	4f 70       	andi	r20, 0x0F	; 15
    147a:	40 5d       	subi	r20, 0xD0	; 208
    147c:	4a 33       	cpi	r20, 0x3A	; 58
    147e:	18 f0       	brcs	.+6      	; 0x1486 <__ultoa_invert+0x7c>
    1480:	49 5d       	subi	r20, 0xD9	; 217
    1482:	31 fd       	sbrc	r19, 1
    1484:	40 52       	subi	r20, 0x20	; 32
    1486:	41 93       	st	Z+, r20
    1488:	02 d0       	rcall	.+4      	; 0x148e <__ultoa_invert+0x84>
    148a:	a9 f7       	brne	.-22     	; 0x1476 <__ultoa_invert+0x6c>
    148c:	ea cf       	rjmp	.-44     	; 0x1462 <__ultoa_invert+0x58>
    148e:	b4 e0       	ldi	r27, 0x04	; 4
    1490:	a6 95       	lsr	r26
    1492:	97 95       	ror	r25
    1494:	87 95       	ror	r24
    1496:	77 95       	ror	r23
    1498:	67 95       	ror	r22
    149a:	ba 95       	dec	r27
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__ultoa_invert+0x86>
    149e:	00 97       	sbiw	r24, 0x00	; 0
    14a0:	61 05       	cpc	r22, r1
    14a2:	71 05       	cpc	r23, r1
    14a4:	08 95       	ret
    14a6:	9b 01       	movw	r18, r22
    14a8:	ac 01       	movw	r20, r24
    14aa:	0a 2e       	mov	r0, r26
    14ac:	06 94       	lsr	r0
    14ae:	57 95       	ror	r21
    14b0:	47 95       	ror	r20
    14b2:	37 95       	ror	r19
    14b4:	27 95       	ror	r18
    14b6:	ba 95       	dec	r27
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <__ultoa_invert+0xa2>
    14ba:	62 0f       	add	r22, r18
    14bc:	73 1f       	adc	r23, r19
    14be:	84 1f       	adc	r24, r20
    14c0:	95 1f       	adc	r25, r21
    14c2:	a0 1d       	adc	r26, r0
    14c4:	08 95       	ret

000014c6 <_exit>:
    14c6:	f8 94       	cli

000014c8 <__stop_program>:
    14c8:	ff cf       	rjmp	.-2      	; 0x14c8 <__stop_program>
